{"id": "2510.10225", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.10225", "abs": "https://arxiv.org/abs/2510.10225", "authors": ["Jialin Sun", "Yuchen Hu", "Dean You", "Yushu Du", "Hui Wang", "Xinwei Fang", "Weiwei Shan", "Nan Guan", "Zhe Jiang"], "title": "ISAAC: Intelligent, Scalable, Agile, and Accelerated CPU Verification via LLM-aided FPGA Parallelism", "comment": null, "summary": "Functional verification is a critical bottleneck in integrated circuit\ndevelopment, with CPU verification being especially time-intensive and\nlabour-consuming. Industrial practice relies on differential testing for CPU\nverification, yet faces bottlenecks at nearly each stage of the framework\npipeline: front-end stimulus generation lacks micro-architectural awareness,\nyielding low-quality and redundant tests that impede coverage closure and miss\ncorner cases. Meanwhile, back-end simulation infrastructure, even with FPGA\nacceleration, often stalls on long-running tests and offers limited visibility,\ndelaying feedback and prolonging the debugging cycle. Here, we present ISAAC, a\nfull-stack, Large Language Model (LLM)-aided CPU verification framework with\nFPGA parallelism, from bug categorisation and stimulus generation to simulation\ninfrastructure. To do so, we presented a multi-agent stimulus engine in ISAAC's\nfront-end, infused with micro-architectural knowledge and historical bug\npatterns, generating highly targeted tests that rapidly achieve coverage goals\nand capture elusive corner cases. In ISAAC's back-end, we introduce a\nlightweight forward-snapshot mechanism and a decoupled co-simulation\narchitecture between the Instruction Set Simulator (ISS) and the Design Under\nTest (DUT), enabling a single ISS to drive multiple DUTs in parallel. By\neliminating long-tail test bottlenecks and exploiting FPGA parallelism, the\nsimulation throughput is significantly improved. As a demonstration, we used\nISAAC to verify a mature CPU that has undergone multiple successful tape-outs.\nResults show up to 17,536x speed-up over software RTL simulation, while\ndetecting several previously unknown bugs, two of which are reported in this\npaper."}
{"id": "2510.10623", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.10623", "abs": "https://arxiv.org/abs/2510.10623", "authors": ["Ahmed J. Abdelmaksoud", "Cristian Sestito", "Shiwei Wang", "Themis Prodromakis"], "title": "ADiP: Adaptive Precision Systolic Array for Matrix Multiplication Acceleration", "comment": null, "summary": "Transformers are at the core of modern AI nowadays. They rely heavily on\nmatrix multiplication and require efficient acceleration due to their\nsubstantial memory and computational requirements. Quantization plays a vital\nrole in reducing memory usage, and can be exploited for computations by\ndesigning reconfigurable architectures that enhance matrix multiplication by\ndynamically adjusting the precision. This paper proposes ADiP, a novel\nadaptive-precision systolic array architecture designed for efficient matrix\nmultiplication acceleration.The proposed architecture consists of NxN\nadaptive-precision processing elements (PEs) and shared accumulators. ADiP\nsupports multiple computation modes, including symmetric single-matrix\nmultiplication as well as asymmetric multi-matrix multiplication with a shared\ninput matrix, thereby improving data-reuse and PE utilization. In addition,\nADiP maximizes the computational density by adapting to different precisions,\nsuch as 8bitx8bit, 8bitx4bit, and 8bitx2bit. Analytical models are developed\nfor ADiP architecture, including latency and throughput for versatile\narchitecture configurations. A comprehensive hardware design space exploration\nis demonstrated using 22nm commercial technology, achieving up to a 4x higher\ncomputational throughput. Furthermore, ADiP is evaluated on different\ntransformer workloads from GPT-2 Medium, BERT Large, and BitNet-1.58B models,\ndelivering latency improvement up to 53.6%, and energy improvement up to 24.4%\nfor BitNet-1.58B MHA workloads. At a 64x64 size with 4096 PEs, ADiP achieves a\npeak throughput of 8.192 TOPS, 16.384 TOPS, and 32.768 TOPS for 8bitx8bit,\n8bitx4bit, and 8bitx2bit operations, respectively."}
{"id": "2510.10676", "categories": ["cs.AR", "cs.CL", "cs.RO", "eess.AS"], "pdf": "https://arxiv.org/pdf/2510.10676", "abs": "https://arxiv.org/abs/2510.10676", "authors": ["Mukul Lokhande", "Tanushree Dewangan", "Mohd Sharik Mansoori", "Tejas Chaudhari", "Akarsh J.", "Damayanti Lokhande", "Adam Teman", "Santosh Kumar Vishvakarma"], "title": "Bhasha-Rupantarika: Algorithm-Hardware Co-design approach for Multilingual Neural Machine Translation", "comment": null, "summary": "This paper introduces Bhasha-Rupantarika, a light and efficient multilingual\ntranslation system tailored through algorithm-hardware codesign for\nresource-limited settings. The method investigates model deployment at\nsub-octet precision levels (FP8, INT8, INT4, and FP4), with experimental\nresults indicating a 4.1x reduction in model size (FP4) and a 4.2x speedup in\ninference speed, which correlates with an increased throughput of 66 tokens/s\n(improvement by 4.8x). This underscores the importance of ultra-low precision\nquantization for real-time deployment in IoT devices using FPGA accelerators,\nachieving performance on par with expectations. Our evaluation covers\nbidirectional translation between Indian and international languages,\nshowcasing its adaptability in low-resource linguistic contexts. The FPGA\ndeployment demonstrated a 1.96x reduction in LUTs and a 1.65x decrease in FFs,\nresulting in a 2.2x enhancement in throughput compared to OPU and a 4.6x\nenhancement compared to HPTA. Overall, the evaluation provides a viable\nsolution based on quantisation-aware translation along with hardware efficiency\nsuitable for deployable multilingual AI systems. The entire codes\n[https://github.com/mukullokhande99/Bhasha-Rupantarika/] and dataset for\nreproducibility are publicly available, facilitating rapid integration and\nfurther development by researchers."}
{"id": "2510.10872", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.10872", "abs": "https://arxiv.org/abs/2510.10872", "authors": ["Sumukh Pinge", "Ashkan Moradifirouzabadi", "Keming Fan", "Prasanna Venkatesan Ravindran", "Tanvir H. Pantha", "Po-Kai Hsu", "Zheyu Li", "Weihong Xu", "Zihan Xia", "Flavio Ponzina", "Winston Chern", "Taeyoung Song", "Priyankka Ravikumar", "Mengkun Tian", "Lance Fernandes", "Huy Tran", "Hari Jayasankar", "Hang Chen", "Chinsung Park", "Amrit Garlapati", "Kijoon Kim", "Jongho Woo", "Suhwan Lim", "Kwangsoo Kim", "Wanki Kim", "Daewon Ha", "Duygu Kuzum", "Shimeng Yu", "Sourav Dutta", "Asif Khan", "Tajana Rosing", "Mingu Kang"], "title": "FeNOMS: Enhancing Open Modification Spectral Library Search with In-Storage Processing on Ferroelectric NAND (FeNAND) Flash", "comment": null, "summary": "The rapid expansion of mass spectrometry (MS) data, now exceeding hundreds of\nterabytes, poses significant challenges for efficient, large-scale library\nsearch - a critical component for drug discovery. Traditional processors\nstruggle to handle this data volume efficiently, making in-storage computing\n(ISP) a promising alternative. This work introduces an ISP architecture\nleveraging a 3D Ferroelectric NAND (FeNAND) structure, providing significantly\nhigher density, faster speeds, and lower voltage requirements compared to\ntraditional NAND flash. Despite its superior density, the NAND structure has\nnot been widely utilized in ISP applications due to limited throughput\nassociated with row-by-row reads from serially connected cells. To overcome\nthese limitations, we integrate hyperdimensional computing (HDC), a\nbrain-inspired paradigm that enables highly parallel processing with simple\noperations and strong error tolerance. By combining HDC with the proposed\ndual-bound approximate matching (D-BAM) distance metric, tailored to the FeNAND\nstructure, we parallelize vector computations to enable efficient MS spectral\nlibrary search, achieving 43x speedup and 21x higher energy efficiency over\nstate-of-the-art 3D NAND methods, while maintaining comparable accuracy."}
{"id": "2510.10747", "categories": ["cs.DC", "cs.OS", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.10747", "abs": "https://arxiv.org/abs/2510.10747", "authors": ["Chirag Shetty", "Sarthak Chakraborty", "Hubertus Franke", "Larisa Shwartz", "Chandra Narayanaswami", "Indranil Gupta", "Saurabh Jha"], "title": "CPU-Limits kill Performance: Time to rethink Resource Control", "comment": "Vision Paper accepted to SoCC 2025", "summary": "Research in compute resource management for cloud-native applications is\ndominated by the problem of setting optimal CPU limits -- a fundamental OS\nmechanism that strictly restricts a container's CPU usage to its specified\nCPU-limits . Rightsizing and autoscaling works have innovated on\nallocation/scaling policies assuming the ubiquity and necessity of CPU-limits .\nWe question this. Practical experiences of cloud users indicate that CPU-limits\nharms application performance and costs more than it helps. These observations\nare in contradiction to the conventional wisdom presented in both academic\nresearch and industry best practices. We argue that this indiscriminate\nadoption of CPU-limits is driven by erroneous beliefs that CPU-limits is\nessential for operational and safety purposes. We provide empirical evidence\nmaking a case for eschewing CPU-limits completely from latency-sensitive\napplications. This prompts a fundamental rethinking of auto-scaling and billing\nparadigms and opens new research avenues. Finally, we highlight specific\nscenarios where CPU-limits can be beneficial if used in a well-reasoned way\n(e.g. background jobs)."}
{"id": "2510.10484", "categories": ["cs.PF"], "pdf": "https://arxiv.org/pdf/2510.10484", "abs": "https://arxiv.org/abs/2510.10484", "authors": ["Buqing Xu", "Jianfeng Zhu", "Yichi Zhang", "Qinyi Cai", "Guanhua Li", "Shaojun Wei", "Leibo Liu"], "title": "CAPSim: A Fast CPU Performance Simulator Using Attention-based Predictor", "comment": null, "summary": "CPU simulators are vital for computer architecture research, primarily for\nestimating performance under different programs. This poses challenges for fast\nand accurate simulation of modern CPUs, especially in multi-core systems.\nModern CPU peformance simulators such as GEM5 adopt the cycle-accurate and\nevent-driven approach, which is timeconsuming to simulate the extensive\nmicroarchitectural behavior of a real benchmark running on out-of-order CPUs.\nRecently, machine leaning based approach has been proposed to improve\nsimulation speed, but they are currently limited to estimating the cycles of\nbasic blocks rather than the complete benchmark program. This paper introduces\na novel ML-based CPU simulator named CAPSim, which uses an attention-based\nneural network performance predictor and instruction trace sampling method\nannotated with context. The attention mechanism effectively captures long-range\ninfluence within the instruction trace, emphasizing critical context\ninformation. This allows the model to improve performance prediction accuracy\nby focusing on important code instruction. CAPSim can predict the execution\ntime of unseen benchmarks at a significantly fast speed compared with an\naccurate O3 simulator built with gem5. Our evaluation on a commercial Intel\nXeon CPU demonstrates that CAPSim achieves a 2.2 - 8.3x speedup compared to\nusing gem5 built simulator, which is superior to the cutting-edge deep learning\napproach"}
{"id": "2510.09842", "categories": ["cs.NI", "cs.AR", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.09842", "abs": "https://arxiv.org/abs/2510.09842", "authors": ["Mohammud J. Bocus", "Senhui Qiu", "Robert J. Piechocki", "Kerstin Eder"], "title": "Towards Automated and Predictive Network-Level Energy Profiling in Reconfigurable IoT Systems", "comment": "8 pages, 10 figures, 2 Tables", "summary": "Energy efficiency has emerged as a defining constraint in the evolution of\nsustainable Internet of Things (IoT) networks. This work moves beyond\nsimulation-based or device-centric studies to deliver measurement-driven,\nnetwork-level smart energy analysis. The proposed system enables end-to-end\nvisibility of energy flows across distributed IoT infrastructures, uniting\nBluetooth Low Energy (BLE) and Visible Light Communication (VLC) modes with\nenvironmental sensing and E-ink display subsystems under a unified profiling\nand prediction platform. Through automated, time-synchronized instrumentation,\nthe framework captures fine-grained energy dynamics across both node and\ngateway layers. We developed a suite of tools that generate energy datasets for\nIoT ecosystems, addressing the scarcity of such data and enabling AI-based\npredictive and adaptive energy optimization. Validated within a network-level\nIoT testbed, the approach demonstrates robust performance under real operating\nconditions."}
{"id": "2510.09847", "categories": ["cs.DC", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.09847", "abs": "https://arxiv.org/abs/2510.09847", "authors": ["Said Muhammad", "Lahlou Laaziz", "Nadjia Kara", "Phat Tan Nguyen", "Timothy Murphy"], "title": "THEAS: Efficient Power Management in Multi-Core CPUs via Cache-Aware Resource Scheduling", "comment": "Accepted and presented at the 13th IEEE International Conference on\n  Intelligent Mobile Computing 2025 (IMC), CISOSE 2025 in Tucson, Arizona, USA.\n  This is the author's accepted manuscript (AAM). The final published version\n  will appear in the IEEE conference proceedings", "summary": "The dynamic adaptation of resource levels enables the system to enhance\nenergy efficiency while maintaining the necessary computational resources,\nparticularly in scenarios where workloads fluctuate significantly over time.\nThe proposed approach can play a crucial role in heterogeneous systems where\nworkload characteristics are not uniformly distributed, such as non-pinning\ntasks. The deployed THEAS algorithm in this research work ensures a balance\nbetween performance and power consumption, making it suitable for a wide range\nof real-time applications. A comparative analysis of the proposed THEAS\nalgorithm with well-known scheduling techniques such as Completely Fair\nScheduler (CFS), Energy-Aware Scheduling (EAS), Heterogeneous Scheduling\n(HeteroSched), and Utility-Based Scheduling is presented in Table III. Each\nscheme is compared based on adaptability, core selection criteria, performance\nscaling, cache awareness, overhead, and real-time suitability."}
{"id": "2510.09688", "categories": ["cs.MA", "stat.AP", "stat.ME"], "pdf": "https://arxiv.org/pdf/2510.09688", "abs": "https://arxiv.org/abs/2510.09688", "authors": ["R. W. S. Pessoa", "M. H. Næss", "J. C. Bijos", "C. M. Rebello", "D. Colombo", "L. Schnitman", "I. B. R. Nogueira"], "title": "A Hybrid Agent-Based and System Dynamics Framework for Modelling Project Execution and Technology Maturity in Early-Stage R&D", "comment": null, "summary": "This paper presents a hybrid approach to predict the evolution of\ntechnological maturity in R and D projects, using the oil and gas sector as an\nexample. Integrating System Dynamics (SD) and Agent Based Modelling (ABM)\nallows the proposed multi level framework to capture uncertainties in work\neffort, team size, and project duration, which influence technological\nprogress. While AB SD hybrid models are established in other fields, their use\nin R and D remains limited. The model combines system level feedback structures\ngoverning work phases, rework cycles, and duration with decentralised agents\nsuch as team members, tasks, and controllers, whose interactions generate\nemergent project dynamics. A base case scenario analysed early stage innovation\nprojects with 15 parallel tasks over 156 weeks. A comparative sequential\nscenario showed an 88 percent reduction in rework duration. A second scenario\nassessed mixed parallel sequential task structures with varying team sizes. In\nparallel configurations, increasing team size reduced project duration and\nimproved task completion, with optimal results for teams of four to five\nmembers. These findings align with empirical evidence showing that moderate\nteam expansion enhances coordination efficiency without excessive communication\noverhead. However, larger teams may decrease performance due to communication\ncomplexity and management delays. Overall, the model outputs and framework\nalign with expert understanding, supporting their validity as quantitative\ntools for analysing resource allocation, scheduling efficiency, and technology\nmaturity progression."}
{"id": "2510.09721", "categories": ["cs.SE", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.09721", "abs": "https://arxiv.org/abs/2510.09721", "authors": ["Jiale Guo", "Suizhi Huang", "Mei Li", "Dong Huang", "Xingsheng Chen", "Regina Zhang", "Zhijiang Guo", "Han Yu", "Siu-Ming Yiu", "Christian Jensen", "Pietro Lio", "Kwok-Yan Lam"], "title": "A Comprehensive Survey on Benchmarks and Solutions in Software Engineering of LLM-Empowered Agentic System", "comment": "21 pages", "summary": "The integration of LLMs into software engineering has catalyzed a paradigm\nshift from traditional rule-based systems to sophisticated agentic systems\ncapable of autonomous problem-solving. Despite this transformation, the field\nlacks a comprehensive understanding of how benchmarks and solutions\ninterconnect, hindering systematic progress and evaluation. This survey\npresents the first holistic analysis of LLM-empowered software engineering,\nbridging the critical gap between evaluation and solution approaches. We\nanalyze 150+ recent papers and organize them into a comprehensive taxonomy\nspanning two major dimensions: (1) Solutions, categorized into prompt-based,\nfine-tuning-based, and agent-based paradigms, and (2) Benchmarks, covering code\ngeneration, translation, repair, and other tasks. Our analysis reveals how the\nfield has evolved from simple prompt engineering to complex agentic systems\nincorporating planning and decomposition, reasoning and self-refinement, memory\nmechanisms, and tool augmentation. We present a unified pipeline that\nillustrates the complete workflow from task specification to final\ndeliverables, demonstrating how different solution paradigms address varying\ncomplexity levels across software engineering tasks. Unlike existing surveys\nthat focus on isolated aspects, we provide full-spectrum coverage connecting\n50+ benchmarks with their corresponding solution strategies, enabling\nresearchers to identify optimal approaches for specific evaluation criteria.\nFurthermore, we identify critical research gaps and propose actionable future\ndirections, including multi-agent collaboration frameworks, self-evolving code\ngeneration systems, and integration of formal verification with LLM-based\nmethods. This survey serves as a foundational resource for researchers and\npractitioners seeking to understand, evaluate, and advance LLM-empowered\nsoftware engineering systems."}
{"id": "2510.11192", "categories": ["cs.AR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.11192", "abs": "https://arxiv.org/abs/2510.11192", "authors": ["João Paulo Cardoso de Lima", "Marc Dietrich", "Jeronimo Castrillon", "Asif Ali Khan"], "title": "Efficient In-Memory Acceleration of Sparse Block Diagonal LLMs", "comment": "8 pages, to appear in IEEE Cross-disciplinary Conference on\n  Memory-Centric Computing (CCMCC)", "summary": "Structured sparsity enables deploying large language models (LLMs) on\nresource-constrained systems. Approaches like dense-to-sparse fine-tuning are\nparticularly compelling, achieving remarkable structured sparsity by reducing\nthe model size by over 6.7x, while still maintaining acceptable accuracy.\nDespite this reduction, LLM inference, especially the decode stage being\ninherently memory-bound, is extremely expensive on conventional Von-Neumann\narchitectures. Compute-in-memory (CIM) architectures mitigate this by\nperforming computations directly in memory, and when paired with sparse LLMs,\nenable storing and computing the entire model in memory, eliminating the data\nmovement on the off-chip bus and improving efficiency. Nonetheless, naively\nmapping sparse matrices onto CIM arrays leads to poor array utilization and\ndiminished computational efficiency. In this paper, we present an automated\nframework with novel mapping and scheduling strategies to accelerate sparse LLM\ninference on CIM accelerators. By exploiting block-diagonal sparsity, our\napproach improves CIM array utilization by over 50%, achieving more than 4x\nreduction in both memory footprint and the number of required floating-point\noperations."}
{"id": "2510.11310", "categories": ["cs.SE", "cs.OS", "cs.PF", "D.2.8; D.4.8; C.4"], "pdf": "https://arxiv.org/pdf/2510.11310", "abs": "https://arxiv.org/abs/2510.11310", "authors": ["Shinhyung Yang", "David Georg Reichelt", "Henrik Ingo", "Wilhelm Hasselbring"], "title": "Detection of Performance Changes in MooBench Results Using Nyrkiö on GitHub Actions", "comment": "3 pages, 3 figures, 16th Symposium on Software Performance\n  (https://www.performance-symposium.org/)", "summary": "In GitHub with its 518 million hosted projects, performance changes within\nthese projects are highly relevant to the project's users. Although performance\nmeasurement is supported by GitHub CI/CD, performance change detection is a\nchallenging topic.\n  In this paper, we demonstrate how we incorporated Nyrki\\\"o to MooBench. Prior\nto this work, Moobench continuously ran on GitHub virtual machines, measuring\noverhead of tracing agents, but without change detection. By adding the upload\nof the measurements to the Nyrki\\\"o change detection service, we made it\npossible to detect performance changes. We identified one major performance\nregression and examined the performance change in depth. We report that (1) it\nis reproducible with GitHub actions, and (2) the performance regression is\ncaused by a Linux Kernel version change."}
{"id": "2510.09842", "categories": ["cs.NI", "cs.AR", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.09842", "abs": "https://arxiv.org/abs/2510.09842", "authors": ["Mohammud J. Bocus", "Senhui Qiu", "Robert J. Piechocki", "Kerstin Eder"], "title": "Towards Automated and Predictive Network-Level Energy Profiling in Reconfigurable IoT Systems", "comment": "8 pages, 10 figures, 2 Tables", "summary": "Energy efficiency has emerged as a defining constraint in the evolution of\nsustainable Internet of Things (IoT) networks. This work moves beyond\nsimulation-based or device-centric studies to deliver measurement-driven,\nnetwork-level smart energy analysis. The proposed system enables end-to-end\nvisibility of energy flows across distributed IoT infrastructures, uniting\nBluetooth Low Energy (BLE) and Visible Light Communication (VLC) modes with\nenvironmental sensing and E-ink display subsystems under a unified profiling\nand prediction platform. Through automated, time-synchronized instrumentation,\nthe framework captures fine-grained energy dynamics across both node and\ngateway layers. We developed a suite of tools that generate energy datasets for\nIoT ecosystems, addressing the scarcity of such data and enabling AI-based\npredictive and adaptive energy optimization. Validated within a network-level\nIoT testbed, the approach demonstrates robust performance under real operating\nconditions."}
{"id": "2510.09983", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.09983", "abs": "https://arxiv.org/abs/2510.09983", "authors": ["Ethan Thompson", "Ali Sadeghi Jahromi", "AbdelRahman Abdou"], "title": "Fine-grained CDN Delegation", "comment": "13 pages, 2 figures", "summary": "The use of Content Delivery Networks (CDNs) has significantly increased over\nthe past decade, with approximately 55 million websites currently relying on\nCDN services. Emerging solutions, such as Delegated Credentials (RFC 9345),\nlack fine-grained definitions of many critical aspects of delegation, such as\nthe length of delegation chains, revocation mechanism, permitted operations,\nand a well-defined scope for said delegation. We present Delegation\nCertificates (DeCerts), which modify X.509 certificate standard and add new\nextensions to enable fine-grained CDN delegation. DeCerts allow domain owners\nto specify delegated and non-delegated subdomains, and control the depth of\ndelegation extended by CDNs, which provides flexibility in delegation\nmanagement. But more importantly, DeCerts are built on a new principle which\nprovides full autonomy to domain owners-domain owners can issue DeCerts fully\nindependent of Certificate Authorities (CAs), and thus have greater flexibility\nin policy control, including revocation methods. Such level of flexibility\nwould be hard to match if CAs where to issue such certificates. Revoking a\nDeCert revokes delegation. We discuss multiple revocation mechanisms for a\nDeCerts balancing security, performance, and delegator control. We modify\nFirefox to support DeCert (i.e., proper validation) as a proof-of-concept, and\ntest it to demonstrate the feasibility, compatibility of DeCerts with browsers\nand TLS/HTTPS protocols. DeCerts enhance the security, scalability, and\nmanageability of CDN delegation, offering a practical solution for Internet\nservices."}
{"id": "2510.09851", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.09851", "abs": "https://arxiv.org/abs/2510.09851", "authors": ["Haci Ismail Aslan", "Syed Muhammad Mahmudul Haque", "Joel Witzke", "Odej Kao"], "title": "QONNECT: A QoS-Aware Orchestration System for Distributed Kubernetes Clusters", "comment": "Accepted at the International Conference on Service-Oriented\n  Computing (ICSOC) 2025", "summary": "Modern applications increasingly span across cloud, fog, and edge\nenvironments, demanding orchestration systems that can adapt to diverse\ndeployment contexts while meeting Quality-of-Service (QoS) requirements.\nStandard Kubernetes schedulers do not account for user-defined objectives such\nas energy efficiency, cost optimization, and global performance, often leaving\noperators to make manual, cluster-by-cluster placement decisions. To address\nthis need, we present QONNECT, a vendor-agnostic orchestration framework that\nenables declarative, QoS-driven application deployment across heterogeneous\nKubernetes and K3s clusters. QONNECT introduces a distributed architecture\ncomposed of a central Knowledge Base, Raft-replicated Resource Lead Agents, and\nlightweight Resource Agents in each cluster. Through a minimal YAML-based\ninterface, users specify high-level QoS goals, which the system translates into\nconcrete placement and migration actions. Our implementation is evaluated on a\nfederated testbed of up to nine cloud-fog-edge clusters using the Istio\nBookinfo microservice application. The system demonstrates dynamic,\npolicy-driven microservice placement, automated failover, QoS-compliant\nrescheduling, and leader re-election after node failure, all without manual\nintervention. By bridging the gap between declarative deployment models and\noperational QoS goals, QONNECT transforms the cloud-edge continuum into a\nunified, self-optimizing platform."}
{"id": "2510.09937", "categories": ["cs.MA", "cs.LG", "cs.SY", "eess.SY", "math.OC", "stat.ML"], "pdf": "https://arxiv.org/pdf/2510.09937", "abs": "https://arxiv.org/abs/2510.09937", "authors": ["Shahbaz P Qadri Syed", "He Bai"], "title": "Structured Cooperative Multi-Agent Reinforcement Learning: a Bayesian Network Perspective", "comment": null, "summary": "The empirical success of multi-agent reinforcement learning (MARL) has\nmotivated the search for more efficient and scalable algorithms for large scale\nmulti-agent systems. However, existing state-of-the-art algorithms do not fully\nexploit inter-agent coupling information to develop MARL algorithms. In this\npaper, we propose a systematic approach to leverage structures in the\ninter-agent couplings for efficient model-free reinforcement learning. We model\nthe cooperative MARL problem via a Bayesian network and characterize the subset\nof agents, termed as the value dependency set, whose information is required by\neach agent to estimate its local action value function exactly. Moreover, we\npropose a partially decentralized training decentralized execution (P-DTDE)\nparadigm based on the value dependency set. We theoretically establish that the\ntotal variance of our P-DTDE policy gradient estimator is less than the\ncentralized training decentralized execution (CTDE) policy gradient estimator.\nWe derive a multi-agent policy gradient theorem based on the P-DTDE scheme and\ndevelop a scalable actor-critic algorithm. We demonstrate the efficiency and\nscalability of the proposed algorithm on multi-warehouse resource allocation\nand multi-zone temperature control examples. For dense value dependency sets,\nwe propose an approximation scheme based on truncation of the Bayesian network\nand empirically show that it achieves a faster convergence than the exact value\ndependence set for applications with a large number of agents."}
{"id": "2510.09724", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.09724", "abs": "https://arxiv.org/abs/2510.09724", "authors": ["Qiaosheng Chen", "Yang Liu", "Lei Li", "Kai Chen", "Qipeng Guo", "Gong Cheng", "Fei Yuan"], "title": "InteractScience: Programmatic and Visually-Grounded Evaluation of Interactive Scientific Demonstration Code Generation", "comment": "27 pages, 17 figures", "summary": "Large Language Models (LLMs) are increasingly capable of generating complete\napplications from natural language instructions, creating new opportunities in\nscience and education. In these domains, interactive scientific demonstrations\nare particularly valuable for explaining concepts, supporting new teaching\nmethods, and presenting research findings. Generating such demonstrations\nrequires models to combine accurate scientific knowledge with the ability to\nimplement interactive front-end code that behaves correctly and responds to\nuser actions. This capability goes beyond the scope of existing benchmarks,\nwhich typically evaluate either knowledge question answering without grounding\nin code or static web code generation without scientific interactivity. To\nevaluate this integrated ability, we design a hybrid framework that combines\nprogrammatic functional testing to rigorously verify interaction logic with\nvisually-grounded qualitative testing to assess rendered outputs against\nreference snapshots. Building on this framework, we present InteractScience, a\nbenchmark consisting of a substantial set of carefully designed questions\nacross five scientific domains, each paired with unit tests, reference\nsnapshots, and checklists. We evaluate 30 leading open- and closed-source LLMs\nand report results that highlight ongoing weaknesses in integrating domain\nknowledge with interactive front-end coding. Our work positions InteractScience\nas the first benchmark to automatically measure this combined capability with\nrealistic interactive operations, providing a foundation for advancing reliable\nand educationally useful scientific demonstration code generation. All code and\ndata are publicly available at https://github.com/open-compass/InteractScience."}
{"id": "2510.09842", "categories": ["cs.NI", "cs.AR", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.09842", "abs": "https://arxiv.org/abs/2510.09842", "authors": ["Mohammud J. Bocus", "Senhui Qiu", "Robert J. Piechocki", "Kerstin Eder"], "title": "Towards Automated and Predictive Network-Level Energy Profiling in Reconfigurable IoT Systems", "comment": "8 pages, 10 figures, 2 Tables", "summary": "Energy efficiency has emerged as a defining constraint in the evolution of\nsustainable Internet of Things (IoT) networks. This work moves beyond\nsimulation-based or device-centric studies to deliver measurement-driven,\nnetwork-level smart energy analysis. The proposed system enables end-to-end\nvisibility of energy flows across distributed IoT infrastructures, uniting\nBluetooth Low Energy (BLE) and Visible Light Communication (VLC) modes with\nenvironmental sensing and E-ink display subsystems under a unified profiling\nand prediction platform. Through automated, time-synchronized instrumentation,\nthe framework captures fine-grained energy dynamics across both node and\ngateway layers. We developed a suite of tools that generate energy datasets for\nIoT ecosystems, addressing the scarcity of such data and enabling AI-based\npredictive and adaptive energy optimization. Validated within a network-level\nIoT testbed, the approach demonstrates robust performance under real operating\nconditions."}
{"id": "2510.09847", "categories": ["cs.DC", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.09847", "abs": "https://arxiv.org/abs/2510.09847", "authors": ["Said Muhammad", "Lahlou Laaziz", "Nadjia Kara", "Phat Tan Nguyen", "Timothy Murphy"], "title": "THEAS: Efficient Power Management in Multi-Core CPUs via Cache-Aware Resource Scheduling", "comment": "Accepted and presented at the 13th IEEE International Conference on\n  Intelligent Mobile Computing 2025 (IMC), CISOSE 2025 in Tucson, Arizona, USA.\n  This is the author's accepted manuscript (AAM). The final published version\n  will appear in the IEEE conference proceedings", "summary": "The dynamic adaptation of resource levels enables the system to enhance\nenergy efficiency while maintaining the necessary computational resources,\nparticularly in scenarios where workloads fluctuate significantly over time.\nThe proposed approach can play a crucial role in heterogeneous systems where\nworkload characteristics are not uniformly distributed, such as non-pinning\ntasks. The deployed THEAS algorithm in this research work ensures a balance\nbetween performance and power consumption, making it suitable for a wide range\nof real-time applications. A comparative analysis of the proposed THEAS\nalgorithm with well-known scheduling techniques such as Completely Fair\nScheduler (CFS), Energy-Aware Scheduling (EAS), Heterogeneous Scheduling\n(HeteroSched), and Utility-Based Scheduling is presented in Table III. Each\nscheme is compared based on adaptability, core selection criteria, performance\nscaling, cache awareness, overhead, and real-time suitability."}
{"id": "2510.10040", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.10040", "abs": "https://arxiv.org/abs/2510.10040", "authors": ["Shafi Ullah Khan", "Michel Kulhandjian", "Debashri Roy"], "title": "Pushing the Boundaries in CBRS Band: Robust Radar Detection within High 5G Interference", "comment": null, "summary": "Spectrum sharing is a critical strategy for meeting escalating user demands\nvia commercial wireless services, yet its effective regulation and\ntechnological enablement, particularly concerning coexistence with incumbent\nsystems, remain significant challenges. Federal organizations have established\nregulatory frameworks to manage shared commercial use alongside\nmission-critical operations, such as military communications. This paper\ninvestigates the potential of machine learning (ML)-based approaches to enhance\nspectrum sharing capabilities within the Citizens Broadband Radio Service\n(CBRS) band, specifically focusing on the coexistence of commercial signals\n(e.g., 5G) and military radar systems. We demonstrate that ML techniques can\npotentially extend the Federal Communications Commission (FCC)-recommended\nsignal-to-interference-plus-noise ratio (SINR) boundaries by improving radar\ndetection and waveform identification in high-interference environments.\nThrough rigorous evaluation using both synthetic and real-world signals, our\nfindings indicate that proposed ML models, utilizing In-phase/Quadrature (IQ)\ndata and spectrograms, can achieve the FCC-recommended $99\\%$ radar detection\naccuracy even when subjected to high interference from 5G signals upto -5dB\nSINR, exceeding the required limits of $20$ SINR. Our experimental studies\ndistinguish this work from the state-of-the-art by significantly extending the\nSINR limit for $99\\%$ radar detection accuracy from approximately $12$ dB down\nto $-5$ dB. Subsequent to detection, we further apply ML to analyze and\nidentify radar waveforms. The proposed models also demonstrate the capability\nto classify six distinct radar waveform types with $93\\%$ accuracy."}
{"id": "2510.10126", "categories": ["cs.DC", "F.2.2, I.2.7"], "pdf": "https://arxiv.org/pdf/2510.10126", "abs": "https://arxiv.org/abs/2510.10126", "authors": ["Sehar Zehra", "Hassan Jamil Syed", "Ummay Faseeha"], "title": "FedMon: Federated eBPF Monitoring for Distributed Anomaly Detection in Multi-Cluster Cloud Environments", "comment": "7 pages , 6 figures , 1 table and it is a conference paper", "summary": "Kubernetes multi-cluster deployments demand scalable and privacy-preserving\nanomaly detection. Existing eBPF-based monitors provide low-overhead system and\nnetwork visibility but are limited to single clusters, while centralized\napproaches incur bandwidth, privacy, and heterogeneity challenges. We propose\nFedMon, a federated eBPF framework that unifies kernel-level telemetry with\nfederated learning (FL) for cross-cluster anomaly detection. Lightweight eBPF\nagents capture syscalls and network events, extract local statistical and\nsequence features, and share only model updates with a global server. A hybrid\ndetection engine combining Variational Autoencoders (VAEs) with Isolation\nForests enables both temporal pattern modeling and outlier detection. Deployed\nacross three Kubernetes clusters, FedMon achieves 94% precision, 91% recall,\nand an F1-score of 0.92, while cutting bandwidth usage by 60% relative to\ncentralized baselines. Results demonstrate that FedMon enhances accuracy,\nscalability, and privacy, providing an effective defense for large-scale,\nmulti-tenant cloud-native environments."}
{"id": "2510.10325", "categories": ["cs.MA", "cs.AI", "cs.RO"], "pdf": "https://arxiv.org/pdf/2510.10325", "abs": "https://arxiv.org/abs/2510.10325", "authors": ["Walid Abdela"], "title": "KG-MAS: Knowledge Graph-Enhanced Multi-Agent Infrastructure for coupling physical and digital robotic environments", "comment": null, "summary": "The seamless integration of physical and digital environments in\nCyber-Physical Systems(CPS), particularly within Industry 4.0, presents\nsignificant challenges stemming from system heterogeneity and complexity.\nTraditional approaches often rely on rigid, data-centric solutions like\nco-simulation frameworks or brittle point-to-point middleware bridges, which\nlack the semantic richness and flexibility required for intelligent, autonomous\ncoordination. This report introduces the Knowledge Graph-Enhanced Multi-Agent\nInfrastructure(KG-MAS), as resolution in addressing such limitations. KG-MAS\nleverages a centralized Knowledge Graph (KG) as a dynamic, shared world model,\nproviding a common semantic foundation for a Multi-Agent System(MAS).\nAutonomous agents, representing both physical and digital components, query\nthis KG for decision-making and update it with real-time state information. The\ninfrastructure features a model-driven architecture which facilitates the\nautomatic generation of agents from semantic descriptions, thereby simplifying\nsystem extension and maintenance. By abstracting away underlying communication\nprotocols and providing a unified, intelligent coordination mechanism, KG-MAS\noffers a robust, scalable, and flexible solution for coupling heterogeneous\nphysical and digital robotic environments."}
{"id": "2510.09907", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.09907", "abs": "https://arxiv.org/abs/2510.09907", "authors": ["Muhammad Maaz", "Liam DeVoe", "Zac Hatfield-Dodds", "Nicholas Carlini"], "title": "Agentic Property-Based Testing: Finding Bugs Across the Python Ecosystem", "comment": "4 pages (main), NeurIPS 2025, The 4th Deep Learning for Code Workshop", "summary": "Property-based testing (PBT) is a lightweight formal method, typically\nimplemented as a randomized testing framework. Users specify the input domain\nfor their test using combinators supplied by the PBT framework, and the\nexpected properties or invariants as a unit-test function. The framework then\nsearches for a counterexample, e.g. by generating inputs and calling the test\nfunction. In this work, we demonstrate an LLM-based agent which analyzes Python\nmodules, infers function-specific and cross-function properties from code and\ndocumentation, synthesizes and executes PBTs, reflects on outputs of these\ntests to confirm true bugs, and finally outputs actionable bug reports for the\ndeveloper. We perform an extensive evaluation of our agent across 100 popular\nPython packages. Of the bug reports generated by the agent, we found after\nmanual review that 56\\% were valid bugs and 32\\% were valid bugs that we would\nreport to maintainers. We then developed a ranking rubric to surface\nhigh-priority valid bugs to developers, and found that of the 21 top-scoring\nbugs, 86\\% were valid and 81\\% we would report. The bugs span diverse failure\nmodes from serialization failures to numerical precision errors to flawed cache\nimplementations. We reported 5 bugs, 4 with patches, including to NumPy and\ncloud computing SDKs, with 3 patches merged successfully. Our results suggest\nthat LLMs with PBT provides a rigorous and scalable method for autonomously\ntesting software. Our code and artifacts are available at:\nhttps://github.com/mmaaz-git/agentic-pbt."}
{"id": "2510.10747", "categories": ["cs.DC", "cs.OS", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.10747", "abs": "https://arxiv.org/abs/2510.10747", "authors": ["Chirag Shetty", "Sarthak Chakraborty", "Hubertus Franke", "Larisa Shwartz", "Chandra Narayanaswami", "Indranil Gupta", "Saurabh Jha"], "title": "CPU-Limits kill Performance: Time to rethink Resource Control", "comment": "Vision Paper accepted to SoCC 2025", "summary": "Research in compute resource management for cloud-native applications is\ndominated by the problem of setting optimal CPU limits -- a fundamental OS\nmechanism that strictly restricts a container's CPU usage to its specified\nCPU-limits . Rightsizing and autoscaling works have innovated on\nallocation/scaling policies assuming the ubiquity and necessity of CPU-limits .\nWe question this. Practical experiences of cloud users indicate that CPU-limits\nharms application performance and costs more than it helps. These observations\nare in contradiction to the conventional wisdom presented in both academic\nresearch and industry best practices. We argue that this indiscriminate\nadoption of CPU-limits is driven by erroneous beliefs that CPU-limits is\nessential for operational and safety purposes. We provide empirical evidence\nmaking a case for eschewing CPU-limits completely from latency-sensitive\napplications. This prompts a fundamental rethinking of auto-scaling and billing\nparadigms and opens new research avenues. Finally, we highlight specific\nscenarios where CPU-limits can be beneficial if used in a well-reasoned way\n(e.g. background jobs)."}
{"id": "2510.10044", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.10044", "abs": "https://arxiv.org/abs/2510.10044", "authors": ["Rahul Vanukuri", "Shafi Ullah Khan", "Talip Tolga Sarı", "Gokhan Secinti", "Diego Patiño", "Debashri Roy"], "title": "Waves of Imagination: Unconditional Spectrogram Generation using Diffusion Architectures", "comment": null, "summary": "The growing demand for effective spectrum management and interference\nmitigation in shared bands, such as the Citizens Broadband Radio Service\n(CBRS), requires robust radar detection algorithms to protect the military\ntransmission from interference due to commercial wireless transmission. These\nalgorithms, in turn, depend on large, diverse, and carefully labeled\nspectrogram datasets. However, collecting and annotating real-world radio\nfrequency (RF) spectrogram data remains a significant challenge, as radar\nsignals are rare, and their occurrences are infrequent. This challenge makes\nthe creation of balanced datasets difficult, limiting the performance and\ngeneralizability of AI models in this domain.\n  To address this critical issue, we propose a diffusion-based generative model\nfor synthesizing realistic and diverse spectrograms of five distinct categories\nthat integrate LTE, 5G, and radar signals within the CBRS band. We conduct a\nstructural and statistical fidelity analysis of the generated spectrograms\nusing widely accepted evaluation metrics Structural Similarity Index Measure\n(SSIM) and Peak Signal-to-Noise Ratio (PSNR), to quantify their divergence from\nthe training data. Furthermore, we demonstrate that pre-training on the\ngenerated spectrograms significantly improves training efficiency on a\nreal-world radar detection task by enabling $51.5\\%$ faster convergence."}
{"id": "2510.10166", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.10166", "abs": "https://arxiv.org/abs/2510.10166", "authors": ["Suhrid Gupta", "Muhammed Tawfiqul Islam", "Rajkumar Buyya"], "title": "Proactive and Reactive Autoscaling Techniques for Edge Computing", "comment": null, "summary": "Edge computing allows for the decentralization of computing resources. This\ndecentralization is achieved through implementing microservice architectures,\nwhich require low latencies to meet stringent service level agreements (SLA)\nsuch as performance, reliability, and availability metrics. While cloud\ncomputing offers the large data storage and computation resources necessary to\nhandle peak demands, a hybrid cloud and edge environment is required to ensure\nSLA compliance. Several auto-scaling algorithms have been proposed to try to\nachieve these compliance challenges, but they suffer from performance issues\nand configuration complexity. This chapter provides a brief overview of edge\ncomputing architecture, its uses, benefits, and challenges for resource\nscaling. We then introduce Service Level Agreements, and existing research on\ndevising algorithms used in edge computing environments to meet these\nagreements, along with their benefits and drawbacks."}
{"id": "2510.10611", "categories": ["cs.MA", "cs.GR"], "pdf": "https://arxiv.org/pdf/2510.10611", "abs": "https://arxiv.org/abs/2510.10611", "authors": ["Heng Zhang", "Yuling Shi", "Xiaodong Gu", "Zijian Zhang", "Haochen You", "Lubin Gan", "Yilei Yuan", "Jin Huang"], "title": "HyperAgent: Leveraging Hypergraphs for Topology Optimization in Multi-Agent Communication", "comment": null, "summary": "Recent advances in large language model-powered multi-agent systems have\ndemonstrated remarkable collective intelligence through effective\ncommunication. However, existing approaches face two primary challenges: (i)\n\\textit{Ineffective group collaboration modeling}, as they rely on pairwise\nedge representations in graph structures, limiting their ability to capture\nrelationships among multiple agents; and (ii) \\textit{Limited task-adaptiveness\nin communication topology design}, leading to excessive communication cost for\nsimple tasks and insufficient coordination for complex scenarios. These issues\nrestrict the scalability and practical deployment of adaptive collaboration\nframeworks. To address these challenges, we propose \\textbf{HyperAgent}, a\nhypergraph-based framework that optimizes communication topologies and\neffectively captures group collaboration patterns using direct hyperedge\nrepresentations. Unlike edge-based approaches, HyperAgent uses hyperedges to\nlink multiple agents within the same subtask and employs hypergraph\nconvolutional layers to achieve one-step information aggregation in\ncollaboration groups. Additionally, it incorporates a variational autoencoder\nframework with sparsity regularization to dynamically adjust hypergraph\ntopologies based on task complexity. Experiments highlight the superiority of\nHyperAgent in both performance and efficiency. For instance, on GSM8K,\nHyperAgent achieves 95.07\\% accuracy while reducing token consumption by\n25.33\\%, demonstrating the potential of hypergraph-based optimization for\nmulti-agent communication."}
{"id": "2510.09938", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.09938", "abs": "https://arxiv.org/abs/2510.09938", "authors": ["Youshuai Tan", "Zishuo Ding", "Jinfu Chen", "Weiyi Shang"], "title": "OFP-Repair: Repairing Floating-point Errors via Original-Precision Arithmetic", "comment": null, "summary": "Errors in floating-point programs can lead to severe consequences,\nparticularly in critical domains such as military, aerospace, and financial\nsystems, making their repair a crucial research problem. In practice, some\nerrors can be fixed using original-precision arithmetic, while others require\nhigh-precision computation. Developers often avoid addressing the latter due to\nexcessive computational resources required. However, they sometimes struggle to\ndistinguish between these two types of errors, and existing repair tools fail\nto assist in this differentiation. Most current repair tools rely on\nhigh-precision implementations, which are time-consuming to develop and demand\nspecialized expertise. Although a few tools do not require high-precision\nprograms, they can only fix a limited subset of errors or produce suboptimal\nresults.\n  To address these challenges, we propose a novel method, named OFP-Repair.On\nACESO's dataset, our patches achieve improvements of three, seven, three, and\neight orders of magnitude across four accuracy metrics. In real-world cases,\nour method successfully detects all five original-precision-repairable errors\nand fixes three, whereas ACESO only repairs one. Notably, these results are\nbased on verified data and do not fully capture the potential of OFP-Repair. To\nfurther validate our method, we deploy it on a decade-old open bug report from\nGNU Scientific Library (GSL), successfully repairing five out of 15 bugs. The\ndevelopers have expressed interest in our method and are considering\nintegrating our tool into their development workflow. We are currently working\non applying our patches to GSL. The results are highly encouraging,\ndemonstrating the practical applicability of our technique."}
{"id": "2510.11310", "categories": ["cs.SE", "cs.OS", "cs.PF", "D.2.8; D.4.8; C.4"], "pdf": "https://arxiv.org/pdf/2510.11310", "abs": "https://arxiv.org/abs/2510.11310", "authors": ["Shinhyung Yang", "David Georg Reichelt", "Henrik Ingo", "Wilhelm Hasselbring"], "title": "Detection of Performance Changes in MooBench Results Using Nyrkiö on GitHub Actions", "comment": "3 pages, 3 figures, 16th Symposium on Software Performance\n  (https://www.performance-symposium.org/)", "summary": "In GitHub with its 518 million hosted projects, performance changes within\nthese projects are highly relevant to the project's users. Although performance\nmeasurement is supported by GitHub CI/CD, performance change detection is a\nchallenging topic.\n  In this paper, we demonstrate how we incorporated Nyrki\\\"o to MooBench. Prior\nto this work, Moobench continuously ran on GitHub virtual machines, measuring\noverhead of tracing agents, but without change detection. By adding the upload\nof the measurements to the Nyrki\\\"o change detection service, we made it\npossible to detect performance changes. We identified one major performance\nregression and examined the performance change in depth. We report that (1) it\nis reproducible with GitHub actions, and (2) the performance regression is\ncaused by a Linux Kernel version change."}
{"id": "2510.10158", "categories": ["cs.NI", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10158", "abs": "https://arxiv.org/abs/2510.10158", "authors": ["Ziyi Liu", "Qingyue Long", "Zhiwen Xue", "Huandong Wang", "Yong Li"], "title": "Multi-Scale Diffusion Transformer for Jointly Simulating User Mobility and Mobile Traffic Pattern", "comment": "9 pages, 4 figures. Code: https://github.com/tsinghua-fib-lab/MSTDiff", "summary": "User mobility trajectory and mobile traffic data are essential for a wide\nspectrum of applications including urban planning, network optimization, and\nemergency management. However, large-scale and fine-grained mobility data\nremains difficult to obtain due to privacy concerns and collection costs,\nmaking it essential to simulate realistic mobility and traffic patterns. User\ntrajectories and mobile traffic are fundamentally coupled, reflecting both\nphysical mobility and cyber behavior in urban environments. Despite this strong\ninterdependence, existing studies often model them separately, limiting the\nability to capture cross-modal dynamics. Therefore, a unified framework is\ncrucial. In this paper, we propose MSTDiff, a Multi-Scale Diffusion Transformer\nfor joint simulation of mobile traffic and user trajectories. First, MSTDiff\napplies discrete wavelet transforms for multi-resolution traffic decomposition.\nSecond, it uses a hybrid denoising network to process continuous traffic\nvolumes and discrete location sequences. A transition mechanism based on urban\nknowledge graph embedding similarity is designed to guide semantically informed\ntrajectory generation. Finally, a multi-scale Transformer with cross-attention\ncaptures dependencies between trajectories and traffic. Experiments show that\nMSTDiff surpasses state-of-the-art baselines in traffic and trajectory\ngeneration tasks, reducing Jensen-Shannon divergence (JSD) across key\nstatistical metrics by up to 17.38% for traffic generation, and by an average\nof 39.53% for trajectory generation. The source code is available at:\nhttps://github.com/tsinghua-fib-lab/MSTDiff ."}
{"id": "2510.10302", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.10302", "abs": "https://arxiv.org/abs/2510.10302", "authors": ["Liangkun Chen", "Zijian Wen", "Tian Wu", "Xiaoxi Zhang", "Chuan Wu"], "title": "SP-MoE: Speculative Decoding and Prefetching for Accelerating MoE-based Model Inference", "comment": null, "summary": "The Mixture-of-Experts (MoE) architecture has been widely adopted in large\nlanguage models (LLMs) to reduce computation cost through model sparsity.\nEmploying speculative decoding (SD) can further accelerate MoE inference by\ndrafting multiple tokens per step and verifying them in parallel. However,\ncombining MoE with SD inflates GPU memory and aggravates CPU-GPU bandwidth\ncontention during multi-token verification. Existing MoE offloading systems are\nSD-agnostic and do not address this bottleneck. We present SP-MoE, the first\nSD-aware expert-offloading and compute-communication pipelining framework.\nSP-MoE introduces: (1) speculative expert prefetching that exploits structural\ncorrespondence between the draft and target models to prefetch likely experts\nahead of verification; (2) a cutoff-layer policy that bounds per-layer prefetch\ndepth based on empirical profiles and an analytical latency model, guaranteeing\njust-in-time availability without overfetch; and (3) a pipelined runtime with\nasynchronous prefetch threads and batched I/O to hide loading latency.\nExtensive experiments demonstrate that SP-MoE achieves a 1.07-3.5 times TPOT\nspeedup over state-of-the-art methods across diverse datasets, environments,\nand MoE-based models."}
{"id": "2510.10830", "categories": ["cs.MA", "cs.GT", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.10830", "abs": "https://arxiv.org/abs/2510.10830", "authors": ["Gabriel Smithline", "Scott Nivison"], "title": "Fast and the Furious: Hot Starts in Pursuit-Evasion Games", "comment": "Presented at AAMAS Workshop on Autonomous Robots and Multirobot\n  Systems (ARMS)", "summary": "Effectively positioning pursuers in pursuit-evasion games without prior\nknowledge of evader locations remains a significant challenge. A novel approach\nthat combines game-theoretic control theory with Graph Neural Networks is\nintroduced in this work. By conceptualizing pursuer configurations as strategic\narrangements and representing them as graphs, a Graph Characteristic Space is\nconstructed via multi-objective optimization to identify Pareto-optimal\nconfigurations. A Graph Convolutional Network (GCN) is trained on these\nPareto-optimal graphs to generate strategically effective initial\nconfigurations, termed \"hot starts\". Empirical evaluations demonstrate that the\nGCN-generated hot starts provide a significant advantage over random\nconfigurations. In scenarios considering multiple pursuers and evaders, this\nmethod hastens the decline in evader survival rates, reduces pursuer travel\ndistances, and enhances containment, showcasing clear strategic benefits."}
{"id": "2510.09968", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.HC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.09968", "abs": "https://arxiv.org/abs/2510.09968", "authors": ["Stefan Pasch"], "title": "Operationalizing AI: Empirical Evidence on MLOps Practices, User Satisfaction, and Organizational Context", "comment": null, "summary": "Organizational efforts to utilize and operationalize artificial intelligence\n(AI) are often accompanied by substantial challenges, including scalability,\nmaintenance, and coordination across teams. In response, the concept of Machine\nLearning Operations (MLOps) has emerged as a set of best practices that\nintegrate software engineering principles with the unique demands of managing\nthe ML lifecycle. Yet, empirical evidence on whether and how these practices\nsupport users in developing and operationalizing AI applications remains\nlimited. To address this gap, this study analyzes over 8,000 user reviews of AI\ndevelopment platforms from G2.com. Using zero-shot classification, we measure\nreview sentiment toward nine established MLOps practices, including continuous\nintegration and delivery (CI/CD), workflow orchestration, reproducibility,\nversioning, collaboration, and monitoring. Seven of the nine practices show a\nsignificant positive relationship with user satisfaction, suggesting that\neffective MLOps implementation contributes tangible value to AI development.\nHowever, organizational context also matters: reviewers from small firms\ndiscuss certain MLOps practices less frequently, suggesting that organizational\ncontext influences the prevalence and salience of MLOps, though firm size does\nnot moderate the MLOps-satisfaction link. This indicates that once applied,\nMLOps practices are perceived as universally beneficial across organizational\nsettings."}
{"id": "2510.11361", "categories": ["cs.NI", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.11361", "abs": "https://arxiv.org/abs/2510.11361", "authors": ["Leandro Soares Indrusiak"], "title": "A protocol to reduce worst-case latency in deflection-based on-chip networks", "comment": null, "summary": "We present a novel protocol that reduces worst-case packet latency in\ndeflection-based on-chip interconnect networks. It enforces the deflection of\nthe header of a packet but not its payload, resulting in a reduction in overall\nnetwork traffic and, more importantly, worst-case packet latency due to\ndecreased pre-injection latency."}
{"id": "2510.10236", "categories": ["cs.NI", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2510.10236", "abs": "https://arxiv.org/abs/2510.10236", "authors": ["Dhrumil Bhatt", "Siddharth Penumatsa", "Vidushi Kumar"], "title": "Hybrid MAC Protocol with Integrated Multi-Layered Security for Resource-Constrained UAV Swarm Communications", "comment": "Accepted at ISED 2025", "summary": "Flying Ad Hoc Networks (FANETs) present unique challenges due to high node\nmobility, dynamic topologies, and strict resource constraints. Existing routing\nprotocols often optimize for a single metric, such as path length or energy,\nwhile neglecting the complex dependencies between network performance,\nsecurity, and MAC layer efficiency. This paper introduces a novel hardware\nsoftware co design framework for secure and adaptive UAV swarm communications,\nfeaturing an energy aware protocol stack. The architecture employs a multicast,\nclustered organization where routing decisions integrate dynamic trust scores,\nhistorical link quality, and internodal distance. A hybrid MAC protocol\ncombines contention based and scheduled channel access for optimized\nthroughput. Security is ensured through a zero trust model that fuses\ncryptographic authentication with a behavioral reputation system, alongside\nhardware accelerated AES GCM encryption. Comparative analysis in an NS 3\nsimulation environment demonstrates the framework's superiority in packet\ndelivery ratio, latency, resilience, and overhead, providing a scalable\nfoundation for high performance swarm operations."}
{"id": "2510.10380", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.10380", "abs": "https://arxiv.org/abs/2510.10380", "authors": ["Shouxu Lin", "Zimeng Pan", "Yuhang Yao", "Haeyoung Noh", "Pei Zhang", "Carlee Joe-Wong"], "title": "FLAMMABLE: A Multi-Model Federated Learning Framework with Multi-Model Engagement and Adaptive Batch Sizes", "comment": null, "summary": "Multi-Model Federated Learning (MMFL) is an emerging direction in Federated\nLearning (FL) where multiple models are trained in parallel, generally on\nvarious datasets. Optimizing the models' accuracies and training times in the\nMMFL setting requires adapting to data and system heterogeneity across clients\nas in single-model FL; these challenges are amplified in the MMFL setting due\nto additional heterogeneity across models. Neither existing solutions nor\nna\\\"ive extensions of single-model FL frameworks efficiently address these\nchallenges. To bridge this gap, we propose FLAMMABLE, a comprehensive MMFL\ntraining framework. FLAMMABLE optimizes model training by intelligently\nadapting client batch sizes while engaging them to train multiple carefully\nchosen models, depending on their system capabilities, in each training round.\nTo evaluate FLAMMABLE, we develop the first benchmark platform for the MMFL\nsetting, which may enable future reproducible MMFL research. Extensive\nevaluations on multiple datasets and models show that FLAMMABLE boosts the MMFL\ntime-to-accuracy performance by 1.1$\\sim$10.0$\\times$ while improving the final\nmodel accuracy by 1.3$\\sim$5.4\\% compared to several known baselines."}
{"id": "2510.10943", "categories": ["cs.MA", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.10943", "abs": "https://arxiv.org/abs/2510.10943", "authors": ["Thi-Nhung Nguyen", "Linhao Luo", "Thuy-Trang Vu", "Dinh Phung"], "title": "The Social Cost of Intelligence: Emergence, Propagation, and Amplification of Stereotypical Bias in Multi-Agent Systems", "comment": "15 pages, 19 figures, Preprint. Under review", "summary": "Bias in large language models (LLMs) remains a persistent challenge,\nmanifesting in stereotyping and unfair treatment across social groups. While\nprior research has primarily focused on individual models, the rise of\nmulti-agent systems (MAS), where multiple LLMs collaborate and communicate,\nintroduces new and largely unexplored dynamics in bias emergence and\npropagation. In this work, we present a comprehensive study of stereotypical\nbias in MAS, examining how internal specialization, underlying LLMs and\ninter-agent communication protocols influence bias robustness, propagation, and\namplification. We simulate social contexts where agents represent different\nsocial groups and evaluate system behavior under various interaction and\nadversarial scenarios. Experiments on three bias benchmarks reveal that MAS are\ngenerally less robust than single-agent systems, with bias often emerging early\nthrough in-group favoritism. However, cooperative and debate-based\ncommunication can mitigate bias amplification, while more robust underlying\nLLMs improve overall system stability. Our findings highlight critical factors\nshaping fairness and resilience in multi-agent LLM systems."}
{"id": "2510.10010", "categories": ["cs.SE", "cs.AI", "68N01, 68T05, 68T07", "D.2.5; D.2.7; I.2.2; I.2.6"], "pdf": "https://arxiv.org/pdf/2510.10010", "abs": "https://arxiv.org/abs/2510.10010", "authors": ["Matheus J. T. Vargas"], "title": "SLEAN: Simple Lightweight Ensemble Analysis Network for Multi-Provider LLM Coordination: Design, Implementation, and Vibe Coding Bug Investigation Case Study", "comment": "14 pages, 4 figures, 6 tables, link to code repo", "summary": "We present SLEAN (Simple Lightweight Ensemble Analysis Network), a\ndeterministic framework for coordinating multiple LLM providers through\ntext-based prompt orchestration. Unlike complex multi-agent systems requiring\nspecialized infrastructure, SLEAN operates as a simple prompt bridge between\nLLMs using .txt templates, requiring no deep technical knowledge for\ndeployment. The three-phase protocol formed by independent analysis,\ncross-critique, and arbitration, filters harmful AI-generated code suggestions\nbefore production deployment, addressing how AI-assisted debugging increasingly\nproduces modifications that introduce unnecessary complexity, break existing\nfunctionality, or address problems. Evaluating 15 software bugs, we analyzed 69\nAI-generated fix propositions. SLEAN's filtering accepted 22 fixes (31.9%, 95%\nCI 20.9-42.9%) while rejecting 47 that would have been harmful if applied\nverbatim. The arbitration process reduced code change surface by 83-90%\nrelative to raw AI outputs, enforcing minimal causal edits over scope-expanding\nmodifications. Minimal Type 2 inputs proved more efficient than detailed Type 1\ninputs, requiring 2.85 versus 3.56 propositions per accepted fix (35.1% versus\n28.1% acceptance, about a 20% efficiency gain). Agreement between AI systems\nshowed weak correlation with fix quality: high convergence (at least 80%)\noccurred in 4 of 15 cases and improved acceptance by only 2.4% points;\narbitration appeared only at exactly 10% convergence in 2 of 15 cases, although\nlow convergence alone did not necessitate arbitration. The file-driven,\nprovider-agnostic architecture enables deployment without specialized coding\nexpertise, making it applicable to security auditing, code review, document\nverification, and other domains requiring reliable multi-provider synthesis\nwith end-to-end auditability."}
{"id": "2510.10756", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.10756", "abs": "https://arxiv.org/abs/2510.10756", "authors": ["Mayukh Roy Chowdhury", "Eman Hammad", "Lauri Loven", "Susanna Pirttikangas", "Aloizio P da Silva", "Walid Saad"], "title": "A Framework for AI-Native Semantic-Based Dynamic Slicing for 6G Networks", "comment": null, "summary": "In the ensuing ultra-dense and diverse environment in future \\ac{6G}\ncommunication networks, it will be critical to optimize network resources via\nmechanisms that recognize and cater to the diversity, density, and dynamicity\nof system changes. However, coping with such environments cannot be done\nthrough the current network approach of compartmentalizing data as distinct\nfrom network operations. Instead, we envision a computing continuum where the\ncontent of the transmitted data is considered as an essential element in the\ntransmission of that data, with data sources and streams analyzed and distilled\nto their essential elements, based on their semantic context, and then\nprocessed and transmitted over dedicated slices of network resources. By\nexploiting the rich content and semantics within data for dynamic and\nautonomous optimization of the computing continuum, this article opens the door\nto integrating communication, computing, cyber-physical systems, data flow, and\nAI, presenting new and exciting opportunities for cross-layer design. We\npropose semantic slicing, a two-pronged approach that builds multiple virtual\ndivisions within a single physical and data infrastructure, each with its own\ndistinct characteristics and needs. We view semantic slicing as a novel shift\nfrom current static slicing techniques, extending existing slicing approaches\nsuch that it can be applied dynamically at different levels and categories of\nresources in the computing continuum. Further it propels the advancement of\nsemantic communication via the proposed architectural framework."}
{"id": "2510.10620", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.10620", "abs": "https://arxiv.org/abs/2510.10620", "authors": ["Chenyu Jiang", "Zhenkun Cai", "Ye Tian", "Zhen Jia", "Yida Wang", "Chuan Wu"], "title": "DCP: Addressing Input Dynamism In Long-Context Training via Dynamic Context Parallelism", "comment": "16 pages, 22 figures", "summary": "Context parallelism has emerged as a key technique to support long-context\ntraining, a growing trend in generative AI for modern large models. However,\nexisting context parallel methods rely on static parallelization configurations\nthat overlook the dynamic nature of training data, specifically, the\nvariability in sequence lengths and token relationships (i.e., attention\npatterns) across samples. As a result, these methods often suffer from\nunnecessary communication overhead and imbalanced computation. In this paper,\nwe present DCP, a dynamic context parallel training framework that introduces\nfine-grained blockwise partitioning of both data and computation. By enabling\nflexible mapping of data and computation blocks to devices, DCP can adapt to\nvarying sequence characteristics, effectively reducing communication and\nimproving memory and computation balance. Micro-benchmarks demonstrate that DCP\naccelerates attention by 1.19x~2.45x under causal masks and 2.15x~3.77x under\nsparse attention patterns. Additionally, we observe up to 0.94x~1.16x\nend-to-end training speed-up for causal masks, and 1.00x~1.46x for sparse\nmasks."}
{"id": "2510.11004", "categories": ["cs.MA", "cs.AI", "cs.CE", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.11004", "abs": "https://arxiv.org/abs/2510.11004", "authors": ["Haoran Liang", "Yufa Zhou", "Mohammad Talebi Kalaleh", "Qipei Mei"], "title": "Automating Structural Engineering Workflows with Large Language Model Agents", "comment": "Code: https://github.com/DelosLiang/masse", "summary": "We introduce $\\textbf{MASSE}$, the first Multi-Agent System for Structural\nEngineering, effectively integrating large language model (LLM)-based agents\nwith real-world engineering workflows. Structural engineering is a fundamental\nyet traditionally stagnant domain, with core workflows remaining largely\nunchanged for decades despite its substantial economic impact and global market\nsize. Recent advancements in LLMs have significantly enhanced their ability to\nperform complex reasoning, long-horizon planning, and precise tool utilization\n-- capabilities well aligned with structural engineering tasks such as\ninterpreting design codes, executing load calculations, and verifying\nstructural capacities. We present a proof-of-concept showing that most\nreal-world structural engineering workflows can be fully automated through a\ntraining-free LLM-based multi-agent system. MASSE enables immediate deployment\nin professional environments, and our comprehensive validation on real-world\ncase studies demonstrates that it can reduce expert workload from approximately\ntwo hours to mere minutes, while enhancing both reliability and accuracy in\npractical engineering scenarios."}
{"id": "2510.10066", "categories": ["cs.SE", "cs.AI", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.10066", "abs": "https://arxiv.org/abs/2510.10066", "authors": ["Shan Jiang", "Chenguang Zhu", "Sarfraz Khurshid"], "title": "OBsmith: Testing JavaScript Obfuscator using LLM-powered sketching", "comment": null, "summary": "JavaScript obfuscators are widely deployed to protect intellectual property\nand resist reverse engineering, yet their correctness has been largely\noverlooked compared to performance and resilience. Existing evaluations\ntypically measure resistance to deobfuscation, leaving the critical question of\nwhether obfuscators preserve program semantics unanswered. Incorrect\ntransformations can silently alter functionality, compromise reliability, and\nerode security-undermining the very purpose of obfuscation. To address this\ngap, we present OBsmith, a novel framework to systematically test JavaScript\nobfuscators using large language models (LLMs). OBsmith leverages LLMs to\ngenerate program sketches abstract templates capturing diverse language\nconstructs, idioms, and corner cases-which are instantiated into executable\nprograms and subjected to obfuscation under different configurations. Besides\nLLM-powered sketching, OBsmith also employs a second source: automatic\nextraction of sketches from real programs. This extraction path enables more\nfocused testing of project specific features and lets developers inject domain\nknowledge into the resulting test cases. OBsmith uncovers 11 previously unknown\ncorrectness bugs. Under an equal program budget, five general purpose\nstate-of-the-art JavaScript fuzzers (FuzzJIT, Jsfunfuzz, Superion, DIE,\nFuzzilli) failed to detect these issues, highlighting OBsmith's complementary\nfocus on obfuscation induced misbehavior. An ablation shows that all components\nexcept our generic MRs contribute to at least one bug class; the negative MR\nresult suggests the need for obfuscator-specific metamorphic relations. Our\nresults also seed discussion on how to balance obfuscation presets and\nperformance cost. We envision OBsmith as an important step towards automated\ntesting and quality assurance of obfuscators and other semantic-preserving\ntoolchains."}
{"id": "2510.11043", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.11043", "abs": "https://arxiv.org/abs/2510.11043", "authors": ["Yuemeng Xu", "Haoran Chen", "Jiarui Guo", "Mingwei Cui", "Qiuheng Yin", "Cheng Dong", "Daxiang Kang", "Xian Wu", "Chenmin Sun", "Peng He", "Yang Gao", "Lirong Lai", "Kai Wang", "Hongyu Wu", "Tong Yang", "Xiyun Xu"], "title": "Zephyrus: Scaling Gateways Beyond the Petabit-Era with DPU-Augmented Hierarchical Co-Offloading", "comment": null, "summary": "Operating at petabit-scale, ByteDance's cloud gateways are deployed at\ncritical aggregation points to orchestrate a wide array of business traffic.\nHowever, this massive scale imposes significant resource pressure on our\nprevious-generation cloud gateways, rendering them unsustainable in the face of\never-growing cloud-network traffic. As the DPU market rapidly expands, we see a\npromising path to meet our escalating business traffic demands by integrating\nDPUs with our established Tofino-based gateways. DPUs augment these gateways\nwith substantially larger table capacities and richer programmability without\ncompromising previously low-latency and high-throughput forwarding. Despite\ncompelling advantages, the practical integration of DPUs into cloud gateways\nremains unexplored, primarily due to underlying challenges. In this paper, we\npresent Zephyrus, a production-scale gateway built upon a unified P4 pipeline\nspanning high-performance Tofino and feature-rich DPUs, which successfully\novercomes these challenges. We further introduce a hierarchical co-offloading\narchitecture (HLCO) to orchestrate traffic flow within this heterogeneous\ngateway, achieving > 99% hardware offloading while retaining software fallback\npaths for complex operations. Zephyrus outperforms LuoShen (NSDI '24) with 33%\nhigher throughput and our evaluation further indicates 21% lower power\nconsumption and 14% lower hardware cost. Against FPGA-based systems, Albatross\n(SIGCOMM '25), it doubles the throughput at a substantially lower Total Cost of\nOwnership (TCO), showcasing its superior performance-per-dollar. Beyond these\nperformance gains, we also share key lessons from several years of developing\nand operating Zephyrus at production scale. We believe these insights provide\nvaluable references for researchers and practitioners designing performant\ncloud gateways."}
{"id": "2510.10747", "categories": ["cs.DC", "cs.OS", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.10747", "abs": "https://arxiv.org/abs/2510.10747", "authors": ["Chirag Shetty", "Sarthak Chakraborty", "Hubertus Franke", "Larisa Shwartz", "Chandra Narayanaswami", "Indranil Gupta", "Saurabh Jha"], "title": "CPU-Limits kill Performance: Time to rethink Resource Control", "comment": "Vision Paper accepted to SoCC 2025", "summary": "Research in compute resource management for cloud-native applications is\ndominated by the problem of setting optimal CPU limits -- a fundamental OS\nmechanism that strictly restricts a container's CPU usage to its specified\nCPU-limits . Rightsizing and autoscaling works have innovated on\nallocation/scaling policies assuming the ubiquity and necessity of CPU-limits .\nWe question this. Practical experiences of cloud users indicate that CPU-limits\nharms application performance and costs more than it helps. These observations\nare in contradiction to the conventional wisdom presented in both academic\nresearch and industry best practices. We argue that this indiscriminate\nadoption of CPU-limits is driven by erroneous beliefs that CPU-limits is\nessential for operational and safety purposes. We provide empirical evidence\nmaking a case for eschewing CPU-limits completely from latency-sensitive\napplications. This prompts a fundamental rethinking of auto-scaling and billing\nparadigms and opens new research avenues. Finally, we highlight specific\nscenarios where CPU-limits can be beneficial if used in a well-reasoned way\n(e.g. background jobs)."}
{"id": "2510.11108", "categories": ["cs.MA", "cs.AI", "cs.CR"], "pdf": "https://arxiv.org/pdf/2510.11108", "abs": "https://arxiv.org/abs/2510.11108", "authors": ["Xinfeng Li", "Dong Huang", "Jie Li", "Hongyi Cai", "Zhenhong Zhou", "Wei Dong", "XiaoFeng Wang", "Yang Liu"], "title": "A Vision for Access Control in LLM-based Agent Systems", "comment": "10 pages, 1 figure", "summary": "The autonomy and contextual complexity of LLM-based agents render traditional\naccess control (AC) mechanisms insufficient. Static, rule-based systems\ndesigned for predictable environments are fundamentally ill-equipped to manage\nthe dynamic information flows inherent in agentic interactions. This position\npaper argues for a paradigm shift from binary access control to a more\nsophisticated model of information governance, positing that the core challenge\nis not merely about permission, but about governing the flow of information. We\nintroduce Agent Access Control (AAC), a novel framework that reframes AC as a\ndynamic, context-aware process of information flow governance. AAC operates on\ntwo core modules: (1) multi-dimensional contextual evaluation, which assesses\nnot just identity but also relationships, scenarios, and norms; and (2)\nadaptive response formulation, which moves beyond simple allow/deny decisions\nto shape information through redaction, summarization, and paraphrasing. This\nvision, powered by a dedicated AC reasoning engine, aims to bridge the gap\nbetween human-like nuanced judgment and scalable Al safety, proposing a new\nconceptual lens for future research in trustworthy agent design."}
{"id": "2510.10081", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.10081", "abs": "https://arxiv.org/abs/2510.10081", "authors": ["Youshuai Tan", "Zhanwei Zhang", "Zishuo Ding", "Lianyu Zheng", "Jinfu Chen", "Weiyi Shang"], "title": "A Mathematics-Guided Approach to Floating-Point Error Detection", "comment": null, "summary": "Floating-point program errors can lead to severe consequences, particularly\nin critical domains such as military applications. Only a small subset of\ninputs may induce substantial floating-point errors, prompting researchers to\ndevelop methods for identifying these error-inducing inputs. Although existing\napproaches have achieved some success, they still suffer from two major\nlimitations: (1) High computational cost: The evaluation of error magnitude for\ncandidate inputs relies on high-precision programs, which are prohibitively\ntime-consuming. (2) Limited long-range convergence capability: Current methods\nexhibit inefficiency in search, making the process akin to finding a needle in\na haystack.\n  To address these two limitations, we propose a novel method, named MGDE, to\ndetect error-inducing inputs based on mathematical guidance. By employing the\nNewton-Raphson method, which exhibits quadratic convergence properties, we\nachieve highly effective and efficient results. Since the goal of identifying\nerror-inducing inputs is to uncover the underlying bugs, we use the number of\nbugs detected in floating-point programs as the primary evaluation metric in\nour experiments. As FPCC represents the most effective state-of-the-art\napproach to date, we use it as the baseline for comparison. The dataset of FPCC\nconsists of 88 single-input floating-point programs. FPCC is able to detect 48\nbugs across 29 programs, whereas our method successfully identifies 89 bugs\nacross 44 programs. Moreover, FPCC takes 6.4096 times as long as our proposed\nmethod. We also deploy our method to multi-input programs, identifying a total\nof nine bugs with an average detection time of 0.6443 seconds per program. In\ncontrast, FPCC fails to detect any bugs while requiring an average computation\ntime of 100 seconds per program."}
{"id": "2510.11109", "categories": ["cs.NI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.11109", "abs": "https://arxiv.org/abs/2510.11109", "authors": ["Xiucheng Wang", "Zien Wang", "Nan Cheng", "Wenchao Xu", "Wei Quan", "Xuemin Shen"], "title": "Graph Neural Network-Based Multicast Routing for On-Demand Streaming Services in 6G Networks", "comment": null, "summary": "The increase of bandwidth-intensive applications in sixth-generation (6G)\nwireless networks, such as real-time volumetric streaming and multi-sensory\nextended reality, demands intelligent multicast routing solutions capable of\ndelivering differentiated quality-of-service (QoS) at scale. Traditional\nshortest-path and multicast routing algorithms are either computationally\nprohibitive or structurally rigid, and they often fail to support heterogeneous\nuser demands, leading to suboptimal resource utilization. Neural network-based\napproaches, while offering improved inference speed, typically lack topological\ngeneralization and scalability. To address these limitations, this paper\npresents a graph neural network (GNN)-based multicast routing framework that\njointly minimizes total transmission cost and supports user-specific video\nquality requirements. The routing problem is formulated as a constrained\nminimum-flow optimization task, and a reinforcement learning algorithm is\ndeveloped to sequentially construct efficient multicast trees by reusing paths\nand adapting to network dynamics. A graph attention network (GAT) is employed\nas the encoder to extract context-aware node embeddings, while a long\nshort-term memory (LSTM) module models the sequential dependencies in routing\ndecisions. Extensive simulations demonstrate that the proposed method closely\napproximates optimal dynamic programming-based solutions while significantly\nreducing computational complexity. The results also confirm strong\ngeneralization to large-scale and dynamic network topologies, highlighting the\nmethod's potential for real-time deployment in 6G multimedia delivery\nscenarios. Code is available at https://github.com/UNIC-Lab/GNN-Routing."}
{"id": "2510.10818", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.10818", "abs": "https://arxiv.org/abs/2510.10818", "authors": ["Kevin Chalmers", "Jan Bækgaard Pedersen"], "title": "Fair Kernel-Lock-Free Claim/Release Protocol for Shared Object Access in Cooperatively Scheduled Runtimes", "comment": null, "summary": "We present the first spin-free, kernel-lock-free mutex that cooperates with\nuser-mode schedulers and is formally proven FIFO-fair and linearizable using\nCSP/FDR. Our fairness oracle and stability-based proof method are reusable\nacross coroutine runtime designs. We designed the claim/release protocol for a\nprocess-oriented language -- ProcessJ -- to manage the race for claiming shared\ninter-process communication channels. Internally, we use a lock-free queue to\npark waiting processes for gaining access to a shared object, such as exclusive\naccess to a shared channel to read from or write to. The queue ensures control\nand fairness for processes wishing to access a shared resource, as the protocol\nhandles claim requests in the order they are inserted into the queue. We\nproduce CSP models of our protocol and a mutex specification, demonstrating\nwith FDR that our protocol behaves as a locking mutex."}
{"id": "2510.11410", "categories": ["cs.MA"], "pdf": "https://arxiv.org/pdf/2510.11410", "abs": "https://arxiv.org/abs/2510.11410", "authors": ["Anastasia Psarou", "Łukasz Gorczyca", "Dominik Gaweł", "Rafał Kucharski"], "title": "Autonomous vehicles need social awareness to find optima in multi-agent reinforcement learning routing games", "comment": null, "summary": "Previous work has shown that when multiple selfish Autonomous Vehicles (AVs)\nare introduced to future cities and start learning optimal routing strategies\nusing Multi-Agent Reinforcement Learning (MARL), they may destabilize traffic\nsystems, as they would require a significant amount of time to converge to the\noptimal solution, equivalent to years of real-world commuting.\n  We demonstrate that moving beyond the selfish component in the reward\nsignificantly relieves this issue. If each AV, apart from minimizing its own\ntravel time, aims to reduce its impact on the system, this will be beneficial\nnot only for the system-wide performance but also for each individual player in\nthis routing game.\n  By introducing an intrinsic reward signal based on the marginal cost matrix,\nwe significantly reduce training time and achieve convergence more reliably.\nMarginal cost quantifies the impact of each individual action (route-choice) on\nthe system (total travel time). Including it as one of the components of the\nreward can reduce the degree of non-stationarity by aligning agents'\nobjectives. Notably, the proposed counterfactual formulation preserves the\nsystem's equilibria and avoids oscillations.\n  Our experiments show that training MARL algorithms with our novel reward\nformulation enables the agents to converge to the optimal solution, whereas the\nbaseline algorithms fail to do so. We show these effects in both a toy network\nand the real-world network of Saint-Arnoult. Our results optimistically\nindicate that social awareness (i.e., including marginal costs in routing\ndecisions) improves both the system-wide and individual performance of future\nurban systems with AVs."}
{"id": "2510.10119", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.10119", "abs": "https://arxiv.org/abs/2510.10119", "authors": ["Liutong Han", "Zhiyuan Tan", "Hongbin Zhang", "Pengcheng Wang", "Chu Kang", "Mingjie Xing", "Yanjun Wu"], "title": "IntrinTrans: LLM-based Intrinsic Code Translator for RISC-V Vector", "comment": "9 pages", "summary": "The use of intrinsic functions to exploit hardware-specific capabilities is\nan important approach for optimizing library performance. Many mainstream\nlibraries implement a large number of vectorized algorithms on Arm or x86 SIMD\nintrinsic functions. With the rapid expansion of the RISC-V hardware-software\necosystem, there is a growing demand for support of the RISC-V Vector (RVV)\nextension. Translating existing vectorized intrinsic code onto RVV intrinsics\nis a practical and effective approach. However, current cross-architecture\ntranslation largely relies on manual rewriting, which is time-consuming and\nerror-prone. Furthermore, while some rule-based methods can reduce the need for\nmanual intervention, their translation success rate is limited by incomplete\nrule coverage and syntactic constraints, and the performance suffers from\ninadequate utilization of RVV-specific features. We present IntrinTrans, a\nLLM-based multi-agent approach that utilizes compile-and-test feedback to\ntranslate intrinsic code across architectures automatically, and further\noptimizes the generated RVV intrinsics using register-usage information derived\nfrom liveness analysis. To evaluate the effectiveness of our approach, we\ncollected 34 vectorized algorithm cases from open-source libraries. Each case\nincludes an Arm Neon intrinsics implementation and a RVV intrinsics\nimplementation contributed by the open-source community, together with\ncorrectness and performance tests. Our experiments show that advanced LLMs\nproduce semantically correct RISC-V Vector intrinsics in most cases within a\nlimited number of iterations, and in some cases achieve up to 5.93x the\nperformance of the native implementation from the open-source community."}
{"id": "2510.11123", "categories": ["cs.NI", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2510.11123", "abs": "https://arxiv.org/abs/2510.11123", "authors": ["Pedro E. Gória Silva", "Eduardo S. Lima", "Jules M. Moualeu", "Mohamed Korium", "Pedro H. J. Nardelli"], "title": "Visible Light Communication for Vehicular Networks: A Tutorial", "comment": null, "summary": "The advent of the fifth-generation technology promises to bring about more\nvertical applications and emerging services that include vehicular networks and\nintelligent transportation systems (ITSs). To achieve their vision of real-time\nand safetyapplications, vehicular networks rely on short-range to medium-range\ncommunications. One emerging technology that aims to provide reliability and\nhigh-data rate in short-range communications is the visible light\ncommunications (VLC). Due to its remarkable advantages, some studies have\nrecently investigated the integration of VLC in vehicular networks and ITSs.\nDespite their attractive features, such networks also face several\nimplementation issues. This paper provides an extended tutorial on the\nimplementation of VLC-based vehicular networks. To begin with, we present the\nimplementation characteristics of these systems and discuss some related\nissues. The underlying system considers a general structure with transmitters,\nchannels, and receivers based on photodetectors and cameras, as well as\nstandardization efforts and types of topologies. In addition, we discuss the\nimpact of the sun and artificial light sources, flickering, dimming, throughput\nenhancement, uplink security, and mobility on practical implementation.\nFinally, we highlight some key challenges and potential solutions and provide\nsome directions for future research investigations that could constitute an\nadvancement toward the development of commercial VLC-based vehicular systems."}
{"id": "2510.10833", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.10833", "abs": "https://arxiv.org/abs/2510.10833", "authors": ["Mehdi Zekriyapanah Gashti"], "title": "FIDRS: A Novel Framework for Integrated Distributed Reliable Systems", "comment": null, "summary": "In this paper we represent a new framework for integrated distributed and\nreliable systems. In the proposed framework we have used three parts to\nincrease Satisfaction and Performance of this framework. At first we analyze\nprevious frameworks related to integrated systems, then represent new proposed\nframework in order to improving previous framework, and we discuss its\ndifferent phases. Finally we compare the results of simulation of the new\nframework with previous ones. In FIDRS framework, the technique of\nheterogeneous distributed data base is used to improve Performance and speed in\nresponding to users and in this way we can improve dependability and\nreliability of framework simultaneously. In extraction phase of the new\nframework we have used RMSD algorithm that decreases responding time in big\ndatabase. Finally by using FDIRS framework we succeeded to increase Efficiency,\nPerformance and reliability of integrated systems and remove some of previous\nframeworks problems."}
{"id": "2510.10148", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.10148", "abs": "https://arxiv.org/abs/2510.10148", "authors": ["Mengyao Zhao", "Kaixuan Li", "Lyuye Zhang", "Wenjing Dang", "Chenggong Ding", "Sen Chen", "Zheli Liu"], "title": "A Systematic Study on Generating Web Vulnerability Proof-of-Concepts Using Large Language Models", "comment": null, "summary": "Recent advances in Large Language Models (LLMs) have brought remarkable\nprogress in code understanding and reasoning, creating new opportunities and\nraising new concerns for software security. Among many downstream tasks,\ngenerating Proof-of-Concept (PoC) exploits plays a central role in\nvulnerability reproduction, comprehension, and mitigation. While previous\nresearch has focused primarily on zero-day exploitation, the growing\navailability of rich public information accompanying disclosed CVEs leads to a\nnatural question: can LLMs effectively use this information to automatically\ngenerate valid PoCs? In this paper, we present the first empirical study of\nLLM-based PoC generation for web application vulnerabilities, focusing on the\npractical feasibility of leveraging publicly disclosed information. We evaluate\nGPT-4o and DeepSeek-R1 on 100 real-world and reproducible CVEs across three\nstages of vulnerability disclosure: (1) newly disclosed vulnerabilities with\nonly descriptions, (2) 1-day vulnerabilities with patches, and (3) N-day\nvulnerabilities with full contextual code. Our results show that LLMs can\nautomatically generate working PoCs in 8%-34% of cases using only public data,\nwith DeepSeek-R1 consistently outperforming GPT-4o. Further analysis shows that\nsupplementing code context improves success rates by 17%-20%, with\nfunction-level providing 9%-13% improvement than file-level ones. Further\nintegrating adaptive reasoning strategies to prompt refinement significantly\nimproves success rates to 68%-72%. Our findings suggest that LLMs could reshape\nvulnerability exploitation dynamics. To date, 23 newly generated PoCs have been\naccepted by NVD and Exploit DB."}
{"id": "2510.11198", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.11198", "abs": "https://arxiv.org/abs/2510.11198", "authors": ["Georgios Smpokos", "Dionysis Xenakis", "Marios Kountouris", "Nikolaos Pappas"], "title": "Age of Information-Aware Cognitive Shared Access Networks with Energy Harvesting", "comment": "conference, 6 pages", "summary": "This study investigates a cognitive shared access network with energy\nharvesting capabilities operating under Age of Information (AoI) constraints\nfor the primary user. Secondary transmitters are spatially distributed\naccording to a homogeneous Poisson Point Process (PPP), while the primary user\nis located at a fixed position. The primary transmitter handles bursty packet\narrivals, whereas secondary users operate under saturated traffic conditions.\nTo manage interference and energy, two distinct zones are introduced: an energy\nharvesting zone around the primary transmitter and a guard zone around the\nprimary receiver, within which secondary transmissions are prohibited.\nSecondary users access the channel probabilistically, with access decisions\ndepending on their current battery state (charged or empty) and their location\nrelative to the guard zone. Our objective is to analyze the primary user's AoI\nperformance under three distinct packet management policies."}
{"id": "2510.11189", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.11189", "abs": "https://arxiv.org/abs/2510.11189", "authors": ["Yangyang Wen", "Paul Townend", "Per-Olov Östberg", "Abel Souza", "Clément Courageux-Sudan"], "title": "A Decentralized Microservice Scheduling Approach Using Service Mesh in Cloud-Edge Systems", "comment": "9 pages, 4 figures. Accepted at the 2025 IEEE Joint Cloud Computing\n  (JCC) track of IEEE CISOSE 2025. Conference: IEEE JCC 2025, 16th IEEE\n  International Conference on Joint Cloud Computing, Tucson, Arizona, USA, from\n  July 21 to 24, 2025", "summary": "As microservice-based systems scale across the cloud-edge continuum,\ntraditional centralized scheduling mechanisms increasingly struggle with\nlatency, coordination overhead, and fault tolerance. This paper presents a new\narchitectural direction: leveraging service mesh sidecar proxies as\ndecentralized, in-situ schedulers to enable scalable, low-latency coordination\nin large-scale, cloud-native environments. We propose embedding lightweight,\nautonomous scheduling logic into each sidecar, allowing scheduling decisions to\nbe made locally without centralized control. This approach leverages the\ngrowing maturity of service mesh infrastructures, which support programmable\ndistributed traffic management. We describe the design of such an architecture\nand present initial results demonstrating its scalability potential in terms of\nresponse time and latency under varying request rates. Rather than delivering a\nfinalized scheduling algorithm, this paper presents a system-level\narchitectural direction and preliminary evidence to support its scalability\npotential."}
{"id": "2510.10179", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10179", "abs": "https://arxiv.org/abs/2510.10179", "authors": ["Linghan Huang", "Peizhou Zhao", "Huaming Chen"], "title": "LLMs are All You Need? Improving Fuzz Testing for MOJO with Large Language Models", "comment": null, "summary": "The rapid development of large language models (LLMs) has revolutionized\nsoftware testing, particularly fuzz testing, by automating the generation of\ndiverse and effective test inputs. This advancement holds great promise for\nimproving software reliability. Meanwhile, the introduction of MOJO, a\nhigh-performance AI programming language blending Python's usability with the\nefficiency of C and C++, presents new opportunities to enhance AI model\nscalability and programmability. However, as a new language, MOJO lacks\ncomprehensive testing frameworks and a sufficient corpus for LLM-based testing,\nwhich exacerbates model hallucination. In this case, LLMs will generate\nsyntactically valid but semantically incorrect code, significantly reducing the\neffectiveness of fuzz testing. To address this challenge, we propose\nMOJOFuzzer, the first adaptive LLM-based fuzzing framework designed for\nzero-shot learning environments of emerging programming languages. MOJOFuzzer\nintegrates a mutil-phase framework that systematically eliminates low-quality\ngenerated inputs before execution, significantly improving test case validity.\nFurthermore, MOJOFuzzer dynamically adapts LLM prompts based on runtime\nfeedback for test case mutation, enabling an iterative learning process that\ncontinuously enhances fuzzing efficiency and bug detection performance. Our\nexperimental results demonstrate that MOJOFuzzer significantly enhances test\nvalidity, API coverage, and bug detection performance, outperforming\ntraditional fuzz testing and state-of-the-art LLM-based fuzzing approaches.\nUsing MOJOFuzzer, we have conducted a first large-scale fuzz testing evaluation\nof MOJO, uncorvering 13 previous unknown bugs. This study not only advances the\nfield of LLM-driven software testing but also establishes a foundational\nmethodology for leveraging LLMs in the testing of emerging programming\nlanguages."}
{"id": "2510.11269", "categories": ["cs.NI", "cs.AI", "C.2.3; C.2.4; C.2.5"], "pdf": "https://arxiv.org/pdf/2510.11269", "abs": "https://arxiv.org/abs/2510.11269", "authors": ["Antonio Montieri", "Alfredo Nascita", "Antonio Pescapè"], "title": "From Prompts to Packets: A View from the Network on ChatGPT, Copilot, and Gemini", "comment": "13 pages, 8 figures, 2 tables, 4 research questions, preprint\n  submitted to Elsevier Computer Networks", "summary": "Generative AI (GenAI) chatbots are now pervasive in digital ecosystems, yet\ntheir network traffic remains largely underexplored. This study presents an\nin-depth investigation of traffic generated by three leading chatbots (ChatGPT,\nCopilot, and Gemini) when accessed via Android mobile apps for both text and\nimage generation. Using a dedicated capture architecture, we collect and label\ntwo complementary workloads: a 60-hour generic dataset with unconstrained\nprompts, and a controlled dataset built from identical prompts across GenAI\napps and replicated via conventional messaging apps to enable one-to-one\ncomparisons. This dual design allows us to address practical research questions\non the distinctiveness of GenAI traffic, its differences from widely deployed\ntraffic categories, and its novel implications for network usage. To this end,\nwe provide fine-grained traffic characterization at trace, flow, and protocol\nlevels, and model packet-sequence dynamics with Multimodal Markov Chains. Our\nanalyses reveal app- and content-specific traffic patterns, particularly in\nvolume, uplink/downlink profiles, and protocol adoption. We highlight the\npredominance of TLS, with Gemini extensively leveraging QUIC, ChatGPT\nexclusively using TLS 1.3, and app- and content-specific Server Name Indication\n(SNI) values. A payload-based occlusion analysis quantifies SNI's contribution\nto classification: masking it reduces F1-score by up to 20 percentage points in\nGenAI app traffic classification. Finally, compared with conventional messaging\napps when carrying the same content, GenAI chatbots exhibit unique traffic\ncharacteristics, highlighting new stress factors for mobile networks, such as\nsustained upstream activity, with direct implications for network monitoring\nand management. We publicly release the datasets to support reproducibility and\nfoster extensions to other use cases."}
{"id": "2510.11211", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.11211", "abs": "https://arxiv.org/abs/2510.11211", "authors": ["Sheikh Azizul Hakim", "Saem Hasan"], "title": "An Explorative Study on Distributed Computing Techniques in Training and Inference of Large Language Models", "comment": null, "summary": "Large language models (LLM) are advanced AI systems trained on extensive\ntextual data, leveraging deep learning techniques to understand and generate\nhuman-like language. Today's LLMs with billions of parameters are so huge that\nhardly any single computing node can train, fine-tune, or infer from them.\nTherefore, several distributed computing techniques are being introduced in the\nliterature to properly utilize LLMs. We have explored the application of\ndistributed computing techniques in LLMs from two angles.\n  \\begin{itemize}\n  \\item We study the techniques that democratize the LLM, that is, how large\nmodels can be run on consumer-grade computers. Here, we also implement a novel\nmetaheuristics-based modification to an existing system.\n  \\item We perform a comparative study on three state-of-the-art LLM serving\ntechniques. \\end{itemize}"}
{"id": "2510.10290", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.10290", "abs": "https://arxiv.org/abs/2510.10290", "authors": ["Sayan Mandal", "Hua Jiang"], "title": "Grounded AI for Code Review: Resource-Efficient Large-Model Serving in Enterprise Pipelines", "comment": "Submitted to MLSys 2026", "summary": "Automated code review adoption lags in compliance-heavy settings, where\nstatic analyzers produce high-volume, low-rationale outputs, and naive LLM use\nrisks hallucination and incurring cost overhead. We present a production system\nfor grounded, PR-native review that pairs static-analysis findings with\nAST-guided context extraction and a single-GPU, on-demand serving stack\n(quantized open-weight model, multi-tier caching) to deliver concise\nexplanations and remediation guidance. Evaluated on safety-oriented C/C++\nstandards, the approach achieves sub-minute median first-feedback (offline p50\nbuild+LLM 59.8s) while maintaining competitive violation reduction and lower\nviolation rates versus larger proprietary models. The architecture is\ndecoupled: teams can adopt the grounding/prompting layer or the serving layer\nindependently. A small internal survey (n=8) provides directional signals of\nreduced triage effort and moderate perceived grounding, with participants\nreporting fewer human review iterations. We outline operational lessons and\nlimitations, emphasizing reproducibility, auditability, and pathways to broader\nstandards and assisted patching."}
{"id": "2510.11291", "categories": ["cs.NI", "cs.IT", "cs.LG", "math.IT", "68M20, 60K25, 93C23, 93D05, 90B18, 68M10, 68T07", "C.2.1; C.2.3; C.4; I.2.6; I.6.5; G.3"], "pdf": "https://arxiv.org/pdf/2510.11291", "abs": "https://arxiv.org/abs/2510.11291", "authors": ["Muhammad Bilal", "Xiaolong Xu"], "title": "Network-Optimised Spiking Neural Network (NOS) Scheduling for 6G O-RAN: Spectral Margin and Delay-Tail Control", "comment": "6 pages, 5 figures, 1 table", "summary": "This work presents a Network-Optimised Spiking (NOS) delay-aware scheduler\nfor 6G radio access. The scheme couples a bounded two-state kernel to a\nclique-feasible proportional-fair (PF) grant head: the excitability state acts\nas a finite-buffer proxy, the recovery state suppresses repeated grants, and\nneighbour pressure is injected along the interference graph via delayed spikes.\nA small-signal analysis yields a delay-dependent threshold $k_\\star(\\Delta)$\nand a spectral margin $\\delta = k_\\star(\\Delta) - gH\\rho(W)$ that compress\ntopology, controller gain, and delay into a single design parameter. Under\nlight assumptions on arrivals, we prove geometric ergodicity for $\\delta>0$ and\nderive sub-Gaussian backlog and delay tail bounds with exponents proportional\nto $\\delta$. A numerical study, aligned with the analysis and a DU compute\nbudget, compares NOS with PF and delayed backpressure (BP) across interference\ntopologies over a $5$--$20$\\,ms delay sweep. With a single gain fixed at the\nworst spectral radius, NOS sustains higher utilisation and a smaller\n99.9th-percentile delay while remaining clique-feasible on integer PRBs."}
{"id": "2510.11513", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.11513", "abs": "https://arxiv.org/abs/2510.11513", "authors": ["Alex Elwood", "Tom Deakin", "Justin Lovegrove", "Chris Nelson"], "title": "An Asynchronous Many-Task Algorithm for Unstructured $S_{N}$ Transport on Shared Memory Systems", "comment": null, "summary": "Discrete ordinates $S_N$ transport solvers on unstructured meshes pose a\nchallenge to scale due to complex data dependencies, memory access patterns and\na high-dimensional domain. In this paper, we review the performance bottlenecks\nwithin the shared memory parallelization scheme of an existing transport solver\non modern many-core architectures with high core counts. With this analysis, we\nthen survey the performance of this solver across a variety of compute\nhardware. We then present a new Asynchronous Many-Task (AMT) algorithm for\nshared memory parallelism, present results showing an increase in computational\nperformance over the existing method, and evaluate why performance is improved."}
{"id": "2510.10320", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10320", "abs": "https://arxiv.org/abs/2510.10320", "authors": ["Lorena Poenaru-Olaru", "Wouter van 't Hof", "Adrian Stando", "Arkadiusz P. Trawinski", "Eileen Kapel", "Jan S. Rellermeyer", "Luis Cruz", "Arie van Deursen"], "title": "Prepared for the Unknown: Adapting AIOps Capacity Forecasting Models to Data Changes", "comment": null, "summary": "Capacity management is critical for software organizations to allocate\nresources effectively and meet operational demands. An important step in\ncapacity management is predicting future resource needs often relies on\ndata-driven analytics and machine learning (ML) forecasting models, which\nrequire frequent retraining to stay relevant as data evolves. Continuously\nretraining the forecasting models can be expensive and difficult to scale,\nposing a challenge for engineering teams tasked with balancing accuracy and\nefficiency. Retraining only when the data changes appears to be a more\ncomputationally efficient alternative, but its impact on accuracy requires\nfurther investigation. In this work, we investigate the effects of retraining\ncapacity forecasting models for time series based on detected changes in the\ndata compared to periodic retraining. Our results show that drift-based\nretraining achieves comparable forecasting accuracy to periodic retraining in\nmost cases, making it a cost-effective strategy. However, in cases where data\nis changing rapidly, periodic retraining is still preferred to maximize the\nforecasting accuracy. These findings offer actionable insights for software\nteams to enhance forecasting systems, reducing retraining overhead while\nmaintaining robust performance."}
{"id": "2510.11361", "categories": ["cs.NI", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.11361", "abs": "https://arxiv.org/abs/2510.11361", "authors": ["Leandro Soares Indrusiak"], "title": "A protocol to reduce worst-case latency in deflection-based on-chip networks", "comment": null, "summary": "We present a novel protocol that reduces worst-case packet latency in\ndeflection-based on-chip interconnect networks. It enforces the deflection of\nthe header of a packet but not its payload, resulting in a reduction in overall\nnetwork traffic and, more importantly, worst-case packet latency due to\ndecreased pre-injection latency."}
{"id": "2510.11697", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.11697", "abs": "https://arxiv.org/abs/2510.11697", "authors": ["Matteo Mordacchini", "Emanuele Carlini", "Patrizio Dazzi"], "title": "A Fast-Converging Decentralized Approach to the Weighted Minimum Vertex Cover Problem", "comment": null, "summary": "We address the problem of computing a Minimum Weighted Vertex Cover (MWVC) in\na decentralized network. MWVC, a classical NP-hard problem, is foundational in\napplications such as network monitoring and resource placement. We propose a\nfully decentralized protocol where each node makes decisions using only local\nknowledge and communicates with its neighbors. The method is adaptive,\ncommunication-efficient, and avoids centralized coordination. We evaluate the\nprotocol on real-world and synthetic graphs, comparing it to both centralized\nand decentralized baselines. Our results demonstrate competitive solution\nquality with reduced communication overhead, highlighting the feasibility of\nMWVC computation in decentralized environments."}
{"id": "2510.10321", "categories": ["cs.SE", "cs.AI", "cs.CR"], "pdf": "https://arxiv.org/pdf/2510.10321", "abs": "https://arxiv.org/abs/2510.10321", "authors": ["Jugal Gajjar", "Kaustik Ranaware", "Kamalasankari Subramaniakuppusamy"], "title": "Bridging Semantics & Structure for Software Vulnerability Detection using Hybrid Network Models", "comment": "13 pages, 3 figures, 5 tables, 14 equations, accepted at the 14th\n  International Conference on Complex Networks and Their Applications (COMPLEX\n  NETWORKS 2025) and the conference proceedings will be published by Springer\n  in the Studies in Computational Intelligence series", "summary": "Software vulnerabilities remain a persistent risk, yet static and dynamic\nanalyses often overlook structural dependencies that shape insecure behaviors.\nViewing programs as heterogeneous graphs, we capture control- and data-flow\nrelations as complex interaction networks. Our hybrid framework combines these\ngraph representations with light-weight (<4B) local LLMs, uniting topological\nfeatures with semantic reasoning while avoiding the cost and privacy concerns\nof large cloud models. Evaluated on Java vulnerability detection (binary\nclassification), our method achieves 93.57% accuracy-an 8.36% gain over Graph\nAttention Network-based embeddings and 17.81% over pretrained LLM baselines\nsuch as Qwen2.5 Coder 3B. Beyond accuracy, the approach extracts salient\nsubgraphs and generates natural language explanations, improving\ninterpretability for developers. These results pave the way for scalable,\nexplainable, and locally deployable tools that can shift vulnerability analysis\nfrom purely syntactic checks to deeper structural and semantic insights,\nfacilitating broader adoption in real-world secure software development."}
{"id": "2510.11535", "categories": ["cs.NI", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.11535", "abs": "https://arxiv.org/abs/2510.11535", "authors": ["Vincenzo Norman Vitale", "Antonia Maria Tulino", "Andreas F. Molisch", "Jaime Llorca"], "title": "A Flexible Multi-Agent Deep Reinforcement Learning Framework for Dynamic Routing and Scheduling of Latency-Critical Services", "comment": null, "summary": "Timely delivery of delay-sensitive information over dynamic, heterogeneous\nnetworks is increasingly essential for a range of interactive applications,\nsuch as industrial automation, self-driving vehicles, and augmented reality.\nHowever, most existing network control solutions target only average delay\nperformance, falling short of providing strict End-to-End (E2E) peak latency\nguarantees. This paper addresses the challenge of reliably delivering packets\nwithin application-imposed deadlines by leveraging recent advancements in\nMulti-Agent Deep Reinforcement Learning (MA-DRL). After introducing the\nDelay-Constrained Maximum-Throughput (DCMT) dynamic network control problem,\nand highlighting the limitations of current solutions, we present a novel\nMA-DRL network control framework that leverages a centralized routing and\ndistributed scheduling architecture. The proposed framework leverages critical\nnetworking domain knowledge for the design of effective MA-DRL strategies based\non the Multi-Agent Deep Deterministic Policy Gradient (MADDPG) technique, where\ncentralized routing and distributed scheduling agents dynamically assign paths\nand schedule packet transmissions according to packet lifetimes, thereby\nmaximizing on-time packet delivery. The generality of the proposed framework\nallows integrating both data-driven \\blue{Deep Reinforcement Learning (DRL)}\nagents and traditional rule-based policies in order to strike the right balance\nbetween performance and learning complexity. Our results confirm the\nsuperiority of the proposed framework with respect to traditional stochastic\noptimization-based approaches and provide key insights into the role and\ninterplay between data-driven DRL agents and new rule-based policies for both\nefficient and high-performance control of latency-critical services."}
{"id": "2510.10460", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10460", "abs": "https://arxiv.org/abs/2510.10460", "authors": ["Zongyi Lyu", "Songqiang Chen", "Zhenlan Ji", "Liwen Wang", "Shuai Wang", "Daoyuan Wu", "Wenxuan Wang", "Shing-Chi Cheung"], "title": "Testing and Enhancing Multi-Agent Systems for Robust Code Generation", "comment": "19pages, 5 figures", "summary": "Multi-agent systems (MASs) have emerged as a promising paradigm for automated\ncode generation, demonstrating impressive performance on established benchmarks\nby decomposing complex coding tasks across specialized agents with different\nroles. Despite their prosperous development and adoption, their robustness\nremains pressingly under-explored, raising critical concerns for real-world\ndeployment. This paper presents the first comprehensive study examining the\nrobustness of MASs for code generation through a fuzzing-based testing\napproach. By designing a fuzzing pipeline incorporating semantic-preserving\nmutation operators and a novel fitness function, we assess mainstream MASs\nacross multiple datasets and LLMs. Our findings reveal substantial robustness\nflaws of various popular MASs: they fail to solve 7.9%-83.3% of problems they\ninitially resolved successfully after applying the semantic-preserving\nmutations. Through comprehensive failure analysis, we identify a common yet\nlargely overlooked cause of the robustness issue: miscommunications between\nplanning and coding agents, where plans lack sufficient detail and coding\nagents misinterpret intricate logic, aligning with the challenges inherent in a\nmulti-stage information transformation process. Accordingly, we also propose a\nrepairing method that encompasses multi-prompt generation and introduces a new\nmonitor agent to address this issue. Evaluation shows that our repairing method\neffectively enhances the robustness of MASs by solving 40.0%-88.9% of\nidentified failures. Our work uncovers critical robustness flaws in MASs and\nprovides effective mitigation strategies, contributing essential insights for\ndeveloping more reliable MASs for code generation."}
{"id": "2510.10551", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.10551", "abs": "https://arxiv.org/abs/2510.10551", "authors": ["Baris Ardic", "Quentin Le Dilavrec", "Andy Zaidman"], "title": "How Students Use Generative AI for Software Testing: An Observational Study", "comment": "39 pages, 6 figures, journal submission", "summary": "The integration of generative AI tools like ChatGPT into software engineering\nworkflows opens up new opportunities to boost productivity in tasks such as\nunit test engineering. However, these AI-assisted workflows can also\nsignificantly alter the developer's role, raising concerns about control,\noutput quality, and learning, particularly for novice developers. This study\ninvestigates how novice software developers with foundational knowledge in\nsoftware testing interact with generative AI for engineering unit tests. Our\ngoal is to examine the strategies they use, how heavily they rely on generative\nAI, and the benefits and challenges they perceive when using generative\nAI-assisted approaches for test engineering. We conducted an observational\nstudy involving 12 undergraduate students who worked with generative AI for\nunit testing tasks. We identified four interaction strategies, defined by\nwhether the test idea or the test implementation originated from generative AI\nor the participant. Additionally, we singled out prompting styles that focused\non one-shot or iterative test generation, which often aligned with the broader\ninteraction strategy. Students reported benefits including time-saving, reduced\ncognitive load, and support for test ideation, but also noted drawbacks such as\ndiminished trust, test quality concerns, and lack of ownership. While strategy\nand prompting styles influenced workflow dynamics, they did not significantly\naffect test effectiveness or test code quality as measured by mutation score or\ntest smells."}
{"id": "2510.10819", "categories": ["cs.SE", "cs.AI", "68N01, 68T05, 68T07, 68T50", "D.2.2; D.2.5; D.2.6; D.2.8; I.2.6; I.2.7; I.2.11"], "pdf": "https://arxiv.org/pdf/2510.10819", "abs": "https://arxiv.org/abs/2510.10819", "authors": ["Vivek Acharya"], "title": "Generative AI and the Transformation of Software Development Practices", "comment": "16 pages; 1 figure; preprint; v", "summary": "Generative AI is reshaping how software is designed, written, and maintained.\nAdvances in large language models (LLMs) are enabling new development styles -\nfrom chat-oriented programming and 'vibe coding' to agentic programming - that\ncan accelerate productivity and broaden access. This paper examines how\nAI-assisted techniques are changing software engineering practice, and the\nrelated issues of trust, accountability, and shifting skills. We survey\niterative chat-based development, multi-agent systems, dynamic prompt\norchestration, and integration via the Model Context Protocol (MCP). Using case\nstudies and industry data, we outline both the opportunities (faster cycles,\ndemocratized coding) and the challenges (model reliability and cost) of\napplying generative AI to coding. We describe new roles, skills, and best\npractices for using AI in a responsible and effective way."}
{"id": "2510.10824", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10824", "abs": "https://arxiv.org/abs/2510.10824", "authors": ["Mohanakrishnan Hariharan", "Satish Arvapalli", "Seshu Barma", "Evangeline Sheela"], "title": "Agentic RAG for Software Testing with Hybrid Vector-Graph and Multi-Agent Orchestration", "comment": null, "summary": "We present an approach to software testing automation using Agentic\nRetrieval-Augmented Generation (RAG) systems for Quality Engineering (QE)\nartifact creation. We combine autonomous AI agents with hybrid vector-graph\nknowledge systems to automate test plan, case, and QE metric generation. Our\napproach addresses traditional software testing limitations by leveraging LLMs\nsuch as Gemini and Mistral, multi-agent orchestration, and enhanced\ncontextualization. The system achieves remarkable accuracy improvements from\n65% to 94.8% while ensuring comprehensive document traceability throughout the\nquality engineering lifecycle. Experimental validation of enterprise Corporate\nSystems Engineering and SAP migration projects demonstrates an 85% reduction in\ntesting timeline, an 85% improvement in test suite efficiency, and projected\n35% cost savings, resulting in a 2-month acceleration of go-live."}
{"id": "2510.10840", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10840", "abs": "https://arxiv.org/abs/2510.10840", "authors": ["Seshu Barma", "Mohanakrishnan Hariharan", "Satish Arvapalli"], "title": "Software Defect Prediction using Autoencoder Transformer Model", "comment": null, "summary": "An AI-ML-powered quality engineering approach uses AI-ML to enhance software\nquality assessments by predicting defects. Existing ML models struggle with\nnoisy data types, imbalances, pattern recognition, feature extraction, and\ngeneralization. To address these challenges, we develop a new model, Adaptive\nDifferential Evolution (ADE) based Quantum Variational Autoencoder-Transformer\n(QVAET) Model (ADE-QVAET). ADE combines with QVAET to obtain high-dimensional\nlatent features and maintain sequential dependencies, resulting in enhanced\ndefect prediction accuracy. ADE optimization enhances model convergence and\npredictive performance. ADE-QVAET integrates AI-ML techniques such as tuning\nhyperparameters for scalable and accurate software defect prediction,\nrepresenting an AI-ML-driven technology for quality engineering. During\ntraining with a 90% training percentage, ADE-QVAET achieves high accuracy,\nprecision, recall, and F1-score of 98.08%, 92.45%, 94.67%, and 98.12%,\nrespectively, when compared to the Differential Evolution (DE) ML model."}
{"id": "2510.10887", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10887", "abs": "https://arxiv.org/abs/2510.10887", "authors": ["Lakshana Iruni Assalaarachchi", "Zainab Masood", "Rashina Hoda", "John Grundy"], "title": "Generative AI for Software Project Management: Insights from a Review of Software Practitioner Literature", "comment": null, "summary": "Software practitioners are discussing GenAI transformations in software\nproject management openly and widely. To understand the state of affairs, we\nperformed a grey literature review using 47 publicly available practitioner\nsources including blogs, articles, and industry reports. We found that software\nproject managers primarily perceive GenAI as an \"assistant\", \"copilot\", or\n\"friend\" rather than as a \"PM replacement\", with support of GenAI in automating\nroutine tasks, predictive analytics, communication and collaboration, and in\nagile practices leading to project success. Practitioners emphasize responsible\nGenAI usage given concerns such as hallucinations, ethics and privacy, and lack\nof emotional intelligence and human judgment. We present upskilling\nrequirements for software project managers in the GenAI era mapped to the\nProject Management Institute's talent triangle. We share key recommendations\nfor both practitioners and researchers."}
{"id": "2510.10956", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.10956", "abs": "https://arxiv.org/abs/2510.10956", "authors": ["Zhiqiang Yuan", "Wenjun Mao", "Zhuo Chen", "Xiyue Shang", "Chong Wang", "Yiling Lou", "Xin Peng"], "title": "Project-Level C-to-Rust Translation via Synergistic Integration of Knowledge Graphs and Large Language Models", "comment": null, "summary": "Translating C code into safe Rust is an effective way to ensure its memory\nsafety. Compared to rule-based translation which produces Rust code that\nremains largely unsafe, LLM-based methods can generate more idiomatic and safer\nRust code because LLMs have been trained on vast amount of human-written\nidiomatic code. Although promising, existing LLM-based methods still struggle\nwith project-level C-to-Rust translation. They typically partition a C project\ninto smaller units (\\eg{} functions) based on call graphs and translate them\nbottom-up to resolve program dependencies. However, this bottom-up,\nunit-by-unit paradigm often fails to translate pointers due to the lack of a\nglobal perspective on their usage. To address this problem, we propose a novel\nC-Rust Pointer Knowledge Graph (KG) that enriches a code-dependency graph with\ntwo types of pointer semantics: (i) pointer-usage information which record\nglobal behaviors such as points-to flows and map lower-level struct usage to\nhigher-level units; and (ii) Rust-oriented annotations which encode ownership,\nmutability, nullability, and lifetime. Synthesizing the \\kg{} with LLMs, we\nfurther propose \\ourtool{}, which implements a project-level C-to-Rust\ntranslation technique. In \\ourtool{}, the \\kg{} provides LLMs with\ncomprehensive pointer semantics from a global perspective, thus guiding LLMs\ntowards generating safe and idiomatic Rust code from a given C project. Our\nexperiments show that \\ourtool{} reduces unsafe usages in translated Rust by\n99.9\\% compared to both rule-based translation and traditional LLM-based\nrewriting, while achieving an average 29.3\\% higher functional correctness than\nthose fuzzing-enhanced LLM methods."}
{"id": "2510.11039", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.11039", "abs": "https://arxiv.org/abs/2510.11039", "authors": ["Yifeng Zhu", "Xianlin Zhao", "Xutian Li", "Yanzhen Zou", "Haizhuo Yuan", "Yue Wang", "Bing Xie"], "title": "RepoSummary: Feature-Oriented Summarization and Documentation Generation for Code Repositories", "comment": null, "summary": "Repository summarization is a crucial research question in development and\nmaintenance for software engineering. Existing repository summarization\ntechniques primarily focus on summarizing code according to the directory tree,\nwhich is insufficient for tracing high-level features to the methods that\ncollaboratively implement them. To address these limitations, we propose\nRepoSummary, a feature-oriented code repository summarization approach that\nsimultaneously generates repository documentation automatically. Furthermore,\nit establishes more accurate traceability links from functional features to the\ncorresponding code elements, enabling developers to rapidly locate relevant\nmethods and files during code comprehension and maintenance. Comprehensive\nexperiments against the state-of-the-art baseline (HGEN) demonstrate that\nRepoSummary achieves higher feature coverage and more accurate traceability. On\naverage, it increases the rate of completely covered features in manual\ndocumentation from 61.2% to 71.1%, improves file-level traceability recall from\n29.9% to 53.0%, and generates documentation that is more conceptually\nconsistent, easier to understand, and better formatted than that produced by\nexisting approaches."}
{"id": "2510.11059", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.11059", "abs": "https://arxiv.org/abs/2510.11059", "authors": ["Jian Wang", "Xiaofei Xie", "Qiang Hu", "Shangqing Liu", "Jiongchi Yu", "Jiaolong Klong", "Yi Li"], "title": "Defects4C: Benchmarking Large Language Model Repair Capability with C/C++ Bugs", "comment": "ASE-2025 main research paper", "summary": "Automated Program Repair (APR) plays a critical role in enhancing the quality\nand reliability of software systems. While substantial progress has been made\nin Java-based APR, largely facilitated by benchmarks like Defects4J, there\nremains a significant gap in research on C/C++ program repair, despite the\nwidespread use of C/C++ and the prevalence of associated vulnerabilities. This\ngap is primarily due to the lack of high-quality, open-source benchmarks\ntailored for C/C++.\n  To address this issue, we introduce Defects4C, a comprehensive and executable\nbenchmark specifically designed for C/C++ program repair. Our dataset is\nconstructed from real-world C/C++ repositories and includes a large collection\nof bug-relevant commits (9M in total), 248 high-quality buggy functions, and\n102 vulnerable functions, all paired with test cases for reproduction. These\nresources enable rigorous evaluation of repair techniques and support the\nretraining of learning-based approaches for enhanced performance.\n  Using Defects4C, we conduct a comprehensive empirical study evaluating the\neffectiveness of 24 state-of-the-art large language models (LLMs) in repairing\nC/C++ faults. Our findings offer valuable insights into the strengths and\nlimitations of current LLM-based APR techniques in this domain, highlighting\nboth the need for more robust methods and the critical role of Defects4C in\nadvancing future research"}
{"id": "2510.11076", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.11076", "abs": "https://arxiv.org/abs/2510.11076", "authors": ["Lingyue Fu", "Haowei Yuan", "Datong Chen", "Xinyi Dai", "Qingyao Li", "Weinan Zhang", "Weiwen Liu", "Yong Yu"], "title": "DebugTA: An LLM-Based Agent for Simplifying Debugging and Teaching in Programming Education", "comment": null, "summary": "In programming education, Debugging and Teaching (DT) task is a common\nscenario where students receive assistance in correcting their erroneous code.\nThe task involves multiple inputs, including erroneous code, error messages,\nreference solutions, and the question description, with the goal of generating\nmodification suggestions to the erroneous code. However, two key challenges\nhinder the effectiveness of existing approaches. Firstly, the complexity and\nheterogeneity of inputs inherent in DT tasks significantly elevate the\nreasoning challenges faced by LLMs. Second, existing approaches often fail to\nfully leverage the availability of standard code in DT tasks, forcing models to\nrely solely on complex multi-step reasoning, which limits the potential of LLMs\nin addressing DT tasks effectively. To address these challenges, we propose\nDebugTA, a novel LLM-based debugging and teaching agent with specialized tools\nfor standard code retrieval, variable substitution to align reference code, and\nan external compiler for real-time code analysis. Guided by explicit\npedagogical and debugging principles, DebugTA acts as an agent that decomposes\na complex task into sequential LLM interactions, each utilizing distinct tools\nfor specific subtasks, thereby simplifying the logical reasoning at each step\nand reducing overall reasoning complexity. Furthermore, DebugTA utilizes tool\ncalls to align the standard code with the erroneous code as much as possible,\nallowing the LLM to focus on logic errors within the erroneous code and\nimproving the accuracy of the generated suggestions. To rigorously assess the\nquality of modification suggestions, we introduce a student simulator-teacher\ninteraction paradigm. Experimental results on three real-world code datasets\ndemonstrate that DebugTA consistently improves teaching effectiveness while\nsignificantly reducing computational costs."}
{"id": "2510.11138", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.11138", "abs": "https://arxiv.org/abs/2510.11138", "authors": ["Zitao Wang", "Zhimin Zhao", "Michael W. Godfrey"], "title": "What Slows Down FMware Development? An Empirical Study of Developer Challenges and Resolution Times", "comment": null, "summary": "Foundation Models (FMs), such as OpenAI's GPT, are fundamentally transforming\nthe practice of software engineering by enabling the development of\n\\emph{FMware} -- applications and infrastructures built around these models.\nFMware systems now support tasks such as code generation, natural-language\ninteraction, knowledge integration, and multi-modal content creation,\nunderscoring their disruptive impact on current software engineering workflows.\nHowever, the design, implementation, and evolution of FMware present\nsignificant new challenges, particularly across cloud-based and on-premise\nplatforms where goals, processes, and tools often diverge from those of\ntraditional software development.\n  To our knowledge, this is the first large-scale analysis of FMware\ndevelopment across both cloud-based platforms and open-source repositories. We\nempirically investigate the FMware ecosystem through three focus areas: (1) the\nmost common application domains of FMware, (2) the key challenges developers\nencounter, and (3) the types of issues that demand the greatest effort to\nresolve. Our analysis draws on data from GitHub repositories and from leading\nFMware platforms, including HuggingFace, GPTStore, Ora, and Poe. Our findings\nreveal a strong focus on education, content creation, and business strategy,\nalongside persistent technical challenges in memory management, dependency\nhandling, and tokenizer configuration. On GitHub, bug reports and core\nfunctionality issues are the most frequently reported problems, while code\nreview, similarity search, and prompt template design are the most\ntime-consuming to resolve.\n  By uncovering developer practices and pain points, this study points to\nopportunities to improve FMware tools, workflows, and community support, and\nprovides actionable insights to help guide the future of FMware development."}
{"id": "2510.11179", "categories": ["cs.SE", "astro-ph.IM"], "pdf": "https://arxiv.org/pdf/2510.11179", "abs": "https://arxiv.org/abs/2510.11179", "authors": ["David Georg Reichelt", "Shinhyung Yang", "Wilhelm Hasselbring"], "title": "Interoperability From OpenTelemetry to Kieker: Demonstrated as Export from the Astronomy Shop", "comment": "Accepted for publication in Symposium on Software Performance 2025", "summary": "The observability framework Kieker provides a range of analysis capabilities,\nbut it is currently only able to instrument a smaller selection of languages\nand technologies, including Java, C, Fortran, and Python. The OpenTelemetry\nstandard aims for providing reference implementations for most programming\nlanguages, including C# and JavaScript, that are currently not supported by\nKieker. In this work, we describe how to transform OpenTelemetry tracing data\ninto the Kieker framework. Thereby, it becomes possible to create for example\ncall trees from OpenTelemetry instrumentations. We demonstrate the usability of\nour approach by visualizing trace data of the Astronomy Shop, which is an\nOpenTelemetry demo application."}
{"id": "2510.11310", "categories": ["cs.SE", "cs.OS", "cs.PF", "D.2.8; D.4.8; C.4"], "pdf": "https://arxiv.org/pdf/2510.11310", "abs": "https://arxiv.org/abs/2510.11310", "authors": ["Shinhyung Yang", "David Georg Reichelt", "Henrik Ingo", "Wilhelm Hasselbring"], "title": "Detection of Performance Changes in MooBench Results Using Nyrkiö on GitHub Actions", "comment": "3 pages, 3 figures, 16th Symposium on Software Performance\n  (https://www.performance-symposium.org/)", "summary": "In GitHub with its 518 million hosted projects, performance changes within\nthese projects are highly relevant to the project's users. Although performance\nmeasurement is supported by GitHub CI/CD, performance change detection is a\nchallenging topic.\n  In this paper, we demonstrate how we incorporated Nyrki\\\"o to MooBench. Prior\nto this work, Moobench continuously ran on GitHub virtual machines, measuring\noverhead of tracing agents, but without change detection. By adding the upload\nof the measurements to the Nyrki\\\"o change detection service, we made it\npossible to detect performance changes. We identified one major performance\nregression and examined the performance change in depth. We report that (1) it\nis reproducible with GitHub actions, and (2) the performance regression is\ncaused by a Linux Kernel version change."}
{"id": "2510.11516", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.11516", "abs": "https://arxiv.org/abs/2510.11516", "authors": ["Jeena Javahar", "Tanya Budhrani", "Manaal Basha", "Cleidson R. B. de Souza", "Ivan Beschastnikh", "Gema Rodriguez-Perez"], "title": "Cracking CodeWhisperer: Analyzing Developers' Interactions and Patterns During Programming Tasks", "comment": "VL/HCC 2025 Short Paper", "summary": "The use of AI code-generation tools is becoming increasingly common, making\nit important to understand how software developers are adopting these tools. In\nthis study, we investigate how developers engage with Amazon's CodeWhisperer,\nan LLM-based code-generation tool. We conducted two user studies with two\ngroups of 10 participants each, interacting with CodeWhisperer - the first to\nunderstand which interactions were critical to capture and the second to\ncollect low-level interaction data using a custom telemetry plugin. Our\nmixed-methods analysis identified four behavioral patterns: 1) incremental code\nrefinement, 2) explicit instruction using natural language comments, 3)\nbaseline structuring with model suggestions, and 4) integrative use with\nexternal sources. We provide a comprehensive analysis of these patterns ."}
{"id": "2510.11536", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.11536", "abs": "https://arxiv.org/abs/2510.11536", "authors": ["Manaal Basha", "Aimeê M. Ribeiro", "Jeena Javahar", "Cleidson R. B. de Souza", "Gema Rodríguez-Pérez"], "title": "CodeWatcher: IDE Telemetry Data Extraction Tool for Understanding Coding Interactions with LLMs", "comment": "ICSME 2025 Tool Demonstration Track", "summary": "Understanding how developers interact with code generation tools (CGTs)\nrequires detailed, real-time data on programming behavior which is often\ndifficult to collect without disrupting workflow. We present\n\\textit{CodeWatcher}, a lightweight, unobtrusive client-server system designed\nto capture fine-grained interaction events from within the Visual Studio Code\n(VS Code) editor. \\textit{CodeWatcher} logs semantically meaningful events such\nas insertions made by CGTs, deletions, copy-paste actions, and focus shifts,\nenabling continuous monitoring of developer activity without modifying user\nworkflows. The system comprises a VS Code plugin, a Python-based RESTful API,\nand a MongoDB backend, all containerized for scalability and ease of\ndeployment. By structuring and timestamping each event, \\textit{CodeWatcher}\nenables post-hoc reconstruction of coding sessions and facilitates rich\nbehavioral analyses, including how and when CGTs are used during development.\nThis infrastructure is crucial for supporting research on responsible AI,\ndeveloper productivity, and the human-centered evaluation of CGTs. Please find\nthe demo, diagrams, and tool here: https://osf.io/j2kru/overview."}
{"id": "2510.11658", "categories": ["cs.SE", "97P50", "D.2.5; K.3.2"], "pdf": "https://arxiv.org/pdf/2510.11658", "abs": "https://arxiv.org/abs/2510.11658", "authors": ["Florian Obermüller", "Gordon Fraser"], "title": "Automatically Generating Questions About Scratch Programs", "comment": "Accepted at CompEd 2025", "summary": "When learning to program, students are usually assessed based on the code\nthey wrote. However, the mere completion of a programming task does not\nguarantee actual comprehension of the underlying concepts. Asking learners\nquestions about the code they wrote has therefore been proposed as a means to\nassess program comprehension. As creating targeted questions for individual\nstudent programs can be tedious and challenging, prior work has proposed to\ngenerate such questions automatically. In this paper we generalize this idea to\nthe block-based programming language Scratch. We propose a set of 30 different\nquestions for Scratch code covering an established program comprehension model,\nand extend the LitterBox static analysis tool to automatically generate\ncorresponding questions for a given Scratch program. On a dataset of 600,913\nprojects we generated 54,118,694 questions automatically. Our initial\nexperiments with 34 ninth graders demonstrate that this approach can indeed\ngenerate meaningful questions for Scratch programs, and we find that the\nability of students to answer these questions on their programs relates to\ntheir overall performance."}
