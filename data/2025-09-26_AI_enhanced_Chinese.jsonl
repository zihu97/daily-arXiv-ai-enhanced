{"id": "2509.20412", "categories": ["cs.MA", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.20412", "abs": "https://arxiv.org/abs/2509.20412", "authors": ["Kevin Bradley Dsouza", "Graham Alexander Watt", "Yuri Leonenko", "Juan Moreno-Cruz"], "title": "Structuring Collective Action with LLM-Guided Evolution: From Ill-Structured Problems to Executable Heuristics", "comment": null, "summary": "Collective action problems, which require aligning individual incentives with\ncollective goals, are classic examples of Ill-Structured Problems (ISPs). For\nan individual agent, the causal links between local actions and global outcomes\nare unclear, stakeholder objectives often conflict, and no single, clear\nalgorithm can bridge micro-level choices with macro-level welfare. We present\nECHO-MIMIC, a computational framework that converts this global complexity into\na tractable, Well-Structured Problem (WSP) for each agent by discovering\ncompact, executable heuristics and persuasive rationales. The framework\noperates in two stages: ECHO (Evolutionary Crafting of Heuristics from\nOutcomes) evolves snippets of Python code that encode candidate behavioral\npolicies, while MIMIC (Mechanism Inference & Messaging for\nIndividual-to-Collective Alignment) evolves companion natural language messages\nthat motivate agents to adopt those policies. Both phases employ a\nlarge-language-model-driven evolutionary search: the LLM proposes diverse and\ncontext-aware code or text variants, while population-level selection retains\nthose that maximize collective performance in a simulated environment. We\ndemonstrate this framework on a canonical ISP in agricultural landscape\nmanagement, where local farming decisions impact global ecological\nconnectivity. Results show that ECHO-MIMIC discovers high-performing heuristics\ncompared to baselines and crafts tailored messages that successfully align\nsimulated farmer behavior with landscape-level ecological goals. By coupling\nalgorithmic rule discovery with tailored communication, ECHO-MIMIC transforms\nthe cognitive burden of collective action into a simple set of agent-level\ninstructions, making previously ill-structured problems solvable in practice\nand opening a new path toward scalable, adaptive policy design.", "AI": {"tldr": "ECHO-MIMIC\u662f\u4e00\u4e2a\u8ba1\u7b97\u6846\u67b6\uff0c\u901a\u8fc7\u53d1\u73b0\u7d27\u51d1\u53ef\u6267\u884c\u7684\u542f\u53d1\u5f0f\u89c4\u5219\u548c\u6709\u8bf4\u670d\u529b\u7684\u7406\u7531\uff0c\u5c06\u96c6\u4f53\u884c\u52a8\u95ee\u9898\u8f6c\u5316\u4e3a\u6bcf\u4e2a\u4ee3\u7406\u53ef\u5904\u7406\u7684\u826f\u597d\u7ed3\u6784\u5316\u95ee\u9898\u3002", "motivation": "\u96c6\u4f53\u884c\u52a8\u95ee\u9898\u9700\u8981\u5c06\u4e2a\u4f53\u6fc0\u52b1\u4e0e\u96c6\u4f53\u76ee\u6807\u5bf9\u9f50\uff0c\u662f\u5178\u578b\u7684\u975e\u7ed3\u6784\u5316\u95ee\u9898\u3002\u4e2a\u4f53\u4ee3\u7406\u96be\u4ee5\u7406\u89e3\u672c\u5730\u884c\u52a8\u4e0e\u5168\u5c40\u7ed3\u679c\u4e4b\u95f4\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u5229\u76ca\u76f8\u5173\u8005\u76ee\u6807\u7ecf\u5e38\u51b2\u7a81\uff0c\u6ca1\u6709\u5355\u4e00\u660e\u786e\u7684\u7b97\u6cd5\u80fd\u591f\u8fde\u63a5\u5fae\u89c2\u9009\u62e9\u548c\u5b8f\u89c2\u798f\u5229\u3002", "method": "\u6846\u67b6\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1aECHO\u901a\u8fc7\u8fdb\u5316\u641c\u7d22\u751f\u6210Python\u4ee3\u7801\u7247\u6bb5\u7f16\u7801\u5019\u9009\u884c\u4e3a\u7b56\u7565\uff0cMIMIC\u8fdb\u5316\u4f34\u968f\u7684\u81ea\u7136\u8bed\u8a00\u6d88\u606f\u6765\u8bf4\u670d\u4ee3\u7406\u91c7\u7eb3\u8fd9\u4e9b\u7b56\u7565\u3002\u4e24\u4e2a\u9636\u6bb5\u90fd\u4f7f\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\u9a71\u52a8\u7684\u8fdb\u5316\u641c\u7d22\uff0cLLM\u63d0\u51fa\u591a\u6837\u5316\u7684\u4ee3\u7801\u6216\u6587\u672c\u53d8\u4f53\uff0c\u7fa4\u4f53\u7ea7\u9009\u62e9\u4fdd\u7559\u90a3\u4e9b\u5728\u6a21\u62df\u73af\u5883\u4e2d\u6700\u5927\u5316\u96c6\u4f53\u6027\u80fd\u7684\u7b56\u7565\u3002", "result": "\u5728\u519c\u4e1a\u666f\u89c2\u7ba1\u7406\u7684\u7ecf\u5178\u975e\u7ed3\u6784\u5316\u95ee\u9898\u4e0a\u9a8c\u8bc1\uff0cECHO-MIMIC\u53d1\u73b0\u4e86\u6bd4\u57fa\u7ebf\u65b9\u6cd5\u6027\u80fd\u66f4\u9ad8\u7684\u542f\u53d1\u5f0f\u89c4\u5219\uff0c\u5e76\u6210\u529f\u5236\u4f5c\u4e86\u5b9a\u5236\u6d88\u606f\uff0c\u4f7f\u6a21\u62df\u519c\u6c11\u884c\u4e3a\u4e0e\u666f\u89c2\u7ea7\u751f\u6001\u76ee\u6807\u5bf9\u9f50\u3002", "conclusion": "\u901a\u8fc7\u5c06\u7b97\u6cd5\u89c4\u5219\u53d1\u73b0\u4e0e\u5b9a\u5236\u901a\u4fe1\u76f8\u7ed3\u5408\uff0cECHO-MIMIC\u5c06\u96c6\u4f53\u884c\u52a8\u7684\u8ba4\u77e5\u8d1f\u62c5\u8f6c\u5316\u4e3a\u7b80\u5355\u7684\u4ee3\u7406\u7ea7\u6307\u4ee4\uff0c\u4f7f\u4ee5\u524d\u975e\u7ed3\u6784\u5316\u7684\u95ee\u9898\u5728\u5b9e\u8df5\u4e2d\u53ef\u89e3\uff0c\u4e3a\u53ef\u6269\u5c55\u3001\u81ea\u9002\u5e94\u653f\u7b56\u8bbe\u8ba1\u5f00\u8f9f\u4e86\u65b0\u8def\u5f84\u3002"}}
{"id": "2509.20490", "categories": ["cs.MA", "cs.CL", "cs.CV"], "pdf": "https://arxiv.org/pdf/2509.20490", "abs": "https://arxiv.org/abs/2509.20490", "authors": ["Kai Zhang", "Corey D Barrett", "Jangwon Kim", "Lichao Sun", "Tara Taghavi", "Krishnaram Kenthapadi"], "title": "RadAgents: Multimodal Agentic Reasoning for Chest X-ray Interpretation with Radiologist-like Workflows", "comment": "In progress", "summary": "Agentic systems offer a potential path to solve complex clinical tasks\nthrough collaboration among specialized agents, augmented by tool use and\nexternal knowledge bases. Nevertheless, for chest X-ray (CXR) interpretation,\nprevailing methods remain limited: (i) reasoning is frequently neither\nclinically interpretable nor aligned with guidelines, reflecting mere\naggregation of tool outputs; (ii) multimodal evidence is insufficiently fused,\nyielding text-only rationales that are not visually grounded; and (iii) systems\nrarely detect or resolve cross-tool inconsistencies and provide no principled\nverification mechanisms. To bridge the above gaps, we present RadAgents, a\nmulti-agent framework for CXR interpretation that couples clinical priors with\ntask-aware multimodal reasoning. In addition, we integrate grounding and\nmultimodal retrieval-augmentation to verify and resolve context conflicts,\nresulting in outputs that are more reliable, transparent, and consistent with\nclinical practice.", "AI": {"tldr": "RadAgents\u662f\u4e00\u4e2a\u7528\u4e8e\u80f8\u90e8X\u5149\u7247\u89e3\u8bfb\u7684\u591a\u667a\u80fd\u4f53\u6846\u67b6\uff0c\u901a\u8fc7\u7ed3\u5408\u4e34\u5e8a\u5148\u9a8c\u77e5\u8bc6\u548c\u4efb\u52a1\u611f\u77e5\u7684\u591a\u6a21\u6001\u63a8\u7406\u6765\u89e3\u51b3\u73b0\u6709\u65b9\u6cd5\u7684\u5c40\u9650\u6027\uff0c\u63d0\u4f9b\u66f4\u53ef\u9760\u3001\u900f\u660e\u4e14\u7b26\u5408\u4e34\u5e8a\u5b9e\u8df5\u7684\u8f93\u51fa\u3002", "motivation": "\u73b0\u6709\u80f8\u90e8X\u5149\u7247\u89e3\u8bfb\u65b9\u6cd5\u5b58\u5728\u4e09\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a\u63a8\u7406\u8fc7\u7a0b\u7f3a\u4e4f\u4e34\u5e8a\u53ef\u89e3\u91ca\u6027\u4e14\u4e0d\u7b26\u5408\u6307\u5357\uff1b\u591a\u6a21\u6001\u8bc1\u636e\u878d\u5408\u4e0d\u8db3\uff0c\u4ec5\u751f\u6210\u6587\u672c\u89e3\u91ca\u800c\u7f3a\u4e4f\u89c6\u89c9\u57fa\u7840\uff1b\u7cfb\u7edf\u65e0\u6cd5\u68c0\u6d4b\u6216\u89e3\u51b3\u5de5\u5177\u95f4\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u7f3a\u4e4f\u9a8c\u8bc1\u673a\u5236\u3002", "method": "\u63d0\u51faRadAgents\u591a\u667a\u80fd\u4f53\u6846\u67b6\uff0c\u7ed3\u5408\u4e34\u5e8a\u5148\u9a8c\u77e5\u8bc6\u548c\u4efb\u52a1\u611f\u77e5\u7684\u591a\u6a21\u6001\u63a8\u7406\uff0c\u96c6\u6210\u57fa\u7840\u9a8c\u8bc1\u548c\u591a\u6a21\u6001\u68c0\u7d22\u589e\u5f3a\u6765\u9a8c\u8bc1\u548c\u89e3\u51b3\u4e0a\u4e0b\u6587\u51b2\u7a81\u3002", "result": "\u8be5\u7cfb\u7edf\u80fd\u591f\u4ea7\u751f\u66f4\u53ef\u9760\u3001\u900f\u660e\u4e14\u4e0e\u4e34\u5e8a\u5b9e\u8df5\u4e00\u81f4\u7684\u8f93\u51fa\u7ed3\u679c\u3002", "conclusion": "RadAgents\u6846\u67b6\u901a\u8fc7\u591a\u667a\u80fd\u4f53\u534f\u4f5c\u548c\u9a8c\u8bc1\u673a\u5236\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u80f8\u90e8X\u5149\u7247\u89e3\u8bfb\u4e2d\u7684\u5173\u952e\u6311\u6218\uff0c\u4e3a\u4e34\u5e8a\u4efb\u52a1\u63d0\u4f9b\u4e86\u66f4\u52a0\u53ef\u9760\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.20563", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.20563", "abs": "https://arxiv.org/abs/2509.20563", "authors": ["Skyler Ruiter", "Jiannan Tian", "Fengguang Song"], "title": "FZModules: A Heterogeneous Computing Framework for Customizable Scientific Data Compression Pipelines", "comment": null, "summary": "Modern scientific simulations and instruments generate data volumes that\noverwhelm memory and storage, throttling scalability. Lossy compression\nmitigates this by trading controlled error for reduced footprint and throughput\ngains, yet optimal pipelines are highly data and objective specific, demanding\ncompression expertise. GPU compressors supply raw throughput but often\nhard-code fused kernels that hinder rapid experimentation, and underperform in\nrate-distortion. We present FZModules, a heterogeneous framework for assembling\nerror-bounded custom compression pipelines from high-performance modules\nthrough a concise extensible interface. We further utilize an asynchronous\ntask-backed execution library that infers data dependencies, manages memory\nmovement, and exposes branch and stage level concurrency for powerful\nasynchronous compression pipelines. Evaluating three pipelines built with\nFZModules on four representative scientific datasets, we show they can compare\nend-to-end speedup of fused-kernel GPU compressors while achieving similar\nrate-distortion to higher fidelity CPU or hybrid compressors, enabling rapid,\ndomain-tailored design.", "AI": {"tldr": "FZModules\u662f\u4e00\u4e2a\u5f02\u6784\u6846\u67b6\uff0c\u7528\u4e8e\u901a\u8fc7\u9ad8\u6027\u80fd\u6a21\u5757\u7ec4\u88c5\u8bef\u5dee\u6709\u754c\u7684\u81ea\u5b9a\u4e49\u538b\u7f29\u6d41\u6c34\u7ebf\uff0c\u63d0\u4f9b\u5f02\u6b65\u6267\u884c\u548c\u6570\u636e\u4f9d\u8d56\u7ba1\u7406\uff0c\u5728\u4fdd\u6301\u538b\u7f29\u8d28\u91cf\u7684\u540c\u65f6\u5b9e\u73b0\u9ad8\u901f\u538b\u7f29\u3002", "motivation": "\u73b0\u4ee3\u79d1\u5b66\u6a21\u62df\u548c\u4eea\u5668\u751f\u6210\u7684\u6570\u636e\u91cf\u8d85\u8fc7\u4e86\u5185\u5b58\u548c\u5b58\u50a8\u5bb9\u91cf\uff0c\u9650\u5236\u4e86\u53ef\u6269\u5c55\u6027\u3002\u73b0\u6709GPU\u538b\u7f29\u5668\u867d\u7136\u63d0\u4f9b\u9ad8\u541e\u5410\u91cf\uff0c\u4f46\u901a\u5e38\u91c7\u7528\u786c\u7f16\u7801\u7684\u5185\u6838\uff0c\u963b\u788d\u5feb\u901f\u5b9e\u9a8c\uff0c\u4e14\u5728\u7387\u5931\u771f\u6027\u80fd\u4e0a\u8868\u73b0\u4e0d\u4f73\u3002", "method": "\u63d0\u51fa\u4e86FZModules\u6846\u67b6\uff0c\u901a\u8fc7\u7b80\u6d01\u53ef\u6269\u5c55\u7684\u63a5\u53e3\u4ece\u9ad8\u6027\u80fd\u6a21\u5757\u7ec4\u88c5\u8bef\u5dee\u6709\u754c\u7684\u81ea\u5b9a\u4e49\u538b\u7f29\u6d41\u6c34\u7ebf\uff0c\u5e76\u4f7f\u7528\u5f02\u6b65\u4efb\u52a1\u652f\u6301\u6267\u884c\u5e93\u6765\u63a8\u65ad\u6570\u636e\u4f9d\u8d56\u3001\u7ba1\u7406\u5185\u5b58\u79fb\u52a8\uff0c\u5e76\u66b4\u9732\u5206\u652f\u548c\u9636\u6bb5\u7ea7\u5e76\u53d1\u3002", "result": "\u5728\u56db\u4e2a\u4ee3\u8868\u6027\u79d1\u5b66\u6570\u636e\u96c6\u4e0a\u8bc4\u4f30\u4e09\u4e2a\u57fa\u4e8eFZModules\u6784\u5efa\u7684\u6d41\u6c34\u7ebf\uff0c\u7ed3\u679c\u663e\u793a\u5b83\u4eec\u80fd\u591f\u8fbe\u5230\u4e0e\u878d\u5408\u5185\u6838GPU\u538b\u7f29\u5668\u76f8\u5f53\u7684\u7aef\u5230\u7aef\u52a0\u901f\u6bd4\uff0c\u540c\u65f6\u5b9e\u73b0\u4e0e\u66f4\u9ad8\u4fdd\u771f\u5ea6\u7684CPU\u6216\u6df7\u5408\u538b\u7f29\u5668\u76f8\u4f3c\u7684\u7387\u5931\u771f\u6027\u80fd\u3002", "conclusion": "FZModules\u6846\u67b6\u652f\u6301\u5feb\u901f\u3001\u9886\u57df\u5b9a\u5236\u7684\u538b\u7f29\u6d41\u6c34\u7ebf\u8bbe\u8ba1\uff0c\u5728\u4fdd\u6301\u538b\u7f29\u8d28\u91cf\u7684\u540c\u65f6\u63d0\u4f9b\u9ad8\u6027\u80fd\u538b\u7f29\u80fd\u529b\uff0c\u89e3\u51b3\u4e86\u79d1\u5b66\u6570\u636e\u538b\u7f29\u4e2d\u7684\u53ef\u6269\u5c55\u6027\u548c\u5b9a\u5236\u5316\u9700\u6c42\u3002"}}
{"id": "2509.20380", "categories": ["cs.SE", "cs.AI", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.20380", "abs": "https://arxiv.org/abs/2509.20380", "authors": ["Samyak Jhaveri", "Vanessa Klotzmann", "Crista Lopes"], "title": "ACCeLLiuM: Supervised Fine-Tuning for Automated OpenACC Pragma Generation", "comment": null, "summary": "The increasing ubiquity of GPUs is accompanied by the increasing complexity\nof their hardware and parallel programming frameworks. Directive-based parallel\nprogramming standards like OpenACC simplify GPU programming to some extent by\nabstracting away low-level complexities, but a fair amount of expertise is\nstill required in order to use those directives effectively.\n  We introduce ACCeLLiuM, two open weights Large Language Models specifically\nfine-tuned for generating expert OpenACC directives for data-parallel loops,\nalong with the supervised fine-tuning dataset that was used to train them. The\nACCeLLiuM SFT dataset contains 4,033 OpenACC pragma-loop pairs mined from\npublic GitHub C/C++ repositories, with 3,223 pairs for training and 810 for\ntesting. Experimental evaluations show a pronounced performance gap in\ngenerating correct OpenACC pragmas between base LLMs and our fine-tuned\nversions. On the held-out test set, base LLMs fail to consistently generate\nvalid pragmas, whereas LLMs fine-tuned on the ACCeLLiuM dataset generate valid\npragmas with the correct directive type for $87\\%$ of the data-parallel loops,\nand exact pragmas--including directives, clauses, clause order, and clause\nvariables--for $50\\%$ of the cases. Even when not exact, generated pragmas\nfrequently incorporate the correct clauses in a different order than the\nground-truth label, or include additional clauses that enable finer control\nover parallel execution, data movement, and concurrency, offering practical\nvalue beyond strict string-matching. By publicly releasing the code, models,\nand dataset as ACCeLLiuM we hope to establish a reproducible benchmark for\nLLM-powered OpenACC pragma generation, and lower the barrier to automated GPU\noffloading of serially written programs.", "AI": {"tldr": "ACCeLLiuM\u662f\u4e24\u4e2a\u4e13\u95e8\u9488\u5bf9\u751f\u6210OpenACC\u6307\u4ee4\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff0c\u901a\u8fc7\u76d1\u7763\u5fae\u8c03\u57284033\u4e2aOpenACC pragma-loop\u5bf9\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\uff0c\u663e\u8457\u63d0\u5347\u4e86\u751f\u6210\u6b63\u786eOpenACC\u6307\u4ee4\u7684\u80fd\u529b\u3002", "motivation": "GPU\u786c\u4ef6\u548c\u5e76\u884c\u7f16\u7a0b\u6846\u67b6\u65e5\u76ca\u590d\u6742\uff0c\u867d\u7136\u57fa\u4e8e\u6307\u4ee4\u7684\u5e76\u884c\u7f16\u7a0b\u6807\u51c6\u5982OpenACC\u7b80\u5316\u4e86GPU\u7f16\u7a0b\uff0c\u4f46\u4ecd\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\u624d\u80fd\u6709\u6548\u4f7f\u7528\u8fd9\u4e9b\u6307\u4ee4\u3002", "method": "\u5f00\u53d1\u4e86\u4e24\u4e2a\u4e13\u95e8\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff0c\u4f7f\u7528\u4eceGitHub C/C++\u4ed3\u5e93\u6316\u6398\u76844033\u4e2aOpenACC pragma-loop\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u76d1\u7763\u5fae\u8c03\uff0c\u5176\u4e2d3223\u5bf9\u7528\u4e8e\u8bad\u7ec3\uff0c810\u5bf9\u7528\u4e8e\u6d4b\u8bd5\u3002", "result": "\u5fae\u8c03\u540e\u7684\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u80fd\u751f\u6210\u6b63\u786e\u6307\u4ee4\u7c7b\u578b\u7684pragma\u8fbe87%\uff0c\u5b8c\u5168\u51c6\u786e\u7684pragma\uff08\u5305\u62ec\u6307\u4ee4\u3001\u5b50\u53e5\u3001\u5b50\u53e5\u987a\u5e8f\u548c\u53d8\u91cf\uff09\u8fbe50%\u3002\u5373\u4f7f\u4e0d\u5b8c\u5168\u51c6\u786e\uff0c\u751f\u6210\u7684pragma\u4e5f\u7ecf\u5e38\u5305\u542b\u6b63\u786e\u7684\u5b50\u53e5\u6216\u989d\u5916\u7684\u63a7\u5236\u5b50\u53e5\u3002", "conclusion": "ACCeLLiuM\u901a\u8fc7\u516c\u5f00\u4ee3\u7801\u3001\u6a21\u578b\u548c\u6570\u636e\u96c6\uff0c\u4e3aLLM\u9a71\u52a8\u7684OpenACC pragma\u751f\u6210\u5efa\u7acb\u4e86\u53ef\u590d\u73b0\u7684\u57fa\u51c6\uff0c\u964d\u4f4e\u4e86\u81ea\u52a8\u5316GPU\u5378\u8f7d\u4e32\u884c\u7a0b\u5e8f\u7684\u969c\u788d\u3002"}}
{"id": "2509.20603", "categories": ["cs.DC", "cs.AI", "cs.AR", "cs.ET", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.20603", "abs": "https://arxiv.org/abs/2509.20603", "authors": ["Angel M. Beltre", "Jeff Ogden", "Kevin Pedretti"], "title": "Experience Deploying Containerized GenAI Services at an HPC Center", "comment": "10 pages, 12 figures", "summary": "Generative Artificial Intelligence (GenAI) applications are built from\nspecialized components -- inference servers, object storage, vector and graph\ndatabases, and user interfaces -- interconnected via web-based APIs. While\nthese components are often containerized and deployed in cloud environments,\nsuch capabilities are still emerging at High-Performance Computing (HPC)\ncenters. In this paper, we share our experience deploying GenAI workloads\nwithin an established HPC center, discussing the integration of HPC and cloud\ncomputing environments. We describe our converged computing architecture that\nintegrates HPC and Kubernetes platforms running containerized GenAI workloads,\nhelping with reproducibility. A case study illustrates the deployment of the\nLlama Large Language Model (LLM) using a containerized inference server (vLLM)\nacross both Kubernetes and HPC platforms using multiple container runtimes. Our\nexperience highlights practical considerations and opportunities for the HPC\ncontainer community, guiding future research and tool development.", "AI": {"tldr": "\u672c\u6587\u5206\u4eab\u4e86\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\uff08HPC\uff09\u4e2d\u5fc3\u90e8\u7f72\u751f\u6210\u5f0fAI\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7ecf\u9a8c\uff0c\u8ba8\u8bba\u4e86HPC\u4e0e\u4e91\u8ba1\u7b97\u73af\u5883\u7684\u96c6\u6210\u65b9\u6cd5\uff0c\u63d0\u51fa\u4e86\u878d\u5408\u8ba1\u7b97\u67b6\u6784\u6765\u652f\u6301\u5bb9\u5668\u5316\u7684GenAI\u5e94\u7528\u90e8\u7f72\u3002", "motivation": "\u751f\u6210\u5f0fAI\u5e94\u7528\u901a\u5e38\u57fa\u4e8e\u5bb9\u5668\u5316\u7ec4\u4ef6\u6784\u5efa\uff0c\u4f46\u5728HPC\u4e2d\u5fc3\u7684\u90e8\u7f72\u80fd\u529b\u4ecd\u5728\u53d1\u5c55\u4e2d\uff0c\u9700\u8981\u63a2\u7d22HPC\u4e0e\u4e91\u8ba1\u7b97\u73af\u5883\u7684\u6709\u6548\u96c6\u6210\u65b9\u6848\u3002", "method": "\u63d0\u51fa\u878d\u5408\u8ba1\u7b97\u67b6\u6784\uff0c\u6574\u5408HPC\u548cKubernetes\u5e73\u53f0\u6765\u8fd0\u884c\u5bb9\u5668\u5316\u7684GenAI\u5de5\u4f5c\u8d1f\u8f7d\uff1b\u901a\u8fc7\u6848\u4f8b\u7814\u7a76\u5c55\u793a\u4e86\u5728\u591a\u5bb9\u5668\u8fd0\u884c\u65f6\u73af\u5883\u4e0b\u8de8\u5e73\u53f0\u90e8\u7f72Llama\u5927\u8bed\u8a00\u6a21\u578b\u7684\u65b9\u6cd5\u3002", "result": "\u6210\u529f\u5b9e\u73b0\u4e86\u5728HPC\u73af\u5883\u4e2d\u90e8\u7f72\u5bb9\u5668\u5316GenAI\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u9a8c\u8bc1\u4e86\u878d\u5408\u67b6\u6784\u7684\u53ef\u884c\u6027\uff0c\u5e76\u4e3aHPC\u5bb9\u5668\u793e\u533a\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u90e8\u7f72\u7ecf\u9a8c\u548c\u6307\u5bfc\u3002", "conclusion": "\u8be5\u7814\u7a76\u4e3aHPC\u4e2d\u5fc3\u90e8\u7f72GenAI\u5e94\u7528\u63d0\u4f9b\u4e86\u5b9e\u8df5\u6307\u5bfc\uff0c\u6307\u51fa\u4e86\u672a\u6765\u7814\u7a76\u548c\u5de5\u5177\u5f00\u53d1\u7684\u65b9\u5411\uff0c\u4fc3\u8fdb\u4e86HPC\u4e0e\u4e91\u8ba1\u7b97\u73af\u5883\u7684\u6709\u6548\u878d\u5408\u3002"}}
{"id": "2509.20385", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20385", "abs": "https://arxiv.org/abs/2509.20385", "authors": ["Ishara Devendra", "Chaman Wijesiriwardana", "Prasad Wimalaratne"], "title": "State-of-the-Art in Software Security Visualization: A Systematic Review", "comment": null, "summary": "Software security visualization is an interdisciplinary field that combines\nthe technical complexity of cybersecurity, including threat intelligence and\ncompliance monitoring, with visual analytics, transforming complex security\ndata into easily digestible visual formats. As software systems get more\ncomplex and the threat landscape evolves, traditional text-based and numerical\nmethods for analyzing and interpreting security concerns become increasingly\nineffective. The purpose of this paper is to systematically review existing\nresearch and create a comprehensive taxonomy of software security visualization\ntechniques through literature, categorizing these techniques into four types:\ngraph-based, notation-based, matrix-based, and metaphor-based visualization.\nThis systematic review explores over 60 recent key research papers in software\nsecurity visualization, highlighting its key issues, recent advancements, and\nprospective future research directions. From the comprehensive analysis, the\ntwo main areas were distinctly highlighted as extensive software development\nvisualization, focusing on advanced methods for depicting software\narchitecture: operational security visualization and cybersecurity\nvisualization. The findings highlight the necessity for innovative\nvisualization techniques that adapt to the evolving security landscape, with\npractical implications for enhancing threat detection, improving security\nresponse strategies, and guiding future research.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u7cfb\u7edf\u6587\u732e\u7efc\u8ff0\u6784\u5efa\u4e86\u8f6f\u4ef6\u5b89\u5168\u53ef\u89c6\u5316\u6280\u672f\u7684\u7efc\u5408\u5206\u7c7b\u6cd5\uff0c\u5c06\u5176\u5206\u4e3a\u56db\u7c7b\uff1a\u57fa\u4e8e\u56fe\u3001\u57fa\u4e8e\u7b26\u53f7\u3001\u57fa\u4e8e\u77e9\u9635\u548c\u57fa\u4e8e\u9690\u55bb\u7684\u53ef\u89c6\u5316\u65b9\u6cd5\uff0c\u5e76\u6307\u51fa\u4e86\u8be5\u9886\u57df\u7684\u5173\u952e\u95ee\u9898\u548c\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002", "motivation": "\u968f\u7740\u8f6f\u4ef6\u7cfb\u7edf\u65e5\u76ca\u590d\u6742\u548c\u5a01\u80c1\u73af\u5883\u4e0d\u65ad\u6f14\u53d8\uff0c\u4f20\u7edf\u7684\u6587\u672c\u548c\u6570\u503c\u5206\u6790\u65b9\u6cd5\u5728\u5904\u7406\u5b89\u5168\u95ee\u9898\u65f6\u6548\u7387\u4f4e\u4e0b\uff0c\u9700\u8981\u5c06\u590d\u6742\u7684\u5b89\u5168\u6570\u636e\u8f6c\u5316\u4e3a\u6613\u4e8e\u7406\u89e3\u7684\u89c6\u89c9\u683c\u5f0f\u3002", "method": "\u901a\u8fc7\u5bf960\u591a\u7bc7\u5173\u952e\u7814\u7a76\u8bba\u6587\u7684\u7cfb\u7edf\u6587\u732e\u7efc\u8ff0\uff0c\u521b\u5efa\u4e86\u8f6f\u4ef6\u5b89\u5168\u53ef\u89c6\u5316\u6280\u672f\u7684\u5206\u7c7b\u4f53\u7cfb\uff0c\u5e76\u5c06\u5176\u5206\u4e3a\u56db\u79cd\u4e3b\u8981\u7c7b\u578b\u8fdb\u884c\u5206\u6790\u3002", "result": "\u8bc6\u522b\u51fa\u8f6f\u4ef6\u5b89\u5168\u53ef\u89c6\u5316\u7684\u4e24\u4e2a\u4e3b\u8981\u9886\u57df\uff1a\u8f6f\u4ef6\u5f00\u53d1\u53ef\u89c6\u5316\u548c\u64cd\u4f5c\u5b89\u5168/\u7f51\u7edc\u5b89\u5168\u53ef\u89c6\u5316\uff0c\u5f3a\u8c03\u4e86\u521b\u65b0\u53ef\u89c6\u5316\u6280\u672f\u5bf9\u9002\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u5b89\u5168\u73af\u5883\u7684\u5fc5\u8981\u6027\u3002", "conclusion": "\u7814\u7a76\u5f3a\u8c03\u4e86\u5f00\u53d1\u9002\u5e94\u6027\u5f3a\u7684\u65b0\u578b\u53ef\u89c6\u5316\u6280\u672f\u7684\u8feb\u5207\u9700\u6c42\uff0c\u8fd9\u4e9b\u6280\u672f\u5bf9\u63d0\u5347\u5a01\u80c1\u68c0\u6d4b\u80fd\u529b\u3001\u6539\u8fdb\u5b89\u5168\u54cd\u5e94\u7b56\u7565\u4ee5\u53ca\u6307\u5bfc\u672a\u6765\u7814\u7a76\u5177\u6709\u91cd\u8981\u5b9e\u8df5\u610f\u4e49\u3002"}}
{"id": "2509.20776", "categories": ["cs.DC", "cs.MS", "G.4"], "pdf": "https://arxiv.org/pdf/2509.20776", "abs": "https://arxiv.org/abs/2509.20776", "authors": ["Elaheh Hassani", "Md Taufique Hussain", "Ariful Azad"], "title": "Distributed-memory Algorithms for Sparse Matrix Permutation, Extraction, and Assignment", "comment": "32 pages", "summary": "We present scalable distributed-memory algorithms for sparse matrix\npermutation, extraction, and assignment. Our methods follow an\nIdentify-Exchange-Build (IEB) strategy where each process identifies the local\nnonzeros to be sent, exchanges the required data, and then builds its local\nsubmatrix from the received elements. This approach reduces communication\ncompared to SpGEMM-based methods in distributed memory. By employing\nsynchronization-free multithreaded algorithms, we further accelerate local\ncomputations, achieving substantially better performance than existing\nlibraries such as CombBLAS and PETSc. We design efficient software for these\noperations and evaluate their performance on two university clusters and the\nPerlmutter supercomputer. Our experiments span a variety of application\nscenarios, including matrix permutation for load balancing, matrix reordering,\nsubgraph extraction, and streaming graph applications. In all cases, we compare\nour algorithms against CombBLAS, the most comprehensive distributed library for\nthese operations, and, in some scenarios, against PETSc. Overall, this work\nprovides a comprehensive study of algorithms, software implementations,\nexperimental evaluations, and applications for sparse matrix permutation,\nextraction, and assignment.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u5206\u5e03\u5f0f\u5185\u5b58\u4e2d\u7a00\u758f\u77e9\u9635\u7f6e\u6362\u3001\u63d0\u53d6\u548c\u8d4b\u503c\u7684\u9ad8\u6548\u7b97\u6cd5\uff0c\u91c7\u7528Identify-Exchange-Build\u7b56\u7565\u51cf\u5c11\u901a\u4fe1\u5f00\u9500\uff0c\u5e76\u901a\u8fc7\u65e0\u540c\u6b65\u591a\u7ebf\u7a0b\u52a0\u901f\u672c\u5730\u8ba1\u7b97\uff0c\u6027\u80fd\u4f18\u4e8e\u73b0\u6709\u5e93\u3002", "motivation": "\u73b0\u6709\u5206\u5e03\u5f0f\u7a00\u758f\u77e9\u9635\u64cd\u4f5c\uff08\u5982CombBLAS\u548cPETSc\uff09\u5728\u901a\u4fe1\u548c\u8ba1\u7b97\u6548\u7387\u65b9\u9762\u5b58\u5728\u4e0d\u8db3\uff0c\u9700\u8981\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u652f\u6301\u5927\u89c4\u6a21\u7a00\u758f\u77e9\u9635\u5904\u7406\u5e94\u7528\u3002", "method": "\u91c7\u7528Identify-Exchange-Build\u4e09\u9636\u6bb5\u7b56\u7565\uff1a\u8bc6\u522b\u8981\u53d1\u9001\u7684\u975e\u96f6\u5143\u7d20\u3001\u4ea4\u6362\u6570\u636e\u3001\u6784\u5efa\u672c\u5730\u5b50\u77e9\u9635\u3002\u4f7f\u7528\u65e0\u540c\u6b65\u591a\u7ebf\u7a0b\u7b97\u6cd5\u52a0\u901f\u672c\u5730\u8ba1\u7b97\u3002", "result": "\u5728\u591a\u4e2a\u96c6\u7fa4\u548c\u8d85\u7ea7\u8ba1\u7b97\u673a\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u8be5\u7b97\u6cd5\u5728\u901a\u4fe1\u548c\u8ba1\u7b97\u6027\u80fd\u4e0a\u663e\u8457\u4f18\u4e8eCombBLAS\u548cPETSc\uff0c\u9002\u7528\u4e8e\u8d1f\u8f7d\u5747\u8861\u3001\u77e9\u9635\u91cd\u6392\u5e8f\u3001\u5b50\u56fe\u63d0\u53d6\u7b49\u5e94\u7528\u573a\u666f\u3002", "conclusion": "\u8be5\u7814\u7a76\u63d0\u4f9b\u4e86\u7a00\u758f\u77e9\u9635\u64cd\u4f5c\u7684\u5b8c\u6574\u7b97\u6cd5\u3001\u8f6f\u4ef6\u5b9e\u73b0\u548c\u8bc4\u4f30\uff0c\u4e3a\u5206\u5e03\u5f0f\u5185\u5b58\u73af\u5883\u4e2d\u7684\u9ad8\u6548\u7a00\u758f\u77e9\u9635\u5904\u7406\u63d0\u4f9b\u4e86\u6709\u6548\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.20386", "categories": ["cs.SE", "cs.AI", "cs.IR"], "pdf": "https://arxiv.org/pdf/2509.20386", "abs": "https://arxiv.org/abs/2509.20386", "authors": ["Nishant Gaurav", "Adit Akarsh", "Ankit Ranjan", "Manoj Bajaj"], "title": "Dynamic ReAct: Scalable Tool Selection for Large-Scale MCP Environments", "comment": null, "summary": "We present Dynamic ReAct, a novel approach for enabling ReAct agents to ef-\nficiently operate with extensive Model Control Protocol (MCP) tool sets that\nexceed the contextual memory limitations of large language models. Our approach\naddresses the fundamental challenge of tool selection in environments\ncontaining hundreds or thousands of available tools, where loading all tools\nsimultaneously is computationally infeasible. We propose and evaluate five\ndistinct architectures that progressively refine the tool selection process,\nculminating in a search-and-load mechanism that achieves intelligent tool\nselection with minimal computational overhead. Our experimental results\ndemonstrate that the proposed approach reduces tool loading by up to 50% while\nmaintaining task completion accuracy, advancing the path towards truly\ngeneral-purpose AI agents capable of dynamically adapting to diverse task\nenvironments.", "AI": {"tldr": "Dynamic ReAct\u662f\u4e00\u79cd\u65b0\u9896\u65b9\u6cd5\uff0c\u4f7fReAct\u4ee3\u7406\u80fd\u591f\u9ad8\u6548\u5904\u7406\u8d85\u51faLLM\u4e0a\u4e0b\u6587\u9650\u5236\u7684\u5927\u578bMCP\u5de5\u5177\u96c6\uff0c\u901a\u8fc7\u641c\u7d22\u52a0\u8f7d\u673a\u5236\u51cf\u5c1150%\u5de5\u5177\u52a0\u8f7d\u91cf\u540c\u65f6\u4fdd\u6301\u4efb\u52a1\u51c6\u786e\u6027\u3002", "motivation": "\u89e3\u51b3\u5728\u5305\u542b\u6570\u767e\u6216\u6570\u5343\u4e2a\u5de5\u5177\u7684\u73af\u5883\u4e2d\uff0c\u540c\u65f6\u52a0\u8f7d\u6240\u6709\u5de5\u5177\u8ba1\u7b97\u4e0d\u53ef\u884c\u7684\u95ee\u9898\uff0c\u5b9e\u73b0\u667a\u80fd\u5de5\u5177\u9009\u62e9\u3002", "method": "\u63d0\u51fa\u5e76\u8bc4\u4f30\u4e94\u79cd\u9010\u6b65\u4f18\u5316\u5de5\u5177\u9009\u62e9\u8fc7\u7a0b\u7684\u67b6\u6784\uff0c\u6700\u7ec8\u91c7\u7528\u641c\u7d22\u52a0\u8f7d\u673a\u5236\u5b9e\u73b0\u6700\u5c0f\u8ba1\u7b97\u5f00\u9500\u7684\u667a\u80fd\u5de5\u5177\u9009\u62e9\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\u8be5\u65b9\u6cd5\u5c06\u5de5\u5177\u52a0\u8f7d\u91cf\u51cf\u5c11\u9ad8\u8fbe50%\uff0c\u540c\u65f6\u4fdd\u6301\u4efb\u52a1\u5b8c\u6210\u51c6\u786e\u6027\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u63a8\u52a8\u4e86\u771f\u6b63\u901a\u7528AI\u4ee3\u7406\u7684\u53d1\u5c55\uff0c\u4f7f\u5176\u80fd\u591f\u52a8\u6001\u9002\u5e94\u591a\u6837\u5316\u4efb\u52a1\u73af\u5883\u3002"}}
{"id": "2509.20819", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.20819", "abs": "https://arxiv.org/abs/2509.20819", "authors": ["Andre Merzky", "Mikhail Titov", "Matteo Turilli", "Shantenu Jha"], "title": "Integrating and Characterizing HPC Task Runtime Systems for hybrid AI-HPC workloads", "comment": "12 pages, 1 table, 8 figures", "summary": "Scientific workflows increasingly involve both HPC and machine-learning\ntasks, combining MPI-based simulations, training, and inference in a single\nexecution. Launchers such as Slurm's srun constrain concurrency and throughput,\nmaking them unsuitable for dynamic and heterogeneous workloads. We present a\nperformance study of RADICAL-Pilot (RP) integrated with Flux and Dragon, two\ncomplementary runtime systems that enable hierarchical resource management and\nhigh-throughput function execution. Using synthetic and production-scale\nworkloads on Frontier, we characterize the task execution properties of RP\nacross runtime configurations. RP+Flux sustains up to 930 tasks/s, and\nRP+Flux+Dragon exceeds 1,500 tasks/s with over 99.6% utilization. In contrast,\nsrun peaks at 152 tasks/s and degrades with scale, with utilization below 50%.\nFor IMPECCABLE.v2 drug discovery campaign, RP+Flux reduces makespan by 30-60%\nrelative to srun/Slurm and increases throughput more than four times on up to\n1,024. These results demonstrate hybrid runtime integration in RP as a scalable\napproach for hybrid AI-HPC workloads.", "AI": {"tldr": "RADICAL-Pilot\u96c6\u6210Flux\u548cDragon\u8fd0\u884c\u65f6\u7cfb\u7edf\uff0c\u76f8\u6bd4\u4f20\u7edfSlurm\u7684srun\uff0c\u5728HPC\u548cAI\u6df7\u5408\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u5b9e\u73b0\u4e86\u66f4\u9ad8\u7684\u4efb\u52a1\u6267\u884c\u901f\u7387\u548c\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4efb\u52a1\u541e\u5410\u91cf\u63d0\u5347\u8d85\u8fc710\u500d\uff0c\u5728\u836f\u7269\u53d1\u73b0\u5e94\u7528\u4e2d\u51cf\u5c1130-60%\u7684\u6267\u884c\u65f6\u95f4\u3002", "motivation": "\u79d1\u5b66\u5de5\u4f5c\u6d41\u8d8a\u6765\u8d8a\u591a\u5730\u540c\u65f6\u5305\u542bHPC\u548c\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u4f46\u4f20\u7edf\u7684Slurm srun\u542f\u52a8\u5668\u5728\u5e76\u53d1\u6027\u548c\u541e\u5410\u91cf\u65b9\u9762\u5b58\u5728\u9650\u5236\uff0c\u4e0d\u9002\u5408\u52a8\u6001\u5f02\u6784\u5de5\u4f5c\u8d1f\u8f7d\u3002", "method": "\u5c06RADICAL-Pilot\uff08RP\uff09\u4e0eFlux\u548cDragon\u4e24\u4e2a\u4e92\u8865\u7684\u8fd0\u884c\u65f6\u7cfb\u7edf\u96c6\u6210\uff0c\u5b9e\u73b0\u5206\u5c42\u8d44\u6e90\u7ba1\u7406\u548c\u9ad8\u541e\u5410\u91cf\u51fd\u6570\u6267\u884c\uff0c\u4f7f\u7528\u5408\u6210\u548c\u751f\u4ea7\u89c4\u6a21\u5de5\u4f5c\u8d1f\u8f7d\u5728Frontier\u8d85\u7ea7\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u6027\u80fd\u7814\u7a76\u3002", "result": "RP+Flux\u7ef4\u6301930\u4efb\u52a1/\u79d2\uff0cRP+Flux+Dragon\u8d85\u8fc71,500\u4efb\u52a1/\u79d2\uff0c\u5229\u7528\u7387\u8d85\u8fc799.6%\uff1b\u800csrun\u5cf0\u503c\u4ec5152\u4efb\u52a1/\u79d2\uff0c\u5229\u7528\u7387\u4f4e\u4e8e50%\u3002\u5728IMPECCABLE.v2\u836f\u7269\u53d1\u73b0\u6d3b\u52a8\u4e2d\uff0cRP+Flux\u76f8\u6bd4srun/Slurm\u51cf\u5c1130-60%\u7684\u6267\u884c\u65f6\u95f4\uff0c\u541e\u5410\u91cf\u63d0\u9ad84\u500d\u4ee5\u4e0a\u3002", "conclusion": "RP\u4e0e\u8fd0\u884c\u65f6\u7cfb\u7edf\u7684\u6df7\u5408\u96c6\u6210\u662f\u5904\u7406\u6df7\u5408AI-HPC\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53ef\u6269\u5c55\u65b9\u6cd5\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4efb\u52a1\u6267\u884c\u6027\u80fd\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002"}}
{"id": "2509.20387", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20387", "abs": "https://arxiv.org/abs/2509.20387", "authors": ["Qusai Ramadan", "Jukka Ruohonen", "Abhishek Tiwari", "Adam Alami", "Zeyd Boukhers"], "title": "Towards Systematic Specification and Verification of Fairness Requirements: A Position Paper", "comment": "Accepted at the 2025 IEEE 33rd International Requirements Engineering\n  Conference Workshops", "summary": "Decisions suggested by improperly designed software systems might be prone to\ndiscriminate against people based on protected characteristics, such as gender\nand ethnicity. Previous studies attribute such undesired behavior to flaws in\nalgorithmic design or biased data. However, these studies ignore that\ndiscrimination is often the result of a lack of well-specified fairness\nrequirements and their verification. The fact that experts' knowledge about\nfairness is often implicit makes the task of specifying precise and verifiable\nfairness requirements difficult. In related domains, such as security\nengineering, knowledge graphs have been proven to be effective in formalizing\nknowledge to assist requirements specification and verification. To address the\nlack of formal mechanisms for specifying and verifying fairness requirements,\nwe propose the development of a knowledge graph-based framework for fairness.\nIn this paper, we discuss the challenges, research questions, and a road map\ntowards addressing the research questions.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u57fa\u4e8e\u77e5\u8bc6\u56fe\u8c31\u7684\u516c\u5e73\u6027\u6846\u67b6\uff0c\u7528\u4e8e\u5f62\u5f0f\u5316\u5730\u6307\u5b9a\u548c\u9a8c\u8bc1\u8f6f\u4ef6\u7cfb\u7edf\u7684\u516c\u5e73\u6027\u9700\u6c42\uff0c\u4ee5\u89e3\u51b3\u7b97\u6cd5\u6b67\u89c6\u95ee\u9898", "motivation": "\u73b0\u6709\u7814\u7a76\u5ffd\u89c6\u4e86\u6b67\u89c6\u5f80\u5f80\u6e90\u4e8e\u7f3a\u4e4f\u660e\u786e\u5b9a\u4e49\u7684\u516c\u5e73\u6027\u9700\u6c42\u53ca\u5176\u9a8c\u8bc1\u673a\u5236\uff0c\u4e13\u5bb6\u77e5\u8bc6\u901a\u5e38\u9690\u542b\u96be\u4ee5\u5f62\u5f0f\u5316", "method": "\u5f00\u53d1\u57fa\u4e8e\u77e5\u8bc6\u56fe\u8c31\u7684\u6846\u67b6\uff0c\u501f\u9274\u5b89\u5168\u5de5\u7a0b\u9886\u57df\u7684\u6210\u529f\u7ecf\u9a8c\uff0c\u901a\u8fc7\u77e5\u8bc6\u56fe\u8c31\u5f62\u5f0f\u5316\u516c\u5e73\u6027\u77e5\u8bc6\uff0c\u8f85\u52a9\u9700\u6c42\u89c4\u8303\u548c\u9a8c\u8bc1", "result": "\u63d0\u51fa\u4e86\u8be5\u9886\u57df\u7684\u7814\u7a76\u6311\u6218\u3001\u7814\u7a76\u95ee\u9898\u548c\u5b9e\u65bd\u8def\u7ebf\u56fe", "conclusion": "\u77e5\u8bc6\u56fe\u8c31\u65b9\u6cd5\u6709\u671b\u4e3a\u8f6f\u4ef6\u7cfb\u7edf\u516c\u5e73\u6027\u9700\u6c42\u7684\u89c4\u8303\u548c\u9a8c\u8bc1\u63d0\u4f9b\u6709\u6548\u7684\u5f62\u5f0f\u5316\u673a\u5236\uff0c\u586b\u8865\u5f53\u524d\u7814\u7a76\u7a7a\u767d"}}
{"id": "2509.21009", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.21009", "abs": "https://arxiv.org/abs/2509.21009", "authors": ["Wei Gao", "Yuheng Zhao", "Dakai An", "Tianyuan Wu", "Lunxi Cao", "Shaopan Xiong", "Ju Huang", "Weixun Wang", "Siran Yang", "Wenbo Su", "Jiamang Wang", "Lin Qu", "Bo Zheng", "Wei Wang"], "title": "RollPacker: Mitigating Long-Tail Rollouts for Fast, Synchronous RL Post-Training", "comment": "16pages,14 figures", "summary": "Reinforcement Learning (RL) is a pivotal post-training technique for\nenhancing the reasoning capabilities of Large Language Models (LLMs). However,\nsynchronous RL post-training often suffers from significant GPU\nunderutilization, referred to as bubbles, caused by imbalanced response lengths\nwithin rollout steps. Many RL systems attempt to alleviate this problem by\nrelaxing synchronization, but this can compromise training accuracy. In this\npaper, we introduce tail batching, a novel rollout scheduling strategy for\nsynchronous RL that systematically consolidates prompts leading to long-tail\nresponses into a small subset of rollout steps (long rounds), while ensuring\nthat the majority of steps (short rounds) involve only balanced, short\nrollouts. By excluding long responses from short rounds and rescheduling them\ninto a few designated long rounds, tail batching effectively reduces GPU idle\ntime during rollouts and significantly accelerates RL training without\nsacrificing accuracy. We present RollPacker, a system that fully harnesses the\nbenefits of tail batching through holistic optimizations across all three RL\nstages: elastic parallelism adaptation for rollout, dynamic resource allocation\nand scheduling for reward, and stream-based training. Empirical results show\nthat RollPacker achieves a 2.03x-2.56x end-to-end training time reduction\ncompared to veRL and up to 2.24x speedup compared to RLHFuse for the Qwen2.5\nfamily of LLMs on up to 128 H800 GPUs.", "AI": {"tldr": "\u63d0\u51fatail batching\u65b9\u6cd5\u89e3\u51b3RL\u8bad\u7ec3\u4e2dGPU\u5229\u7528\u7387\u4f4e\u7684\u95ee\u9898\uff0c\u901a\u8fc7\u5c06\u957f\u54cd\u5e94\u8bf7\u6c42\u96c6\u4e2d\u8c03\u5ea6\u5230\u7279\u5b9a\u8f6e\u6b21\uff0c\u663e\u8457\u52a0\u901f\u8bad\u7ec3\u800c\u4e0d\u635f\u5931\u7cbe\u5ea6", "motivation": "\u540c\u6b65RL\u540e\u8bad\u7ec3\u5b58\u5728GPU\u5229\u7528\u7387\u4f4e\u7684\u95ee\u9898\uff0c\u7531\u54cd\u5e94\u957f\u5ea6\u4e0d\u5e73\u8861\u5bfc\u81f4\u7684\u8ba1\u7b97\u6c14\u6ce1\u9020\u6210\u3002\u73b0\u6709\u65b9\u6cd5\u653e\u677e\u540c\u6b65\u4f1a\u727a\u7272\u8bad\u7ec3\u7cbe\u5ea6", "method": "\u63d0\u51fatail batching\u8c03\u5ea6\u7b56\u7565\uff0c\u5c06\u957f\u5c3e\u54cd\u5e94\u8bf7\u6c42\u96c6\u4e2d\u5230\u5c11\u91cf\u957f\u8f6e\u6b21\uff0c\u5927\u591a\u6570\u77ed\u8f6e\u6b21\u53ea\u5904\u7406\u5e73\u8861\u7684\u77ed\u54cd\u5e94\u3002\u5f00\u53d1RollPacker\u7cfb\u7edf\u5b9e\u73b0\u5168\u6d41\u7a0b\u4f18\u5316", "result": "\u5728128\u4e2aH800 GPU\u4e0a\uff0c\u76f8\u6bd4veRL\u5b9e\u73b02.03-2.56\u500d\u7aef\u5230\u7aef\u8bad\u7ec3\u65f6\u95f4\u51cf\u5c11\uff0c\u76f8\u6bd4RLHFuse\u6700\u9ad82.24\u500d\u52a0\u901f", "conclusion": "tail batching\u80fd\u6709\u6548\u51cf\u5c11GPU\u7a7a\u95f2\u65f6\u95f4\uff0c\u663e\u8457\u52a0\u901fRL\u8bad\u7ec3\u540c\u65f6\u4fdd\u6301\u7cbe\u5ea6\uff0c\u4e3aLLM\u63a8\u7406\u80fd\u529b\u63d0\u5347\u63d0\u4f9b\u9ad8\u6548\u89e3\u51b3\u65b9\u6848"}}
{"id": "2509.20415", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20415", "abs": "https://arxiv.org/abs/2509.20415", "authors": ["Yu Pan", "Xiaocheng Li", "Hanzhao Wang"], "title": "Online-Optimized RAG for Tool Use and Function Calling", "comment": null, "summary": "In many applications, retrieval-augmented generation (RAG) drives tool use\nand function calling by embedding the (user) queries and matching them to\npre-specified tool/function descriptions. In this paper, we address an\nembedding misalignment issue that often arises in practical applications due to\nimperfect embedding models or noisy descriptions; such misalignment may lead to\nincorrect retrieval and task failure. We introduce Online-Optimized RAG, a\ndeployment-time framework that continually adapts retrieval embeddings from\nlive interactions using minimal feedback (e.g., task success). Online-Optimized\nRAG applies lightweight online gradient updates with negligible per-query\nlatency and requires no changes to the underlying LLM. The method is\nplug-and-play: it supports both single- and multi-hop tool use, dynamic tool\ninventories, and $K$-retrieval with re-ranking. We provide a problem-dependent\ntheoretical analysis that quantifies how the method's performance depends on\nthe initialization quality of the embeddings and other related quantities.\nAcross diverse tool-use and document-retrieval scenarios, our Online-Optimized\nRAG consistently improves tool selection accuracy and end-task success, thus\nproviding a simple, practical path to robust, self-improving RAG systems.", "AI": {"tldr": "Online-Optimized RAG\u662f\u4e00\u4e2a\u90e8\u7f72\u65f6\u6846\u67b6\uff0c\u901a\u8fc7\u5728\u7ebf\u68af\u5ea6\u66f4\u65b0\u6301\u7eed\u4f18\u5316\u68c0\u7d22\u5d4c\u5165\uff0c\u89e3\u51b3\u5d4c\u5165\u4e0d\u5bf9\u9f50\u95ee\u9898\uff0c\u63d0\u9ad8\u5de5\u5177\u9009\u62e9\u51c6\u786e\u6027\u548c\u4efb\u52a1\u6210\u529f\u7387\u3002", "motivation": "\u89e3\u51b3RAG\u7cfb\u7edf\u4e2d\u7531\u4e8e\u4e0d\u5b8c\u7f8e\u5d4c\u5165\u6a21\u578b\u6216\u566a\u58f0\u63cf\u8ff0\u5bfc\u81f4\u7684\u5d4c\u5165\u4e0d\u5bf9\u9f50\u95ee\u9898\uff0c\u8fd9\u79cd\u4e0d\u5bf9\u9f50\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\u68c0\u7d22\u548c\u4efb\u52a1\u5931\u8d25\u3002", "method": "\u4f7f\u7528\u8f7b\u91cf\u7ea7\u5728\u7ebf\u68af\u5ea6\u66f4\u65b0\uff0c\u4ece\u5b9e\u65f6\u4ea4\u4e92\u4e2d\u6301\u7eed\u9002\u5e94\u68c0\u7d22\u5d4c\u5165\uff0c\u4ec5\u9700\u6700\u5c0f\u53cd\u9988\uff08\u5982\u4efb\u52a1\u6210\u529f\uff09\uff0c\u65e0\u9700\u6539\u53d8\u5e95\u5c42LLM\u3002", "result": "\u5728\u5404\u79cd\u5de5\u5177\u4f7f\u7528\u548c\u6587\u6863\u68c0\u7d22\u573a\u666f\u4e2d\uff0c\u8be5\u65b9\u6cd5\u6301\u7eed\u63d0\u9ad8\u4e86\u5de5\u5177\u9009\u62e9\u51c6\u786e\u6027\u548c\u6700\u7ec8\u4efb\u52a1\u6210\u529f\u7387\u3002", "conclusion": "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u5b9e\u7528\u7684\u8def\u5f84\uff0c\u5b9e\u73b0\u7a33\u5065\u3001\u81ea\u6211\u6539\u8fdb\u7684RAG\u7cfb\u7edf\uff0c\u652f\u6301\u5355\u8df3\u548c\u591a\u8df3\u5de5\u5177\u4f7f\u7528\u3001\u52a8\u6001\u5de5\u5177\u5e93\u548cK\u68c0\u7d22\u91cd\u6392\u5e8f\u3002"}}
{"id": "2509.21037", "categories": ["cs.DC", "cs.MS", "D.1.3; G.1.3; G.4"], "pdf": "https://arxiv.org/pdf/2509.21037", "abs": "https://arxiv.org/abs/2509.21037", "authors": ["Jakub Homola", "Ond\u0159ej Meca", "Lubom\u00edr \u0158\u00edha", "Tom\u00e1\u0161 Brzobohat\u00fd"], "title": "Utilizing Sparsity in the GPU-accelerated Assembly of Schur Complement Matrices in Domain Decomposition Methods", "comment": "12 pages (originally 10 pages without references), 10 figures,\n  submitted to SC25 conference", "summary": "Schur complement matrices emerge in many domain decomposition methods that\ncan solve complex engineering problems using supercomputers. Today, as most of\nthe high-performance clusters' performance lies in GPUs, these methods should\nalso be accelerated.\n  Typically, the offloaded components are the explicitly assembled dense Schur\ncomplement matrices used later in the iterative solver for multiplication with\na vector. As the explicit assembly is expensive, it represents a significant\noverhead associated with this approach to acceleration. It has already been\nshown that the overhead can be minimized by assembling the Schur complements\ndirectly on the GPU.\n  This paper shows that the GPU assembly can be further improved by wisely\nutilizing the sparsity of the input matrices. In the context of FETI methods,\nwe achieved a speedup of 5.1 in the GPU section of the code and 3.3 for the\nwhole assembly, making the acceleration beneficial from as few as 10\niterations.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5229\u7528\u8f93\u5165\u77e9\u9635\u7a00\u758f\u6027\u4f18\u5316GPU\u4e0aSchur\u8865\u77e9\u9635\u7ec4\u88c5\u7684\u65b9\u6cd5\uff0c\u5728FETI\u65b9\u6cd5\u4e2d\u5b9e\u73b05.1\u500dGPU\u4ee3\u7801\u52a0\u901f\u548c3.3\u500d\u6574\u4f53\u7ec4\u88c5\u52a0\u901f", "motivation": "\u968f\u7740\u9ad8\u6027\u80fd\u8ba1\u7b97\u96c6\u7fa4\u8f6c\u5411GPU\u67b6\u6784\uff0c\u9700\u8981\u52a0\u901f\u57df\u5206\u89e3\u65b9\u6cd5\u4e2d\u7684Schur\u8865\u77e9\u9635\u7ec4\u88c5\uff0c\u73b0\u6709GPU\u7ec4\u88c5\u65b9\u6cd5\u4ecd\u6709\u4f18\u5316\u7a7a\u95f4", "method": "\u901a\u8fc7\u667a\u80fd\u5229\u7528\u8f93\u5165\u77e9\u9635\u7684\u7a00\u758f\u6027\u6765\u4f18\u5316GPU\u4e0a\u7684Schur\u8865\u77e9\u9635\u7ec4\u88c5\u8fc7\u7a0b", "result": "\u5728FETI\u65b9\u6cd5\u4e2d\u5b9e\u73b0\u4e86GPU\u4ee3\u7801\u90e8\u52065.1\u500d\u52a0\u901f\u548c\u6574\u4f53\u7ec4\u88c53.3\u500d\u52a0\u901f\uff0c\u4ece10\u6b21\u8fed\u4ee3\u5f00\u59cb\u5c31\u80fd\u4f53\u73b0\u52a0\u901f\u6548\u76ca", "conclusion": "\u5229\u7528\u7a00\u758f\u6027\u4f18\u5316GPU\u7ec4\u88c5\u53ef\u663e\u8457\u63d0\u5347Schur\u8865\u77e9\u9635\u7ec4\u88c5\u6548\u7387\uff0c\u4f7fGPU\u52a0\u901f\u5728\u8f83\u5c11\u8fed\u4ee3\u6b21\u6570\u4e0b\u5c31\u80fd\u4ea7\u751f\u6548\u76ca"}}
{"id": "2509.20421", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20421", "abs": "https://arxiv.org/abs/2509.20421", "authors": ["Reiner H\u00e4hnle", "Cosimo Laneve", "Adele Veschetti"], "title": "Formal Verification of Legal Contracts: A Translation-based Approach", "comment": null, "summary": "Stipula is a domain-specific programming language designed to model legal\ncontracts with enforceable properties, especially those involving asset\ntransfers and obligations. This paper presents a methodology to formally verify\nthe correctness of Stipula contracts through translation into Java code\nannotated with Java Modeling Language specifications. As a verification\nbackend, the deductive verification tool KeY is used. Both, the translation and\nthe verification of partial and total correctness for a large subset of Stipula\ncontracts, those with disjoint cycles, is fully automatic. Our work\ndemonstrates that a general-purpose deductive verification tool can be used\nsuccessfully in a translation approach.", "AI": {"tldr": "Stipula\u8bed\u8a00\u901a\u8fc7\u8f6c\u6362\u4e3a\u5e26JML\u6ce8\u89e3\u7684Java\u4ee3\u7801\uff0c\u4f7f\u7528KeY\u5de5\u5177\u81ea\u52a8\u9a8c\u8bc1\u8d44\u4ea7\u8f6c\u79fb\u6cd5\u5f8b\u5408\u540c\u7684\u6b63\u786e\u6027", "motivation": "\u9700\u8981\u4e3a\u6cd5\u5f8b\u5408\u540c\uff08\u7279\u522b\u662f\u6d89\u53ca\u8d44\u4ea7\u8f6c\u79fb\u548c\u4e49\u52a1\u7684\u5408\u540c\uff09\u63d0\u4f9b\u5f62\u5f0f\u5316\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u786e\u4fdd\u5408\u540c\u6761\u6b3e\u7684\u6b63\u786e\u6027\u548c\u53ef\u6267\u884c\u6027", "method": "\u5c06Stipula\u5408\u540c\u7ffb\u8bd1\u6210\u5e26\u6709Java Modeling Language\u89c4\u8303\u7684Java\u4ee3\u7801\uff0c\u7136\u540e\u4f7f\u7528KeY\u6f14\u7ece\u9a8c\u8bc1\u5de5\u5177\u8fdb\u884c\u81ea\u52a8\u9a8c\u8bc1", "result": "\u6210\u529f\u5b9e\u73b0\u4e86\u5bf9\u5177\u6709\u4e0d\u76f8\u4ea4\u5faa\u73af\u7684\u5927\u578bStipula\u5408\u540c\u5b50\u96c6\u7684\u90e8\u5206\u548c\u5b8c\u5168\u6b63\u786e\u6027\u7684\u5168\u81ea\u52a8\u9a8c\u8bc1", "conclusion": "\u901a\u7528\u6f14\u7ece\u9a8c\u8bc1\u5de5\u5177\u53ef\u4ee5\u901a\u8fc7\u7ffb\u8bd1\u65b9\u6cd5\u6210\u529f\u5e94\u7528\u4e8e\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u7684\u5f62\u5f0f\u5316\u9a8c\u8bc1"}}
{"id": "2509.21039", "categories": ["cs.DC", "cs.CE", "cs.ET", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.21039", "abs": "https://arxiv.org/abs/2509.21039", "authors": ["William F. Godoy", "Tatiana Melnichenko", "Pedro Valero-Lara", "Wael Elwasif", "Philip Fackler", "Rafael Ferreira Da Silva", "Keita Teranishi", "Jeffrey S. Vetter"], "title": "Mojo: MLIR-Based Performance-Portable HPC Science Kernels on GPUs for the Python Ecosystem", "comment": "Accepted at the IEEE/ACM SC25 Conference WACCPD Workshop. The\n  International Conference for High Performance Computing, Networking, Storage,\n  and Analysis, St. Louis, MO, Nov 16-21, 2025. 15 pages, 7 figures. WFG and TM\n  contributed equally", "summary": "We explore the performance and portability of the novel Mojo language for\nscientific computing workloads on GPUs. As the first language based on the\nLLVM's Multi-Level Intermediate Representation (MLIR) compiler infrastructure,\nMojo aims to close performance and productivity gaps by combining Python's\ninteroperability and CUDA-like syntax for compile-time portable GPU\nprogramming. We target four scientific workloads: a seven-point stencil\n(memory-bound), BabelStream (memory-bound), miniBUDE (compute-bound), and\nHartree-Fock (compute-bound with atomic operations); and compare their\nperformance against vendor baselines on NVIDIA H100 and AMD MI300A GPUs. We\nshow that Mojo's performance is competitive with CUDA and HIP for memory-bound\nkernels, whereas gaps exist on AMD GPUs for atomic operations and for fast-math\ncompute-bound kernels on both AMD and NVIDIA GPUs. Although the learning curve\nand programming requirements are still fairly low-level, Mojo can close\nsignificant gaps in the fragmented Python ecosystem in the convergence of\nscientific computing and AI.", "AI": {"tldr": "Mojo\u8bed\u8a00\u5728GPU\u79d1\u5b66\u8ba1\u7b97\u4e2d\u7684\u6027\u80fd\u4e0e\u53ef\u79fb\u690d\u6027\u8bc4\u4f30\uff0c\u663e\u793a\u5176\u5728\u5185\u5b58\u5bc6\u96c6\u578b\u4efb\u52a1\u4e0a\u4e0eCUDA/HIP\u7ade\u4e89\uff0c\u4f46\u5728\u539f\u5b50\u64cd\u4f5c\u548c\u5feb\u901f\u6570\u5b66\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u4e0a\u5b58\u5728\u5dee\u8ddd\u3002", "motivation": "\u63a2\u7d22\u57fa\u4e8eMLIR\u7684\u65b0\u578bMojo\u8bed\u8a00\u5728\u79d1\u5b66\u8ba1\u7b97\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u6027\u80fd\u548c\u53ef\u79fb\u690d\u6027\uff0c\u65e8\u5728\u5f25\u5408Python\u751f\u6001\u7cfb\u7edf\u5728\u79d1\u5b66\u8ba1\u7b97\u4e0eAI\u878d\u5408\u4e2d\u7684\u6027\u80fd\u548c\u751f\u4ea7\u6548\u7387\u5dee\u8ddd\u3002", "method": "\u9488\u5bf9\u56db\u79cd\u79d1\u5b66\u8ba1\u7b97\u5de5\u4f5c\u8d1f\u8f7d\uff08\u4e03\u70b9\u6a21\u677f\u3001BabelStream\u3001miniBUDE\u3001Hartree-Fock\uff09\uff0c\u5728NVIDIA H100\u548cAMD MI300A GPU\u4e0a\u4e0e\u4f9b\u5e94\u5546\u57fa\u7ebf\uff08CUDA\u548cHIP\uff09\u8fdb\u884c\u6027\u80fd\u6bd4\u8f83\u3002", "result": "Mojo\u5728\u5185\u5b58\u5bc6\u96c6\u578b\u5185\u6838\u4e0a\u7684\u6027\u80fd\u4e0eCUDA\u548cHIP\u7ade\u4e89\uff0c\u4f46\u5728AMD GPU\u4e0a\u7684\u539f\u5b50\u64cd\u4f5c\u4ee5\u53caAMD\u548cNVIDIA GPU\u4e0a\u7684\u5feb\u901f\u6570\u5b66\u8ba1\u7b97\u5bc6\u96c6\u578b\u5185\u6838\u5b58\u5728\u6027\u80fd\u5dee\u8ddd\u3002", "conclusion": "\u5c3d\u7ba1\u5b66\u4e60\u66f2\u7ebf\u548c\u7f16\u7a0b\u8981\u6c42\u4ecd\u8f83\u4f4e\u7ea7\uff0cMojo\u80fd\u591f\u5728\u79d1\u5b66\u8ba1\u7b97\u4e0eAI\u878d\u5408\u7684\u788e\u7247\u5316Python\u751f\u6001\u7cfb\u7edf\u4e2d\u5f25\u5408\u91cd\u8981\u5dee\u8ddd\u3002"}}
{"id": "2509.20491", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.20491", "abs": "https://arxiv.org/abs/2509.20491", "authors": ["Brahim Mahmoudi", "Naouel Moha", "Quentin Stievenert", "Florent Avellaneda"], "title": "AI-Specific Code Smells: From Specification to Detection", "comment": null, "summary": "The rise of Artificial Intelligence (AI) is reshaping how software systems\nare developed and maintained. However, AI-based systems give rise to new\nsoftware issues that existing detection tools often miss. Among these, we focus\non AI-specific code smells, recurring patterns in the code that may indicate\ndeeper problems such as unreproducibility, silent failures, or poor model\ngeneralization. We introduce SpecDetect4AI, a tool-based approach for the\nspecification and detection of these code smells at scale. This approach\ncombines a high-level declarative Domain-Specific Language (DSL) for rule\nspecification with an extensible static analysis tool that interprets and\ndetects these rules for AI-based systems. We specified 22 AI-specific code\nsmells and evaluated SpecDetect4AI on 826 AI-based systems (20M lines of code),\nachieving a precision of 88.66% and a recall of 88.89%, outperforming other\nexisting detection tools. Our results show that SpecDetect4AI supports the\nspecification and detection of AI-specific code smells through dedicated rules\nand can effectively analyze large AI-based systems, demonstrating both\nefficiency and extensibility (SUS 81.7/100).", "AI": {"tldr": "SpecDetect4AI\u662f\u4e00\u4e2a\u57fa\u4e8eDSL\u7684\u9759\u6001\u5206\u6790\u5de5\u5177\uff0c\u4e13\u95e8\u7528\u4e8e\u68c0\u6d4bAI\u7cfb\u7edf\u4e2d\u7684\u4ee3\u7801\u5f02\u5473\uff0c\u5728826\u4e2aAI\u7cfb\u7edf\u4e0a\u8fbe\u523088.66%\u7684\u7cbe\u786e\u5ea6\u548c88.89%\u7684\u53ec\u56de\u7387\u3002", "motivation": "AI\u7cfb\u7edf\u7684\u5174\u8d77\u5e26\u6765\u4e86\u65b0\u7684\u8f6f\u4ef6\u95ee\u9898\uff0c\u73b0\u6709\u68c0\u6d4b\u5de5\u5177\u5f80\u5f80\u65e0\u6cd5\u8bc6\u522bAI\u7279\u5b9a\u7684\u4ee3\u7801\u5f02\u5473\uff0c\u8fd9\u4e9b\u95ee\u9898\u53ef\u80fd\u5bfc\u81f4\u4e0d\u53ef\u590d\u73b0\u6027\u3001\u9759\u9ed8\u5931\u8d25\u6216\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u5dee\u7b49\u6df1\u5c42\u95ee\u9898\u3002", "method": "\u5f00\u53d1\u4e86SpecDetect4AI\u5de5\u5177\uff0c\u7ed3\u5408\u9ad8\u7ea7\u58f0\u660e\u5f0f\u9886\u57df\u7279\u5b9a\u8bed\u8a00(DSL)\u8fdb\u884c\u89c4\u5219\u89c4\u8303\uff0c\u4ee5\u53ca\u53ef\u6269\u5c55\u7684\u9759\u6001\u5206\u6790\u5de5\u5177\u6765\u89e3\u6790\u548c\u68c0\u6d4bAI\u7cfb\u7edf\u4e2d\u7684\u4ee3\u7801\u5f02\u5473\u89c4\u5219\u3002", "result": "\u5728826\u4e2aAI\u7cfb\u7edf(2000\u4e07\u884c\u4ee3\u7801)\u4e0a\u8bc4\u4f30\uff0c\u5b9e\u73b0\u4e8688.66%\u7684\u7cbe\u786e\u5ea6\u548c88.89%\u7684\u53ec\u56de\u7387\uff0c\u4f18\u4e8e\u73b0\u6709\u68c0\u6d4b\u5de5\u5177\uff0cSUS\u8bc4\u5206\u4e3a81.7/100\u3002", "conclusion": "SpecDetect4AI\u901a\u8fc7\u4e13\u7528\u89c4\u5219\u6709\u6548\u652f\u6301AI\u7279\u5b9a\u4ee3\u7801\u5f02\u5473\u7684\u89c4\u8303\u548c\u68c0\u6d4b\uff0c\u80fd\u591f\u9ad8\u6548\u5206\u6790\u5927\u578bAI\u7cfb\u7edf\uff0c\u5c55\u793a\u4e86\u826f\u597d\u7684\u6548\u7387\u548c\u53ef\u6269\u5c55\u6027\u3002"}}
{"id": "2509.21137", "categories": ["cs.DC", "cs.AR", "cs.ET"], "pdf": "https://arxiv.org/pdf/2509.21137", "abs": "https://arxiv.org/abs/2509.21137", "authors": ["Huynh Q. N. Vo", "Md Tawsif Rahman Chowdhury", "Paritosh Ramanan", "Gozde Tutuncuoglu", "Junchi Yang", "Feng Qiu", "Murat Yildirim"], "title": "From GPUs to RRAMs: Distributed In-Memory Primal-Dual Hybrid Gradient Method for Solving Large-Scale Linear Optimization Problem", "comment": "Main Article (12 Pages, 3 Figures), Appendix (4 Pages)", "summary": "The exponential growth of computational workloads is surpassing the\ncapabilities of conventional architectures, which are constrained by\nfundamental limits. In-memory computing (IMC) with RRAM provides a promising\nalternative by providing analog computations with significant gains in latency\nand energy use. However, existing algorithms developed for conventional\narchitectures do not translate to IMC, particularly for constrained\noptimization problems where frequent matrix reprogramming remains\ncost-prohibitive for IMC applications. Here we present a distributed in-memory\nprimal-dual hybrid gradient (PDHG) method, specifically co-designed for arrays\nof RRAM devices. Our approach minimizes costly write cycles, incorporates\nrobustness against device non-idealities, and leverages a symmetric\nblock-matrix formulation to unify operations across distributed crossbars. We\nintegrate a physics-based simulation framework called MELISO+ to evaluate\nperformance under realistic device conditions. Benchmarking against\nGPU-accelerated solvers on large-scale linear programs demonstrates that our\nRRAM-based solver achieves comparable accuracy with up to three orders of\nmagnitude reductions in energy consumption and latency. These results\ndemonstrate the first PDHG-based LP solver implemented on RRAMs, showcasing the\ntransformative potential of algorithm-hardware co-design for solving\nlarge-scale optimization through distributed in-memory computing.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u9488\u5bf9RRAM\u9635\u5217\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u539f\u59cb-\u5bf9\u5076\u6df7\u5408\u68af\u5ea6\u65b9\u6cd5\uff0c\u901a\u8fc7\u7b97\u6cd5-\u786c\u4ef6\u534f\u540c\u8bbe\u8ba1\u89e3\u51b3\u5927\u89c4\u6a21\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u76f8\u6bd4GPU\u52a0\u901f\u6c42\u89e3\u5668\u5b9e\u73b0\u4e86\u4e09\u4e2a\u6570\u91cf\u7ea7\u7684\u80fd\u8017\u548c\u5ef6\u8fdf\u964d\u4f4e\u3002", "motivation": "\u4f20\u7edf\u67b6\u6784\u53d7\u9650\u4e8e\u57fa\u672c\u7269\u7406\u6781\u9650\uff0c\u65e0\u6cd5\u6ee1\u8db3\u8ba1\u7b97\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6307\u6570\u589e\u957f\u9700\u6c42\u3002\u57fa\u4e8eRRAM\u7684\u5185\u5b58\u8ba1\u7b97\u867d\u7136\u63d0\u4f9b\u4e86\u6709\u524d\u666f\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4f46\u73b0\u6709\u7b97\u6cd5\u4e0d\u9002\u7528\u4e8e\u5185\u5b58\u8ba1\u7b97\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u9700\u8981\u9891\u7e41\u77e9\u9635\u91cd\u7f16\u7a0b\u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u3002", "method": "\u5f00\u53d1\u4e86\u5206\u5e03\u5f0f\u5185\u5b58\u539f\u59cb-\u5bf9\u5076\u6df7\u5408\u68af\u5ea6\u65b9\u6cd5\uff0c\u6700\u5c0f\u5316\u6602\u8d35\u7684\u5199\u5165\u5468\u671f\uff0c\u5305\u542b\u5bf9\u5668\u4ef6\u975e\u7406\u60f3\u6027\u7684\u9c81\u68d2\u6027\uff0c\u5e76\u5229\u7528\u5bf9\u79f0\u5757\u77e9\u9635\u516c\u5f0f\u7edf\u4e00\u5206\u5e03\u5f0f\u4ea4\u53c9\u9635\u5217\u7684\u64cd\u4f5c\u3002\u96c6\u6210\u4e86MELISO+\u7269\u7406\u4eff\u771f\u6846\u67b6\u8bc4\u4f30\u5b9e\u9645\u5668\u4ef6\u6761\u4ef6\u4e0b\u7684\u6027\u80fd\u3002", "result": "\u5728\u5927\u89c4\u6a21\u7ebf\u6027\u7a0b\u5e8f\u4e0a\u4e0eGPU\u52a0\u901f\u6c42\u89e3\u5668\u5bf9\u6bd4\uff0cRRAM\u6c42\u89e3\u5668\u5b9e\u73b0\u4e86\u76f8\u5f53\u7684\u7cbe\u5ea6\uff0c\u540c\u65f6\u80fd\u8017\u548c\u5ef6\u8fdf\u964d\u4f4e\u4e86\u4e09\u4e2a\u6570\u91cf\u7ea7\u3002", "conclusion": "\u8fd9\u662f\u9996\u4e2a\u5728RRAM\u4e0a\u5b9e\u73b0\u7684PDHG\u7ebf\u6027\u89c4\u5212\u6c42\u89e3\u5668\uff0c\u5c55\u793a\u4e86\u7b97\u6cd5-\u786c\u4ef6\u534f\u540c\u8bbe\u8ba1\u901a\u8fc7\u5206\u5e03\u5f0f\u5185\u5b58\u8ba1\u7b97\u89e3\u51b3\u5927\u89c4\u6a21\u4f18\u5316\u95ee\u9898\u7684\u53d8\u9769\u6f5c\u529b\u3002"}}
{"id": "2509.20497", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20497", "abs": "https://arxiv.org/abs/2509.20497", "authors": ["Ahmed Aljohani", "Hyunsook Do"], "title": "PromptDebt: A Comprehensive Study of Technical Debt Across LLM Projects", "comment": "Accepted at Proceedings of the 2025 Evaluation and Assessment in\n  Software Engineering (EASE '25)", "summary": "Large Language Models (LLMs) are increasingly embedded in software via APIs\nlike OpenAI, offering powerful AI features without heavy infrastructure. Yet\nthese integrations bring their own form of self-admitted technical debt (SATD).\nIn this paper, we present the first large-scale empirical study of LLM-specific\nSATD: its origins, prevalence, and mitigation strategies. By analyzing 93,142\nPython files across major LLM APIs, we found that 54.49% of SATD instances stem\nfrom OpenAI integrations and 12.35% from LangChain use. Prompt design emerged\nas the primary source of LLM-specific SATD, with 6.61% of debt related to\nprompt configuration and optimization issues, followed by hyperparameter tuning\nand LLM-framework integration. We further explored which prompt techniques\nattract the most debt, revealing that instruction-based prompts (38.60%) and\nfew-shot prompts (18.13%) are particularly vulnerable due to their dependence\non instruction clarity and example quality. Finally, we release a comprehensive\nSATD dataset to support reproducibility and offer practical guidance for\nmanaging technical debt in LLM-powered systems.", "AI": {"tldr": "LLM\u96c6\u6210\u5e26\u6765\u6280\u672f\u503a\u52a1\uff1a54.49%\u6765\u81eaOpenAI\uff0c12.35%\u6765\u81eaLangChain\uff0c\u63d0\u793a\u8bbe\u8ba1\u662f\u4e3b\u8981\u503a\u52a1\u6765\u6e90(6.61%)", "motivation": "\u968f\u7740LLM\u901a\u8fc7API\u96c6\u6210\u5230\u8f6f\u4ef6\u4e2d\uff0c\u4ea7\u751f\u4e86\u7279\u6709\u7684\u6280\u672f\u503a\u52a1\u95ee\u9898\uff0c\u9700\u8981\u7cfb\u7edf\u7814\u7a76\u5176\u6765\u6e90\u3001\u666e\u904d\u6027\u548c\u7f13\u89e3\u7b56\u7565", "method": "\u5206\u679093,142\u4e2aPython\u6587\u4ef6\uff0c\u6db5\u76d6\u4e3b\u8981LLM API\uff0c\u8bc6\u522bLLM\u7279\u6709\u7684\u6280\u672f\u503a\u52a1\u5b9e\u4f8b\u53ca\u5176\u5206\u5e03", "result": "\u53d1\u73b0\u63d0\u793a\u8bbe\u8ba1\u662f\u4e3b\u8981\u503a\u52a1\u6765\u6e90(6.61%)\uff0c\u6307\u4ee4\u63d0\u793a(38.60%)\u548c\u5c11\u6837\u672c\u63d0\u793a(18.13%)\u6700\u6613\u4ea7\u751f\u503a\u52a1\uff0cOpenAI\u96c6\u6210\u536054.49%\u503a\u52a1", "conclusion": "LLM\u96c6\u6210\u786e\u5b9e\u5e26\u6765\u663e\u8457\u6280\u672f\u503a\u52a1\uff0c\u9700\u8981\u5173\u6ce8\u63d0\u793a\u8bbe\u8ba1\u548c\u53c2\u6570\u8c03\u4f18\uff0c\u63d0\u4f9b\u4e86\u6570\u636e\u96c6\u548c\u5b9e\u8df5\u6307\u5bfc\u6765\u7ba1\u7406LLM\u7cfb\u7edf\u7684\u6280\u672f\u503a\u52a1"}}
{"id": "2509.21275", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.21275", "abs": "https://arxiv.org/abs/2509.21275", "authors": ["Shiju Wang", "Yujie Wang", "Ao Sun", "Fangcheng Fu", "Zijian Zhu", "Bin Cui", "Xu Han", "Kaisheng Ma"], "title": "Data-Centric Elastic Pipeline Parallelism for Efficient Long-Context LLM Training", "comment": null, "summary": "Long context training is crucial for LLM's context extension. Existing\nschemes, such as sequence parallelism, incur substantial communication\noverhead. Pipeline parallelism (PP) reduces this cost, but its effectiveness\nhinges on partitioning granularity. Batch-level PP dividing input samples\nexhibits high memory consumption in long-context scenario, whereas token-level\nPP splitting sequences into slices alleviates memory overhead but may incur\nhardware under-utilization. This trade-off motivates adaptively selecting PP\ngranularity to match resource and workload characteristics. Moreover, sequence\nlength distribution of the real-world dataset exhibits skewness, posing a\nchallenge on PP's workload balance and efficient scheduling. Current static PP\nscheduling methods overlook the variance of sequence length, leading to\nsuboptimal performance. In this paper, we propose Elastic Pipeline Parallelism\n(EPP) that orchestrates token-level PP and batch-level PP to adapt to resource\nand workload heterogeneity. We build InfiniPipe, a distributed training system\nthat unleashes the potential of EPP via (1) a resource-aware and\nworkload-balanced sequence processor that splits long sequences and packs short\nones; and (2) a co-optimization methodology that jointly optimizes pipeline\nschedule and gradient checkpointing via a mechanism named stage-aware\nchunk-level adaptive checkpointing. Comprehensive experiments demonstrate that\nInfiniPipe achieves a 1.69x speedup over state-of-the-art systems.", "AI": {"tldr": "InfiniPipe\u7cfb\u7edf\u901a\u8fc7\u5f39\u6027\u6d41\u6c34\u7ebf\u5e76\u884c(EPP)\u6280\u672f\uff0c\u81ea\u9002\u5e94\u9009\u62e9\u6279\u7ea7\u548c\u4ee4\u724c\u7ea7\u6d41\u6c34\u7ebf\u5e76\u884c\u7c92\u5ea6\uff0c\u7ed3\u5408\u5e8f\u5217\u5206\u5272\u6253\u5305\u548c\u534f\u540c\u4f18\u5316\u8c03\u5ea6\uff0c\u5728\u957f\u4e0a\u4e0b\u6587\u8bad\u7ec3\u4e2d\u5b9e\u73b01.69\u500d\u52a0\u901f\u3002", "motivation": "\u73b0\u6709\u6d41\u6c34\u7ebf\u5e76\u884c\u65b9\u6848\u5728\u957f\u4e0a\u4e0b\u6587\u8bad\u7ec3\u4e2d\u5b58\u5728\u5185\u5b58\u6d88\u8017\u9ad8\u6216\u786c\u4ef6\u5229\u7528\u7387\u4f4e\u7684\u6743\u8861\u95ee\u9898\uff0c\u4e14\u9759\u6001\u8c03\u5ea6\u65b9\u6cd5\u65e0\u6cd5\u5904\u7406\u771f\u5b9e\u6570\u636e\u96c6\u4e2d\u5e8f\u5217\u957f\u5ea6\u7684\u504f\u659c\u5206\u5e03\uff0c\u5bfc\u81f4\u6027\u80fd\u4e0d\u4f73\u3002", "method": "\u63d0\u51fa\u5f39\u6027\u6d41\u6c34\u7ebf\u5e76\u884c(EPP)\u6280\u672f\uff0c\u5305\u542b\uff1a(1)\u8d44\u6e90\u611f\u77e5\u548c\u8d1f\u8f7d\u5747\u8861\u7684\u5e8f\u5217\u5904\u7406\u5668\uff0c\u5206\u5272\u957f\u5e8f\u5217\u5e76\u6253\u5305\u77ed\u5e8f\u5217\uff1b(2)\u534f\u540c\u4f18\u5316\u65b9\u6cd5\uff0c\u901a\u8fc7\u9636\u6bb5\u611f\u77e5\u7684\u5757\u7ea7\u81ea\u9002\u5e94\u68c0\u67e5\u70b9\u673a\u5236\u8054\u5408\u4f18\u5316\u6d41\u6c34\u7ebf\u8c03\u5ea6\u548c\u68af\u5ea6\u68c0\u67e5\u70b9\u3002", "result": "\u7efc\u5408\u5b9e\u9a8c\u8868\u660e\uff0cInfiniPipe\u76f8\u6bd4\u6700\u5148\u8fdb\u7cfb\u7edf\u5b9e\u73b0\u4e861.69\u500d\u7684\u52a0\u901f\u6bd4\u3002", "conclusion": "EPP\u65b9\u6cd5\u80fd\u591f\u6709\u6548\u9002\u5e94\u8d44\u6e90\u548c\u8d1f\u8f7d\u5f02\u8d28\u6027\uff0c\u901a\u8fc7\u52a8\u6001\u7c92\u5ea6\u9009\u62e9\u548c\u534f\u540c\u4f18\u5316\u89e3\u51b3\u4e86\u957f\u4e0a\u4e0b\u6587\u8bad\u7ec3\u4e2d\u7684\u5185\u5b58\u6548\u7387\u548c\u786c\u4ef6\u5229\u7528\u7387\u95ee\u9898\u3002"}}
{"id": "2509.20518", "categories": ["cs.SE", "cs.PL", "D.2.3"], "pdf": "https://arxiv.org/pdf/2509.20518", "abs": "https://arxiv.org/abs/2509.20518", "authors": ["Sayed Mahbub Hasan Amiri", "Md Mainul Islam"], "title": "Enhancing Python Programming Education with an AI-Powered Code Helper: Design, Implementation, and Impact", "comment": "20 pages, 16 figures", "summary": "This is the study that presents an AI-Python-based chatbot that helps\nstudents to learn programming by demonstrating solutions to such problems as\ndebugging errors, solving syntax problems or converting abstract theoretical\nconcepts to practical implementations. Traditional coding tools like Integrated\nDevelopment Environments (IDEs) and static analyzers do not give robotic help\nwhile AI-driven code assistants such as GitHub Copilot focus on getting things\ndone. To close this gap, our chatbot combines static code analysis, dynamic\nexecution tracing, and large language models (LLMs) to provide the students\nwith relevant and practical advice, hence promoting the learning process. The\nchatbots hybrid architecture employs CodeLlama for code embedding, GPT-4 for\nnatural language interactions, and Docker-based sandboxing for secure\nexecution. Evaluated through a mixed-methods approach involving 1,500 student\nsubmissions, the system demonstrated an 85% error resolution success rate,\noutperforming standalone tools like pylint (62%) and GPT-4 (73%). Quantitative\nresults revealed a 59.3% reduction in debugging time among users, with pre- and\npost-test assessments showing a 34% improvement in coding proficiency,\nparticularly in recursion and exception handling. Qualitative feedback from 120\nstudents highlighted the chatbots clarity, accessibility, and\nconfidence-building impact, though critiques included occasional latency and\nrestrictive code sanitization. By balancing technical innovation with\npedagogical empathy, this research provides a blueprint for AI tools that\nprioritize educational equity and long-term skill retention over mere code\ncompletion. The chatbot exemplifies how AI can augment human instruction,\nfostering deeper conceptual understanding in programming education.", "AI": {"tldr": "\u57fa\u4e8eAI-Python\u7684\u7f16\u7a0b\u5b66\u4e60\u804a\u5929\u673a\u5668\u4eba\uff0c\u7ed3\u5408\u9759\u6001\u4ee3\u7801\u5206\u6790\u3001\u52a8\u6001\u6267\u884c\u8ffd\u8e2a\u548cLLM\uff0c\u5e2e\u52a9\u5b66\u751f\u89e3\u51b3\u7f16\u7a0b\u95ee\u9898\uff0c\u5728\u9519\u8bef\u89e3\u51b3\u7387\u3001\u8c03\u8bd5\u65f6\u95f4\u548c\u7f16\u7a0b\u80fd\u529b\u63d0\u5347\u65b9\u9762\u663e\u8457\u4f18\u4e8e\u4f20\u7edf\u5de5\u5177\u3002", "motivation": "\u4f20\u7edfIDE\u548c\u9759\u6001\u5206\u6790\u5de5\u5177\u7f3a\u4e4f\u673a\u5668\u4eba\u8f85\u52a9\uff0c\u800cAI\u4ee3\u7801\u52a9\u624b\u5982GitHub Copilot\u4e3b\u8981\u5173\u6ce8\u4ee3\u7801\u5b8c\u6210\u800c\u975e\u5b66\u4e60\u8fc7\u7a0b\u3002\u9700\u8981\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\uff0c\u63d0\u4f9b\u65e2\u80fd\u89e3\u51b3\u95ee\u9898\u53c8\u80fd\u4fc3\u8fdb\u5b66\u4e60\u7684\u5de5\u5177\u3002", "method": "\u91c7\u7528\u6df7\u5408\u67b6\u6784\uff1aCodeLlama\u7528\u4e8e\u4ee3\u7801\u5d4c\u5165\uff0cGPT-4\u5904\u7406\u81ea\u7136\u8bed\u8a00\u4ea4\u4e92\uff0cDocker\u6c99\u7bb1\u786e\u4fdd\u5b89\u5168\u6267\u884c\u3002\u7ed3\u5408\u9759\u6001\u4ee3\u7801\u5206\u6790\u548c\u52a8\u6001\u6267\u884c\u8ffd\u8e2a\u6280\u672f\u3002", "result": "\u57281500\u4efd\u5b66\u751f\u63d0\u4ea4\u4e2d\u8fbe\u523085%\u7684\u9519\u8bef\u89e3\u51b3\u6210\u529f\u7387\uff0c\u4f18\u4e8epylint(62%)\u548cGPT-4(73%)\u3002\u8c03\u8bd5\u65f6\u95f4\u51cf\u5c1159.3%\uff0c\u7f16\u7a0b\u80fd\u529b\u63d0\u534734%\uff0c\u7279\u522b\u662f\u5728\u9012\u5f52\u548c\u5f02\u5e38\u5904\u7406\u65b9\u9762\u3002", "conclusion": "\u8be5\u7814\u7a76\u4e3a\u4f18\u5148\u8003\u8651\u6559\u80b2\u516c\u5e73\u548c\u957f\u671f\u6280\u80fd\u4fdd\u7559\u800c\u975e\u5355\u7eaf\u4ee3\u7801\u5b8c\u6210\u7684AI\u5de5\u5177\u63d0\u4f9b\u4e86\u84dd\u56fe\uff0c\u5c55\u793a\u4e86AI\u5982\u4f55\u589e\u5f3a\u4eba\u7c7b\u6559\u5b66\uff0c\u4fc3\u8fdb\u7f16\u7a0b\u6559\u80b2\u4e2d\u66f4\u6df1\u5c42\u6b21\u7684\u6982\u5ff5\u7406\u89e3\u3002"}}
{"id": "2509.20552", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20552", "abs": "https://arxiv.org/abs/2509.20552", "authors": ["Xinyu Shi", "Zhenhao Li", "An Ran Chen"], "title": "Enhancing LLM-based Fault Localization with a Functionality-Aware Retrieval-Augmented Generation Framework", "comment": null, "summary": "Fault localization (FL) is a critical but time-consuming task in software\ndebugging, aiming to identify faulty code elements. While recent advances in\nlarge language models (LLMs) have shown promise for FL, they often struggle\nwith complex systems due to the lack of project-specific knowledge and the\ndifficulty of navigating large projects. To address these limitations, we\npropose FaR-Loc, a novel framework that enhances method-level FL by integrating\nLLMs with retrieval-augmented generation (RAG). FaR-Loc consists of three key\ncomponents: LLM Functionality Extraction, Semantic Dense Retrieval, and LLM\nRe-ranking. First, given a failed test and its associated stack trace, the LLM\nFunctionality Extraction module generates a concise natural language\ndescription that captures the failing behavior. Next, the Semantic Dense\nRetrieval component leverages a pre-trained code-understanding encoder to embed\nboth the functionality description (natural language) and the covered methods\n(code) into a shared semantic space, enabling the retrieval of methods with\nsimilar functional behavior. Finally, the LLM Re-ranking module reorders the\nretrieved methods based on their contextual relevance. Our experiments on the\nwidely used Defects4J benchmark show that FaR-Loc outperforms state-of-the-art\nLLM-based baselines SoapFL and AutoFL, by 14.6% and 9.1% in Top-1 accuracy, by\n19.2% and 22.1% in Top-5 accuracy, respectively. It also surpasses all\nlearning-based and spectrum-based baselines across all Top-N metrics without\nrequiring re-training. Furthermore, we find that pre-trained code embedding\nmodels that incorporate code structure, such as UniXcoder, can significantly\nimprove fault localization performance by up to 49.0% in Top-1 accuracy.\nFinally, we conduct a case study to illustrate the effectiveness of FaR-Loc and\nto provide insights for its practical application.", "AI": {"tldr": "FaR-Loc\u662f\u4e00\u4e2a\u57fa\u4e8e\u68c0\u7d22\u589e\u5f3a\u751f\u6210(RAG)\u7684\u6545\u969c\u5b9a\u4f4d\u6846\u67b6\uff0c\u901a\u8fc7LLM\u529f\u80fd\u63d0\u53d6\u3001\u8bed\u4e49\u5bc6\u96c6\u68c0\u7d22\u548cLLM\u91cd\u6392\u5e8f\u4e09\u4e2a\u7ec4\u4ef6\uff0c\u663e\u8457\u63d0\u5347\u4e86\u65b9\u6cd5\u7ea7\u6545\u969c\u5b9a\u4f4d\u7684\u51c6\u786e\u6027\u3002", "motivation": "\u4f20\u7edfLLM\u5728\u590d\u6742\u7cfb\u7edf\u6545\u969c\u5b9a\u4f4d\u4e2d\u9762\u4e34\u9879\u76ee\u7279\u5b9a\u77e5\u8bc6\u7f3a\u4e4f\u548c\u5927\u9879\u76ee\u5bfc\u822a\u56f0\u96be\u7684\u95ee\u9898\uff0c\u9700\u8981\u4e00\u79cd\u80fd\u591f\u6709\u6548\u6574\u5408\u4ee3\u7801\u8bed\u4e49\u7406\u89e3\u7684\u65b9\u6cd5\u3002", "method": "FaR-Loc\u91c7\u7528\u4e09\u9636\u6bb5\u65b9\u6cd5\uff1a1) LLM\u751f\u6210\u5931\u8d25\u884c\u4e3a\u7684\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\uff1b2) \u9884\u8bad\u7ec3\u7f16\u7801\u5668\u5728\u5171\u4eab\u8bed\u4e49\u7a7a\u95f4\u4e2d\u68c0\u7d22\u529f\u80fd\u76f8\u4f3c\u7684\u65b9\u6cd5\uff1b3) LLM\u57fa\u4e8e\u4e0a\u4e0b\u6587\u76f8\u5173\u6027\u5bf9\u68c0\u7d22\u7ed3\u679c\u91cd\u6392\u5e8f\u3002", "result": "\u5728Defects4J\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cFaR-Loc\u5728Top-1\u51c6\u786e\u7387\u4e0a\u6bd4SoapFL\u548cAutoFL\u5206\u522b\u63d0\u534714.6%\u548c9.1%\uff0c\u5728Top-5\u51c6\u786e\u7387\u4e0a\u5206\u522b\u63d0\u534719.2%\u548c22.1%\uff0c\u4e14\u65e0\u9700\u91cd\u65b0\u8bad\u7ec3\u3002", "conclusion": "FaR-Loc\u901a\u8fc7RAG\u6280\u672f\u6709\u6548\u7ed3\u5408LLM\u548c\u4ee3\u7801\u8bed\u4e49\u7406\u89e3\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6545\u969c\u5b9a\u4f4d\u6027\u80fd\uff0c\u7279\u522b\u662f\u91c7\u7528\u5305\u542b\u4ee3\u7801\u7ed3\u6784\u7684\u9884\u8bad\u7ec3\u5d4c\u5165\u6a21\u578b\u53ef\u5e26\u676549.0%\u7684\u6027\u80fd\u63d0\u5347\u3002"}}
{"id": "2509.20631", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.20631", "abs": "https://arxiv.org/abs/2509.20631", "authors": ["Michael Zhang", "Yuan Tian", "Mariam Guizani"], "title": "Design, Implementation and Evaluation of a Novel Programming Language Topic Classification Workflow", "comment": null, "summary": "As software systems grow in scale and complexity, understanding the\ndistribution of programming language topics within source code becomes\nincreasingly important for guiding technical decisions, improving onboarding,\nand informing tooling and education. This paper presents the design,\nimplementation, and evaluation of a novel programming language topic\nclassification workflow. Our approach combines a multi-label Support Vector\nMachine (SVM) with a sliding window and voting strategy to enable fine-grained\nlocalization of core language concepts such as operator overloading, virtual\nfunctions, inheritance, and templates. Trained on the IBM Project CodeNet\ndataset, our model achieves an average F1 score of 0.90 across topics and 0.75\nin code-topic highlight. Our findings contribute empirical insights and a\nreusable pipeline for researchers and practitioners interested in code analysis\nand data-driven software engineering.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u4e3b\u9898\u5206\u7c7b\u5de5\u4f5c\u6d41\uff0c\u7ed3\u5408\u591a\u6807\u7b7eSVM\u548c\u6ed1\u52a8\u7a97\u53e3\u6295\u7968\u7b56\u7565\uff0c\u5728IBM CodeNet\u6570\u636e\u96c6\u4e0a\u5b9e\u73b0\u5e73\u5747F1\u5206\u65700.90\uff0c\u53ef\u7528\u4e8e\u4ee3\u7801\u5206\u6790\u548c\u6570\u636e\u9a71\u52a8\u7684\u8f6f\u4ef6\u5de5\u7a0b", "motivation": "\u968f\u7740\u8f6f\u4ef6\u7cfb\u7edf\u89c4\u6a21\u548c\u590d\u6742\u5ea6\u7684\u589e\u957f\uff0c\u7406\u89e3\u6e90\u4ee3\u7801\u4e2d\u7f16\u7a0b\u8bed\u8a00\u4e3b\u9898\u7684\u5206\u5e03\u5bf9\u4e8e\u6280\u672f\u51b3\u7b56\u3001\u6539\u8fdb\u5165\u804c\u6d41\u7a0b\u4ee5\u53ca\u6307\u5bfc\u5de5\u5177\u548c\u6559\u80b2\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981", "method": "\u8bbe\u8ba1\u4e86\u4e00\u79cd\u7ed3\u5408\u591a\u6807\u7b7e\u652f\u6301\u5411\u91cf\u673a(SVM)\u4e0e\u6ed1\u52a8\u7a97\u53e3\u548c\u6295\u7968\u7b56\u7565\u7684\u5de5\u4f5c\u6d41\uff0c\u80fd\u591f\u7cbe\u786e\u5b9a\u4f4d\u6838\u5fc3\u8bed\u8a00\u6982\u5ff5\u5982\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3001\u865a\u51fd\u6570\u3001\u7ee7\u627f\u548c\u6a21\u677f", "result": "\u5728IBM Project CodeNet\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\uff0c\u6a21\u578b\u5728\u4e3b\u9898\u5206\u7c7b\u4e0a\u8fbe\u5230\u5e73\u5747F1\u5206\u65700.90\uff0c\u5728\u4ee3\u7801-\u4e3b\u9898\u9ad8\u4eae\u4e0a\u8fbe\u52300.75", "conclusion": "\u7814\u7a76\u6210\u679c\u4e3a\u4ee3\u7801\u5206\u6790\u548c\u6570\u636e\u9a71\u52a8\u8f6f\u4ef6\u5de5\u7a0b\u63d0\u4f9b\u4e86\u5b9e\u8bc1\u89c1\u89e3\u548c\u53ef\u590d\u7528\u7684\u5206\u6790\u7ba1\u9053"}}
{"id": "2509.20780", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20780", "abs": "https://arxiv.org/abs/2509.20780", "authors": ["Daniela Grassi", "Fabio Calefato", "Darja Smite", "Nicole Novielli", "Filippo Lanubile"], "title": "Exploring Engagement in Hybrid Meetings", "comment": null, "summary": "Background. The widespread adoption of hybrid work following the COVID-19\npandemic has fundamentally transformed software development practices,\nintroducing new challenges in communication and collaboration as organizations\ntransition from traditional office-based structures to flexible working\narrangements. This shift has established a new organizational norm where even\ntraditionally office-first companies now embrace hybrid team structures. While\nremote participation in meetings has become commonplace in this new\nenvironment, it may lead to isolation, alienation, and decreased engagement\namong remote team members. Aims. This study aims to identify and characterize\nengagement patterns in hybrid meetings through objective measurements, focusing\non the differences between co-located and remote participants. Method. We\nstudied professionals from three software companies over several weeks,\nemploying a multimodal approach to measure engagement. Data were collected\nthrough self-reported questionnaires and physiological measurements using\nbiometric devices during hybrid meetings to understand engagement dynamics.\nResults. The regression analyses revealed comparable engagement levels between\nonsite and remote participants, though remote participants show lower\nengagement in long meetings regardless of participation mode. Active roles\npositively correlate with higher engagement, while larger meetings and\nafternoon sessions are associated with lower engagement. Conclusions. Our\nresults offer insights into factors associated with engagement and\ndisengagement in hybrid meetings, as well as potential meeting improvement\nrecommendations. These insights are potentially relevant not only for software\nteams but also for knowledge-intensive organizations across various sectors\nfacing similar hybrid collaboration challenges.", "AI": {"tldr": "\u6df7\u5408\u5de5\u4f5c\u6a21\u5f0f\u4e0b\uff0c\u8fdc\u7a0b\u548c\u73b0\u573a\u53c2\u4e0e\u8005\u5728\u4f1a\u8bae\u53c2\u4e0e\u5ea6\u4e0a\u8868\u73b0\u76f8\u5f53\uff0c\u4f46\u8fdc\u7a0b\u53c2\u4e0e\u8005\u5728\u957f\u4f1a\u8bae\u4e2d\u53c2\u4e0e\u5ea6\u8f83\u4f4e\u3002\u4e3b\u52a8\u89d2\u8272\u3001\u4f1a\u8bae\u89c4\u6a21\u548c\u65f6\u6bb5\u662f\u5f71\u54cd\u53c2\u4e0e\u5ea6\u7684\u5173\u952e\u56e0\u7d20\u3002", "motivation": "COVID-19\u75ab\u60c5\u540e\u6df7\u5408\u5de5\u4f5c\u6a21\u5f0f\u666e\u53ca\uff0c\u8f6f\u4ef6\u56e2\u961f\u9762\u4e34\u6c9f\u901a\u534f\u4f5c\u65b0\u6311\u6218\uff0c\u9700\u8981\u4e86\u89e3\u6df7\u5408\u4f1a\u8bae\u4e2d\u8fdc\u7a0b\u53c2\u4e0e\u8005\u7684\u53c2\u4e0e\u5ea6\u5dee\u5f02\u548c\u5f71\u54cd\u56e0\u7d20\u3002", "method": "\u91c7\u7528\u591a\u6a21\u6001\u65b9\u6cd5\uff0c\u901a\u8fc7\u81ea\u586b\u95ee\u5377\u548c\u751f\u7269\u8bc6\u522b\u8bbe\u5907\u6536\u96c6\u4e09\u5bb6\u8f6f\u4ef6\u516c\u53f8\u4e13\u4e1a\u4eba\u5458\u5728\u6df7\u5408\u4f1a\u8bae\u4e2d\u7684\u751f\u7406\u6570\u636e\u548c\u81ea\u6211\u62a5\u544a\u6570\u636e\uff0c\u8fdb\u884c\u56de\u5f52\u5206\u6790\u3002", "result": "\u73b0\u573a\u548c\u8fdc\u7a0b\u53c2\u4e0e\u8005\u53c2\u4e0e\u5ea6\u76f8\u5f53\uff0c\u4f46\u8fdc\u7a0b\u53c2\u4e0e\u8005\u5728\u957f\u4f1a\u8bae\u4e2d\u53c2\u4e0e\u5ea6\u8f83\u4f4e\uff1b\u4e3b\u52a8\u89d2\u8272\u4e0e\u9ad8\u53c2\u4e0e\u5ea6\u6b63\u76f8\u5173\uff0c\u5927\u578b\u4f1a\u8bae\u548c\u4e0b\u5348\u65f6\u6bb5\u4e0e\u4f4e\u53c2\u4e0e\u5ea6\u76f8\u5173\u3002", "conclusion": "\u7814\u7a76\u7ed3\u679c\u4e3a\u6df7\u5408\u4f1a\u8bae\u4e2d\u7684\u53c2\u4e0e\u5ea6\u5f71\u54cd\u56e0\u7d20\u63d0\u4f9b\u4e86\u89c1\u89e3\uff0c\u63d0\u51fa\u4e86\u4f1a\u8bae\u6539\u8fdb\u5efa\u8bae\uff0c\u8fd9\u4e9b\u53d1\u73b0\u5bf9\u8f6f\u4ef6\u56e2\u961f\u548c\u5176\u4ed6\u77e5\u8bc6\u5bc6\u96c6\u578b\u7ec4\u7ec7\u5177\u6709\u53c2\u8003\u4ef7\u503c\u3002"}}
{"id": "2509.20837", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2509.20837", "abs": "https://arxiv.org/abs/2509.20837", "authors": ["Srishti Gureja", "Elena Tommasone", "Jingyi He", "Sara Hooker", "Matthias Gall\u00e9", "Marzieh Fadaee"], "title": "Verification Limits Code LLM Training", "comment": null, "summary": "Large language models for code generation increasingly rely on synthetic\ndata, where both problem solutions and verification tests are generated by\nmodels. While this enables scalable data creation, it introduces a previously\nunexplored bottleneck: the verification ceiling, in which the quality and\ndiversity of training data are fundamentally constrained by the capabilities of\nsynthetic verifiers. In this work, we systematically study how verification\ndesign and strategies influence model performance. We investigate (i) what we\nverify by analyzing the impact of test complexity and quantity: richer test\nsuites improve code generation capabilities (on average +3 pass@1), while\nquantity alone yields diminishing returns, (ii) how we verify by exploring\nrelaxed pass thresholds: rigid 100% pass criteria can be overly restrictive. By\nallowing for relaxed thresholds or incorporating LLM-based soft verification,\nwe can recover valuable training data, leading to a 2-4 point improvement in\npass@1 performance. However, this benefit is contingent upon the strength and\ndiversity of the test cases used, and (iii) why verification remains necessary\nthrough controlled comparisons of formally correct versus incorrect solutions\nand human evaluation: retaining diverse correct solutions per problem yields\nconsistent generalization gains. Our results show that Verification as\ncurrently practiced is too rigid, filtering out valuable diversity. But it\ncannot be discarded, only recalibrated. By combining calibrated verification\nwith diverse, challenging problem-solution pairs, we outline a path to break\nthe verification ceiling and unlock stronger code generation models.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u53d1\u73b0\u4ee3\u7801\u751f\u6210\u4e2d\u7684\u9a8c\u8bc1\u74f6\u9888\u95ee\u9898\uff0c\u6307\u51fa\u5f53\u524d\u9a8c\u8bc1\u65b9\u6cd5\u8fc7\u4e8e\u4e25\u683c\uff0c\u8fc7\u6ee4\u4e86\u6709\u4ef7\u503c\u7684\u591a\u6837\u6027\u6570\u636e\u3002\u901a\u8fc7\u8c03\u6574\u9a8c\u8bc1\u7b56\u7565\uff08\u5982\u653e\u5bbd\u901a\u8fc7\u6807\u51c6\u3001\u4f7f\u7528LLM\u8f6f\u9a8c\u8bc1\uff09\u53ef\u4ee5\u63d0\u5347\u6a21\u578b\u6027\u80fd2-4\u4e2a\u767e\u5206\u70b9\u3002", "motivation": "\u968f\u7740\u4ee3\u7801\u751f\u6210\u6a21\u578b\u8d8a\u6765\u8d8a\u4f9d\u8d56\u5408\u6210\u6570\u636e\uff0c\u9a8c\u8bc1\u80fd\u529b\u6210\u4e3a\u8bad\u7ec3\u6570\u636e\u8d28\u91cf\u548c\u591a\u6837\u6027\u7684\u74f6\u9888\uff0c\u5373\u9a8c\u8bc1\u5929\u82b1\u677f\u95ee\u9898\u3002\u9700\u8981\u7cfb\u7edf\u7814\u7a76\u9a8c\u8bc1\u7b56\u7565\u5982\u4f55\u5f71\u54cd\u6a21\u578b\u6027\u80fd\u3002", "method": "\u7cfb\u7edf\u7814\u7a76\u9a8c\u8bc1\u8bbe\u8ba1\u548c\u7b56\u7565\uff1a(1)\u5206\u6790\u6d4b\u8bd5\u590d\u6742\u5ea6\u548c\u6570\u91cf\u7684\u5f71\u54cd\uff1b(2)\u63a2\u7d22\u653e\u5bbd\u901a\u8fc7\u9608\u503c\u7684\u65b9\u6cd5\uff1b(3)\u901a\u8fc7\u63a7\u5236\u5bf9\u6bd4\u548c\u4eba\u5de5\u8bc4\u4f30\u9a8c\u8bc1\u5fc5\u8981\u6027", "result": "\u66f4\u4e30\u5bcc\u7684\u6d4b\u8bd5\u5957\u4ef6\u5e73\u5747\u63d0\u53473\u4e2apass@1\u70b9\uff1b\u653e\u5bbd\u9a8c\u8bc1\u6807\u51c6\u53ef\u56de\u6536\u6709\u4ef7\u503c\u8bad\u7ec3\u6570\u636e\uff0c\u5e26\u67652-4\u70b9\u6027\u80fd\u63d0\u5347\uff1b\u4fdd\u7559\u591a\u6837\u5316\u6b63\u786e\u89e3\u80fd\u5e26\u6765\u4e00\u81f4\u6cdb\u5316\u6536\u76ca", "conclusion": "\u5f53\u524d\u9a8c\u8bc1\u5b9e\u8df5\u8fc7\u4e8e\u4e25\u683c\uff0c\u4f46\u4e0d\u80fd\u5b8c\u5168\u4e22\u5f03\u3002\u901a\u8fc7\u6821\u51c6\u9a8c\u8bc1\u4e0e\u591a\u6837\u5316\u95ee\u9898-\u89e3\u51b3\u65b9\u6848\u5bf9\u7684\u7ed3\u5408\uff0c\u53ef\u4ee5\u7a81\u7834\u9a8c\u8bc1\u5929\u82b1\u677f\uff0c\u5f00\u53d1\u66f4\u5f3a\u7684\u4ee3\u7801\u751f\u6210\u6a21\u578b\u3002"}}
{"id": "2509.20881", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.20881", "abs": "https://arxiv.org/abs/2509.20881", "authors": ["Yixuan Li", "Xinyi Liu", "Weidong Yang", "Ben Fei", "Shuhao Li", "Mingjie Zhou", "Lipeng Ma"], "title": "PseudoBridge: Pseudo Code as the Bridge for Better Semantic and Logic Alignment in Code Retrieval", "comment": null, "summary": "Code search aims to precisely find relevant code snippets that match natural\nlanguage queries within massive codebases, playing a vital role in software\ndevelopment. Recent advances leverage pre-trained language models (PLMs) to\nbridge the semantic gap between unstructured natural language (NL) and\nstructured programming languages (PL), yielding significant improvements over\ntraditional information retrieval and early deep learning approaches. However,\nexisting PLM-based methods still encounter key challenges, including a\nfundamental semantic gap between human intent and machine execution logic, as\nwell as limited robustness to diverse code styles. To address these issues, we\npropose PseudoBridge, a novel code retrieval framework that introduces\npseudo-code as an intermediate, semi-structured modality to better align NL\nsemantics with PL logic. Specifically, PseudoBridge consists of two stages.\nFirst, we employ an advanced large language model (LLM) to synthesize\npseudo-code, enabling explicit alignment between NL queries and pseudo-code.\nSecond, we introduce a logic-invariant code style augmentation strategy and\nemploy the LLM to generate stylistically diverse yet logically equivalent code\nimplementations with pseudo-code, then align the code snippets of different\nstyles with pseudo-code, enhancing model robustness to code style variation. We\nbuild PseudoBridge across 10 different PLMs and evaluate it on 6 mainstream\nprogramming languages. Extensive experiments demonstrate that PseudoBridge\nconsistently outperforms baselines, achieving significant gains in retrieval\naccuracy and generalization, particularly under zero-shot domain transfer\nscenarios such as Solidity and XLCoST datasets. These results demonstrate the\neffectiveness of explicit logical alignment via pseudo-code and highlight\nPseudoBridge's potential as a robust, generalizable solution for code\nretrieval.", "AI": {"tldr": "PseudoBridge\u662f\u4e00\u4e2a\u65b0\u9896\u7684\u4ee3\u7801\u68c0\u7d22\u6846\u67b6\uff0c\u901a\u8fc7\u5f15\u5165\u4f2a\u4ee3\u7801\u4f5c\u4e3a\u4e2d\u95f4\u6a21\u6001\u6765\u66f4\u597d\u5730\u5bf9\u9f50\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u548c\u7f16\u7a0b\u8bed\u8a00\u903b\u8f91\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4ee3\u7801\u641c\u7d22\u7684\u51c6\u786e\u6027\u548c\u6cdb\u5316\u80fd\u529b\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u7684\u4ee3\u7801\u641c\u7d22\u65b9\u6cd5\u9762\u4e34\u4e24\u4e2a\u5173\u952e\u6311\u6218\uff1a\u4eba\u7c7b\u610f\u56fe\u4e0e\u673a\u5668\u6267\u884c\u903b\u8f91\u4e4b\u95f4\u7684\u8bed\u4e49\u9e3f\u6c9f\uff0c\u4ee5\u53ca\u5bf9\u4e0d\u540c\u4ee3\u7801\u98ce\u683c\u7684\u6709\u9650\u9c81\u68d2\u6027\u3002", "method": "PseudoBridge\u91c7\u7528\u4e24\u9636\u6bb5\u65b9\u6cd5\uff1a1) \u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u5408\u6210\u4f2a\u4ee3\u7801\uff0c\u5b9e\u73b0\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u4e0e\u4f2a\u4ee3\u7801\u7684\u663e\u5f0f\u5bf9\u9f50\uff1b2) \u5f15\u5165\u903b\u8f91\u4e0d\u53d8\u4ee3\u7801\u98ce\u683c\u589e\u5f3a\u7b56\u7565\uff0c\u751f\u6210\u98ce\u683c\u591a\u6837\u4f46\u903b\u8f91\u7b49\u4ef7\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u589e\u5f3a\u6a21\u578b\u5bf9\u4ee3\u7801\u98ce\u683c\u53d8\u5316\u7684\u9c81\u68d2\u6027\u3002", "result": "\u572810\u4e2a\u4e0d\u540c\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u548c6\u79cd\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u4e0a\u7684\u5e7f\u6cdb\u5b9e\u9a8c\u8868\u660e\uff0cPseudoBridge\u59cb\u7ec8\u4f18\u4e8e\u57fa\u7ebf\u65b9\u6cd5\uff0c\u5728\u68c0\u7d22\u51c6\u786e\u6027\u548c\u6cdb\u5316\u80fd\u529b\u65b9\u9762\u53d6\u5f97\u663e\u8457\u63d0\u5347\uff0c\u7279\u522b\u662f\u5728\u96f6\u6837\u672c\u9886\u57df\u8fc1\u79fb\u573a\u666f\u4e0b\u8868\u73b0\u7a81\u51fa\u3002", "conclusion": "\u901a\u8fc7\u4f2a\u4ee3\u7801\u5b9e\u73b0\u663e\u5f0f\u903b\u8f91\u5bf9\u9f50\u662f\u6709\u6548\u7684\uff0cPseudoBridge\u5c55\u793a\u4e86\u4f5c\u4e3a\u9c81\u68d2\u3001\u53ef\u6cdb\u5316\u4ee3\u7801\u68c0\u7d22\u89e3\u51b3\u65b9\u6848\u7684\u6f5c\u529b\u3002"}}
{"id": "2509.21067", "categories": ["cs.SE", "cs.CY"], "pdf": "https://arxiv.org/pdf/2509.21067", "abs": "https://arxiv.org/abs/2509.21067", "authors": ["Oka Kurniawan", "Erick Chandra", "Christopher M. Poskitt", "Yannic Noller", "Kenny Tsu Wei Choo", "Cyrille Jegourel"], "title": "Designing for Novice Debuggers: A Pilot Study on an AI-Assisted Debugging Tool", "comment": "Accepted by the 25th Koli Calling International Conference on\n  Computing Education Research (Koli Calling 2025)", "summary": "Debugging is a fundamental skill that novice programmers must develop.\nNumerous tools have been created to assist novice programmers in this process.\nRecently, large language models (LLMs) have been integrated with automated\nprogram repair techniques to generate fixes for students' buggy code. However,\nmany of these tools foster an over-reliance on AI and do not actively engage\nstudents in the debugging process. In this work, we aim to design an intuitive\ndebugging assistant, CodeHinter, that combines traditional debugging tools with\nLLM-based techniques to help novice debuggers fix semantic errors while\npromoting active engagement in the debugging process. We present findings from\nour second design iteration, which we tested with a group of undergraduate\nstudents. Our results indicate that the students found the tool highly\neffective in resolving semantic errors and significantly easier to use than the\nfirst version. Consistent with our previous study, error localization was the\nmost valuable feature. Finally, we conclude that any AI-assisted debugging tool\nshould be personalized based on user profiles to optimize their interactions\nwith students.", "AI": {"tldr": "CodeHinter\u662f\u4e00\u4e2a\u7ed3\u5408\u4f20\u7edf\u8c03\u8bd5\u5de5\u5177\u548cLLM\u6280\u672f\u7684\u8c03\u8bd5\u52a9\u624b\uff0c\u65e8\u5728\u5e2e\u52a9\u7f16\u7a0b\u65b0\u624b\u4fee\u590d\u8bed\u4e49\u9519\u8bef\uff0c\u540c\u65f6\u4fc3\u8fdb\u4ed6\u4eec\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u4e3b\u52a8\u53c2\u4e0e\u3002", "motivation": "\u73b0\u6709\u7684AI\u8f85\u52a9\u8c03\u8bd5\u5de5\u5177\u5bb9\u6613\u5bfc\u81f4\u5b66\u751f\u5bf9AI\u8fc7\u5ea6\u4f9d\u8d56\uff0c\u7f3a\u4e4f\u4e3b\u52a8\u53c2\u4e0e\u8c03\u8bd5\u8fc7\u7a0b\uff0c\u9700\u8981\u8bbe\u8ba1\u65e2\u80fd\u6709\u6548\u4fee\u590d\u9519\u8bef\u53c8\u80fd\u4fc3\u8fdb\u5b66\u751f\u53c2\u4e0e\u7684\u5de5\u5177\u3002", "method": "\u7ed3\u5408\u4f20\u7edf\u8c03\u8bd5\u5de5\u5177\u548c\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u6280\u672f\uff0c\u5f00\u53d1CodeHinter\u8c03\u8bd5\u52a9\u624b\uff0c\u5e76\u901a\u8fc7\u672c\u79d1\u751f\u7fa4\u4f53\u8fdb\u884c\u6d4b\u8bd5\u548c\u8fed\u4ee3\u8bbe\u8ba1\u3002", "result": "\u5b66\u751f\u8ba4\u4e3a\u8be5\u5de5\u5177\u5728\u89e3\u51b3\u8bed\u4e49\u9519\u8bef\u65b9\u9762\u975e\u5e38\u6709\u6548\uff0c\u4e14\u6bd4\u7b2c\u4e00\u7248\u663e\u8457\u66f4\u5bb9\u6613\u4f7f\u7528\uff1b\u9519\u8bef\u5b9a\u4f4d\u662f\u6700\u6709\u4ef7\u503c\u7684\u529f\u80fd\u3002", "conclusion": "AI\u8f85\u52a9\u8c03\u8bd5\u5de5\u5177\u5e94\u8be5\u57fa\u4e8e\u7528\u6237\u753b\u50cf\u8fdb\u884c\u4e2a\u6027\u5316\u5b9a\u5236\uff0c\u4ee5\u4f18\u5316\u4e0e\u5b66\u751f\u7684\u4ea4\u4e92\u6548\u679c\u3002"}}
{"id": "2509.21068", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.21068", "abs": "https://arxiv.org/abs/2509.21068", "authors": ["Nek Dil Khan", "Javed Ali Khan", "Mobashir Husain", "Muhammad Sohail Khan", "Arif Ali Khan", "Muhammad Azeem Akbar", "Shahid Hussain"], "title": "An Improved Quantum Software Challenges Classification Approach using Transfer Learning and Explainable AI", "comment": null, "summary": "Quantum Software Engineering (QSE) is a research area practiced by tech\nfirms. Quantum developers face challenges in optimizing quantum computing and\nQSE concepts. They use Stack Overflow (SO) to discuss challenges and label\nposts with specialized quantum tags, which often refer to technical aspects\nrather than developer posts. Categorizing questions based on quantum concepts\ncan help identify frequent QSE challenges. We conducted studies to classify\nquestions into various challenges. We extracted 2829 questions from Q&A\nplatforms using quantum-related tags. Posts were analyzed to identify frequent\nchallenges and develop a novel grounded theory. Challenges include Tooling,\nTheoretical, Learning, Conceptual, Errors, and API Usage. Through content\nanalysis and grounded theory, discussions were annotated with common challenges\nto develop a ground truth dataset. ChatGPT validated human annotations and\nresolved disagreements. Fine-tuned transformer algorithms, including BERT,\nDistilBERT, and RoBERTa, classified discussions into common challenges. We\nachieved an average accuracy of 95% with BERT DistilBERT, compared to\nfine-tuned Deep and Machine Learning (D&ML) classifiers, including Feedforward\nNeural Networks (FNN), Convolutional Neural Networks (CNN), and Long Short-Term\nMemory networks (LSTM), which achieved accuracies of 89%, 86%, and 84%,\nrespectively. The Transformer-based approach outperforms the D&ML-based\napproach with a 6\\% increase in accuracy by processing actual discussions,\ni.e., without data augmentation. We applied SHAP (SHapley Additive\nexPlanations) for model interpretability, revealing how linguistic features\ndrive predictions and enhancing transparency in classification. These findings\ncan help quantum vendors and forums better organize discussions for improved\naccess and readability. However,empirical evaluation studies with actual\ndevelopers and vendors are needed.", "AI": {"tldr": "\u8be5\u7814\u7a76\u901a\u8fc7\u5206\u6790Stack Overflow\u4e0a\u7684\u91cf\u5b50\u8ba1\u7b97\u76f8\u5173\u8ba8\u8bba\uff0c\u8bc6\u522b\u91cf\u5b50\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u5e38\u89c1\u6311\u6218\uff0c\u5e76\u4f7f\u7528Transformer\u6a21\u578b\u5b9e\u73b095%\u7684\u5206\u7c7b\u51c6\u786e\u7387\uff0c\u4e3a\u91cf\u5b50\u5f00\u53d1\u8005\u793e\u533a\u63d0\u4f9b\u66f4\u597d\u7684\u8ba8\u8bba\u7ec4\u7ec7\u65b9\u5f0f\u3002", "motivation": "\u91cf\u5b50\u5f00\u53d1\u8005\u9762\u4e34\u4f18\u5316\u91cf\u5b50\u8ba1\u7b97\u548c\u91cf\u5b50\u8f6f\u4ef6\u5de5\u7a0b\u6982\u5ff5\u7684\u6311\u6218\uff0c\u4ed6\u4eec\u5728Stack Overflow\u7b49\u5e73\u53f0\u4e0a\u8ba8\u8bba\u95ee\u9898\u65f6\u4f7f\u7528\u7684\u91cf\u5b50\u6807\u7b7e\u5f80\u5f80\u4fa7\u91cd\u4e8e\u6280\u672f\u65b9\u9762\u800c\u975e\u5f00\u53d1\u8005\u5b9e\u9645\u95ee\u9898\u3002\u9700\u8981\u7cfb\u7edf\u5206\u7c7b\u8fd9\u4e9b\u95ee\u9898\u6765\u8bc6\u522b\u9891\u7e41\u51fa\u73b0\u7684QSE\u6311\u6218\u3002", "method": "\u4ece\u95ee\u7b54\u5e73\u53f0\u63d0\u53d62829\u4e2a\u91cf\u5b50\u76f8\u5173\u6807\u7b7e\u7684\u95ee\u9898\uff0c\u901a\u8fc7\u5185\u5bb9\u5206\u6790\u548c\u624e\u6839\u7406\u8bba\u8bc6\u522b\u5e38\u89c1\u6311\u6218\u7c7b\u522b\uff08\u5de5\u5177\u3001\u7406\u8bba\u3001\u5b66\u4e60\u3001\u6982\u5ff5\u3001\u9519\u8bef\u3001API\u4f7f\u7528\uff09\uff0c\u4f7f\u7528ChatGPT\u9a8c\u8bc1\u4eba\u5de5\u6807\u6ce8\u5e76\u89e3\u51b3\u5206\u6b67\uff0c\u6700\u540e\u4f7f\u7528BERT\u3001DistilBERT\u548cRoBERTa\u7b49Transformer\u6a21\u578b\u8fdb\u884c\u5206\u7c7b\u3002", "result": "Transformer\u6a21\u578b\u5e73\u5747\u51c6\u786e\u7387\u8fbe\u523095%\uff0c\u4f18\u4e8e\u4f20\u7edf\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff08FNN 89%\u3001CNN 86%\u3001LSTM 84%\uff09\uff0c\u51c6\u786e\u7387\u63d0\u53476%\u3002\u4f7f\u7528SHAP\u8fdb\u884c\u6a21\u578b\u53ef\u89e3\u91ca\u6027\u5206\u6790\uff0c\u63ed\u793a\u4e86\u8bed\u8a00\u7279\u5f81\u5982\u4f55\u9a71\u52a8\u9884\u6d4b\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u6709\u6548\u5e2e\u52a9\u91cf\u5b50\u4f9b\u5e94\u5546\u548c\u8bba\u575b\u66f4\u597d\u5730\u7ec4\u7ec7\u8ba8\u8bba\u5185\u5bb9\uff0c\u63d0\u9ad8\u53ef\u8bbf\u95ee\u6027\u548c\u53ef\u8bfb\u6027\u3002\u4f46\u8fd8\u9700\u8981\u4e0e\u5b9e\u9645\u5f00\u53d1\u8005\u548c\u4f9b\u5e94\u5546\u8fdb\u884c\u5b9e\u8bc1\u8bc4\u4f30\u7814\u7a76\u3002"}}
{"id": "2509.21170", "categories": ["cs.SE", "cs.AI", "D.2.3; I.2.7"], "pdf": "https://arxiv.org/pdf/2509.21170", "abs": "https://arxiv.org/abs/2509.21170", "authors": ["Yongda Yu", "Guohao Shi", "Xianwei Wu", "Haochuan He", "XueMing Gu", "Qianqian Zhao", "Kui Liu", "Qiushi Wang", "Zhao Tian", "Haifeng Shen", "Guoping Rong"], "title": "Fine-Tuning LLMs to Analyze Multiple Dimensions of Code Review: A Maximum Entropy Regulated Long Chain-of-Thought Approach", "comment": "22 pages", "summary": "Large Language Models (LLMs) have shown great potential in supporting\nautomated code review due to their impressive capabilities in context\nunderstanding and reasoning. However, these capabilities are still limited\ncompared to human-level cognition because they are heavily influenced by the\ntraining data. Recent research has demonstrated significantly improved\nperformance through fine-tuning LLMs with code review data. However, compared\nto human reviewers who often simultaneously analyze multiple dimensions of code\nreview to better identify issues, the full potential of these methods is\nhampered by the limited or vague information used to fine-tune the models. This\npaper contributes MelcotCR, a chain-of-thought (COT) fine-tuning approach that\ntrains LLMs with an impressive reasoning ability to analyze multiple dimensions\nof code review by harnessing long COT techniques to provide rich structured\ninformation. To address context loss and reasoning logic loss issues that\nfrequently occur when LLMs process long COT prompts, we propose a solution that\ncombines the Maximum Entropy (ME) modeling principle with pre-defined reasoning\npathways in MelcotCR to enable more effective utilization of in-context\nknowledge within long COT prompts while strengthening the logical tightness of\nthe reasoning process. Empirical evaluations on our curated MelcotCR dataset\nand the public CodeReviewer dataset reveal that a low-parameter base model,\nsuch as 14B Qwen2.5, fine-tuned with MelcotCR can surpass state-of-the-art\nmethods in terms of the accuracy of detecting and describing code issues, with\nits performance remarkably on par with that of the 671B DeepSeek-R1 model.", "AI": {"tldr": "MelcotCR\u662f\u4e00\u79cd\u57fa\u4e8e\u601d\u7ef4\u94fe\u7684\u5fae\u8c03\u65b9\u6cd5\uff0c\u901a\u8fc7\u957f\u94fe\u601d\u7ef4\u6280\u672f\u4e3a\u4ee3\u7801\u5ba1\u67e5\u63d0\u4f9b\u4e30\u5bcc\u7684\u7ed3\u6784\u5316\u4fe1\u606f\uff0c\u4f7f\u5c0f\u53c2\u6570\u6a21\u578b\u5728\u4ee3\u7801\u95ee\u9898\u68c0\u6d4b\u548c\u63cf\u8ff0\u51c6\u786e\u6027\u4e0a\u8fbe\u5230\u751a\u81f3\u8d85\u8d8a\u5927\u6a21\u578b\u6027\u80fd\u3002", "motivation": "\u73b0\u6709LLM\u5728\u4ee3\u7801\u5ba1\u67e5\u4e2d\u53d7\u9650\u4e8e\u8bad\u7ec3\u6570\u636e\uff0c\u65e0\u6cd5\u50cf\u4eba\u7c7b\u8bc4\u5ba1\u5458\u90a3\u6837\u540c\u65f6\u5206\u6790\u591a\u4e2a\u7ef4\u5ea6\u3002\u867d\u7136\u901a\u8fc7\u4ee3\u7801\u5ba1\u67e5\u6570\u636e\u5fae\u8c03\u80fd\u63d0\u5347\u6027\u80fd\uff0c\u4f46\u7531\u4e8e\u4fe1\u606f\u6709\u9650\u6216\u6a21\u7cca\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7684\u6f5c\u529b\u672a\u80fd\u5145\u5206\u53d1\u6325\u3002", "method": "\u63d0\u51faMelcotCR\u65b9\u6cd5\uff0c\u7ed3\u5408\u6700\u5927\u71b5\u5efa\u6a21\u539f\u5219\u548c\u9884\u5b9a\u4e49\u63a8\u7406\u8def\u5f84\uff0c\u5229\u7528\u957f\u601d\u7ef4\u94fe\u6280\u672f\u63d0\u4f9b\u7ed3\u6784\u5316\u4fe1\u606f\uff0c\u89e3\u51b3LLM\u5904\u7406\u957f\u63d0\u793a\u65f6\u7684\u4e0a\u4e0b\u6587\u4e22\u5931\u548c\u63a8\u7406\u903b\u8f91\u4e22\u5931\u95ee\u9898\u3002", "result": "\u5728MelcotCR\u6570\u636e\u96c6\u548cCodeReviewer\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c14B\u53c2\u6570\u7684Qwen2.5\u6a21\u578b\u7ecf\u8fc7MelcotCR\u5fae\u8c03\u540e\uff0c\u5728\u4ee3\u7801\u95ee\u9898\u68c0\u6d4b\u548c\u63cf\u8ff0\u51c6\u786e\u6027\u4e0a\u8d85\u8d8a\u4e86\u73b0\u6709\u6700\u4f18\u65b9\u6cd5\uff0c\u6027\u80fd\u4e0e671B\u7684DeepSeek-R1\u6a21\u578b\u76f8\u5f53\u3002", "conclusion": "MelcotCR\u901a\u8fc7\u601d\u7ef4\u94fe\u5fae\u8c03\u548c\u7ed3\u6784\u5316\u63a8\u7406\u8def\u5f84\uff0c\u6709\u6548\u63d0\u5347\u4e86LLM\u5728\u4ee3\u7801\u5ba1\u67e5\u4efb\u52a1\u4e2d\u7684\u591a\u7ef4\u5ea6\u5206\u6790\u80fd\u529b\uff0c\u4f7f\u5c0f\u6a21\u578b\u80fd\u591f\u8fbe\u5230\u5927\u6a21\u578b\u7684\u6027\u80fd\u6c34\u5e73\u3002"}}
{"id": "2509.21292", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.21292", "abs": "https://arxiv.org/abs/2509.21292", "authors": ["Ronivaldo Ferreira", "Guilherme da Silva", "Carla Rocha", "Gustavo Pinto"], "title": "Semantic Clustering of Civic Proposals: A Case Study on Brazil's National Participation Platform", "comment": "12 pages, in Portuguese language", "summary": "Promoting participation on digital platforms such as Brasil Participativo has\nemerged as a top priority for governments worldwide. However, due to the sheer\nvolume of contributions, much of this engagement goes underutilized, as\norganizing it presents significant challenges: (1) manual classification is\nunfeasible at scale; (2) expert involvement is required; and (3) alignment with\nofficial taxonomies is necessary. In this paper, we introduce an approach that\ncombines BERTopic with seed words and automatic validation by large language\nmodels. Initial results indicate that the generated topics are coherent and\ninstitutionally aligned, with minimal human effort. This methodology enables\ngovernments to transform large volumes of citizen input into actionable data\nfor public policy.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408BERTopic\u3001\u79cd\u5b50\u8bcd\u548cLLM\u81ea\u52a8\u9a8c\u8bc1\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u5927\u89c4\u6a21\u5904\u7406\u516c\u6c11\u53c2\u4e0e\u5e73\u53f0\u4e0a\u7684\u8d21\u732e\u5185\u5bb9\uff0c\u5b9e\u73b0\u81ea\u52a8\u5206\u7c7b\u5e76\u4e0e\u5b98\u65b9\u5206\u7c7b\u6cd5\u5bf9\u9f50\u3002", "motivation": "\u6570\u5b57\u5e73\u53f0\u4e0a\u516c\u6c11\u53c2\u4e0e\u91cf\u5927\u4f46\u96be\u4ee5\u6709\u6548\u5229\u7528\uff0c\u624b\u52a8\u5206\u7c7b\u4e0d\u53ef\u884c\uff0c\u9700\u8981\u4e13\u5bb6\u53c2\u4e0e\u4e14\u5fc5\u987b\u4e0e\u5b98\u65b9\u5206\u7c7b\u6cd5\u5bf9\u9f50\u3002", "method": "\u4f7f\u7528BERTopic\u4e3b\u9898\u5efa\u6a21\u7ed3\u5408\u79cd\u5b50\u8bcd\u5f15\u5bfc\uff0c\u5e76\u901a\u8fc7\u5927\u578b\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u81ea\u52a8\u9a8c\u8bc1\u3002", "result": "\u751f\u6210\u7684\u4e3b\u9898\u5177\u6709\u8fde\u8d2f\u6027\u4e14\u4e0e\u673a\u6784\u5206\u7c7b\u6cd5\u5bf9\u9f50\uff0c\u6240\u9700\u4eba\u5de5\u5e72\u9884\u6781\u5c11\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u5c06\u5927\u91cf\u516c\u6c11\u8f93\u5165\u8f6c\u5316\u4e3a\u53ef\u7528\u4e8e\u516c\u5171\u653f\u7b56\u7684\u53ef\u64cd\u4f5c\u6570\u636e\u3002"}}
