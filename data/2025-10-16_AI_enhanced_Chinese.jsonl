{"id": "2510.12837", "categories": ["cs.MA", "cs.AI", "cs.CY", "cs.NE"], "pdf": "https://arxiv.org/pdf/2510.12837", "abs": "https://arxiv.org/abs/2510.12837", "authors": ["Anil Yaman", "Shen Tian", "Bj\u00f6rn Lindstr\u00f6m"], "title": "Semantic knowledge guides innovation and drives cultural evolution", "comment": null, "summary": "Cumulative cultural evolution enables human societies to generate\nincreasingly complex knowledge and technology over generations. While social\nlearning transmits innovations between individuals and generations, the\ncognitive processes that generate these innovations remain poorly understood.\nHere, we demonstrate that semantic knowledge-structured associations between\nconcepts and their functions-provides cognitive scaffolding for cumulative\ninnovation by guiding exploration toward plausible and meaningful actions. We\ntested this hypothesis using a cultural evolutionary agent-based model and a\nlarge-scale behavioural experiment (N = 1,243), in which individuals performed\na task requiring the combination of items into novel innovations. Across both\napproaches, semantic knowledge and social learning interact synergistically to\nenhance innovation. Behaviorally, participants without access to semantic\nknowledge performed no better than chance, even when social learning was\navailable, and relied on shallow exploration strategies. These findings suggest\nthat semantic knowledge is a key cognitive process enabling human cumulative\nculture.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.12872", "categories": ["cs.MA", "cs.AI", "stat.ML"], "pdf": "https://arxiv.org/pdf/2510.12872", "abs": "https://arxiv.org/abs/2510.12872", "authors": ["Hancheng Ye", "Zhengqi Gao", "Mingyuan Ma", "Qinsi Wang", "Yuzhe Fu", "Ming-Yu Chung", "Yueqian Lin", "Zhijian Liu", "Jianyi Zhang", "Danyang Zhuo", "Yiran Chen"], "title": "KVCOMM: Online Cross-context KV-cache Communication for Efficient LLM-based Multi-agent Systems", "comment": "Accepted for publication in NeurIPS2025. Code is available at\n  \\url{https://github.com/HankYe/KVCOMM}", "summary": "Multi-agent large language model (LLM) systems are increasingly adopted for\ncomplex language processing tasks that require communication and coordination\namong agents. However, these systems often suffer substantial overhead from\nrepeated reprocessing of overlapping contexts across agents. In typical\npipelines, once an agent receives a message from its predecessor, the full\ncontext-including prior turns-must be reprocessed from scratch, leading to\ninefficient processing. While key-value (KV) caching is an effective solution\nfor avoiding redundant computation in single-agent settings where prefixes\nremain unchanged, it cannot be directly reused in multi-agent scenarios due to\ndiverging prefixes introduced by agent-specific context extensions. We identify\nthat the core challenge lies in the offset variance of KV-caches across agents.\nTo address this, we propose KVCOMM, a training-free framework that enables\nefficient prefilling in multi-agent inference by reusing KV-caches and aligning\ncache offsets of overlapping contexts under diverse prefix contexts. KVCOMM\nestimates and adjusts KV-caches for shared content by referencing a pool of\ncached examples-termed anchors-that store observed cache deviations under\nvarying prefixes. The anchor pool is maintained and updated online, allowing\ndynamic adaptation to distinct user requests and context structures. KVCOMM\nachieves over 70% reuse rate across diverse multi-agent workloads, including\nretrieval-augmented generation, math reasoning, and collaborative coding tasks,\nall without quality degradation. Particularly, when each fully-connected agent\nreceives 1K input tokens with 512 prefix tokens and 512 output tokens under a\nfive-agent setting, KVCOMM achieves up to 7.8x speedup compared to the standard\nprefill pipeline, reducing TTFT from ~430 ms to ~55 ms.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13081", "categories": ["cs.MA", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.13081", "abs": "https://arxiv.org/abs/2510.13081", "authors": ["J. Gregory Pauloski", "Kyle Chard", "Ian T. Foster"], "title": "Agentic Discovery: Closing the Loop with Cooperative Agents", "comment": "Published in IEEE Computer Volume 58 Issue 10", "summary": "As data-driven methods, artificial intelligence (AI), and automated workflows\naccelerate scientific tasks, we see the rate of discovery increasingly limited\nby human decision-making tasks such as setting objectives, generating\nhypotheses, and designing experiments. We postulate that cooperative agents are\nneeded to augment the role of humans and enable autonomous discovery. Realizing\nsuch agents will require progress in both AI and infrastructure.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13227", "categories": ["cs.MA", "cs.ET", "cs.LG", "I.2"], "pdf": "https://arxiv.org/pdf/2510.13227", "abs": "https://arxiv.org/abs/2510.13227", "authors": ["Divyanshu Singh", "Ashman Mehra", "Snehanshu Saha", "Santonu Sarkar"], "title": "Altruistic Ride Sharing: A Community-Driven Approach to Short-Distance Mobility", "comment": "Submitted to IEEE Transactions on Intelligent Transportation Systems", "summary": "Urban mobility faces persistent challenges of congestion and fuel\nconsumption, specifically when people choose a private, point-to-point commute\noption. Profit-driven ride-sharing platforms prioritize revenue over fairness\nand sustainability. This paper introduces Altruistic Ride-Sharing (ARS), a\ndecentralized, peer-to-peer mobility framework where participants alternate\nbetween driver and rider roles based on altruism points rather than monetary\nincentives. The system integrates multi-agent reinforcement learning (MADDPG)\nfor dynamic ride-matching, game-theoretic equilibrium guarantees for fairness,\nand a population model to sustain long-term balance. Using real-world New York\nCity taxi data, we demonstrate that ARS reduces travel distance and emissions,\nincreases vehicle utilization, and promotes equitable participation compared to\nboth no-sharing and optimization-based baselines. These results establish ARS\nas a scalable, community-driven alternative to conventional ride-sharing,\naligning individual behavior with collective urban sustainability goals.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13147", "categories": ["cs.AR", "cs.LG", "cs.PF", "C.1.4"], "pdf": "https://arxiv.org/pdf/2510.13147", "abs": "https://arxiv.org/abs/2510.13147", "authors": ["Faraz Tahmasebi", "Michael Pelluer", "Hyoukjun Kwon"], "title": "D-com: Accelerating Iterative Processing to Enable Low-rank Decomposition of Activations", "comment": "12 pages, 13 figures", "summary": "The computation and memory costs of large language models kept increasing\nover last decade, which reached over the scale of 1T parameters. To address the\nchallenges from the large scale models, model compression techniques such as\nlow-rank decomposition have been explored. Previous model decomposition works\nhave focused on weight decomposition to avoid costly runtime decomposition,\nwhose latency often significantly exceeds the benefits from decomposition\n(e.g., 38% more end-to-end latency when running Llama2-7b on A100 with 4K\nsequence length with activation decomposition compared to no decomposition). In\nthis work, we debunk such observations and report that the input decomposition\ncan be significantly beneficial with a proper choice of decomposition algorithm\nand hardware support. We adopt progressive decomposition algorithm, Lanczos\nalgorithm, and design a co-accelerator architecture for the decomposition\nalgorithm. To address the memory- boundness of the decomposition operation, we\nintroduce a novel compute replication methodology that moves the op- eration\ntoward compute-bound region, which enables 6.2x speedup in our evaluation. We\nalso develop an output shape- preserving computation scheme that eliminates\ndecomposi- tion costs in consecutive layers. To compensate model quality loss\nfrom compression, we introduce a multi-track decom- position approach that\nseparately handles outlier channels for high accuracy and low perplexity with\nminimal compu- tational costs. Combined together, our accelerator, D-com,\nprovides 22% end-to-end latency improvements compared to A100 GPU at the cost\nof small model quality degradation (e.g., 3% on AI2 Reasoning Challenge task).", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.12889", "categories": ["cs.DC", "C.2.4"], "pdf": "https://arxiv.org/pdf/2510.12889", "abs": "https://arxiv.org/abs/2510.12889", "authors": ["Wei Da", "Evangelia Kalyvianaki"], "title": "Dodoor: Efficient Randomized Decentralized Scheduling with Load Caching for Heterogeneous Tasks and Clusters", "comment": "single column,20 pages and 8 figures", "summary": "This paper introduces Dodoor, an efficient randomized decentralized scheduler\ndesigned for task scheduling in modern data centers. Dodoor leverages advanced\nresearch on the weighted balls-into-bins model with b-batched setting. Unlike\nother decentralized schedulers that rely on real-time probing of remote\nservers, Dodoor makes scheduling decisions based on cached server information,\nwhich is updated in batches, to reduce communication overheads. To schedule\ntasks with dynamic, multidimensional resource requirements in heterogeneous\ncluster, Dodoor uses a novel load score to measure servers' loads for each\nscheduled task. This score captures the anti-affinity between servers and tasks\nin contrast to the commonly used heuristic of counting pending tasks to balance\nload. On a 101-node heterogeneous cluster, Dodoor is evaluated using two\nworkloads: (i) simulated Azure virtual machines placements and (ii) real\nserverless Python functions executions in Docker. The evaluation shows that\nDodoor reduces scheduling messages by 55--66% on both workloads. Dodoor can\nalso increase throughput by up to 33.2% and 21.5%, reduce mean makespan latency\nby 12.1% and 7.2%, and improve tail latency by 21.9% and 24.6% across the two\nworkloads.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.12803", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.12803", "abs": "https://arxiv.org/abs/2510.12803", "authors": ["Shang Zhou", "Zihan Zheng", "Kaiyuan Liu", "Zeyu Shen", "Zerui Cheng", "Zexing Chen", "Hansen He", "Jianzhu Yao", "Huanzhi Mao", "Qiuyang Mang", "Tianfu Fu", "Beichen Li", "Dongruixuan Li", "Wenhao Chai", "Zhuang Liu", "Aleksandra Korolova", "Peter Henderson", "Natasha Jaques", "Pramod Viswanath", "Saining Xie", "Jingbo Shang"], "title": "AutoCode: LLMs as Problem Setters for Competitive Programming", "comment": "Project page: https://livecodebenchpro.com/projects/autocode/overview", "summary": "Writing competitive programming problems is exacting. Authors must: set\nconstraints, input distributions, and edge cases that rule out shortcuts;\ntarget specific algorithms (e.g., max-flow, dynamic programming, data\nstructures); and calibrate complexity beyond the reach of most competitors. We\nargue that this makes for an ideal test of general large language model\ncapabilities and study whether they can do this reliably. We introduce\nAutoCode, which uses multiple rounds of validation to yield competition-grade\nproblem statements and test cases. On held-out problems, AutoCode test suites\napproach 99% consistency with official judgments, a significant improvement\nover current state-of-the-art methods like HardTests, which achieve less than\n81%. Furthermore, starting with a random seed problem, AutoCode can create\nnovel variants with reference and brute-force solutions. By cross-verifying\nthese generated solutions against test cases, we can further filter out\nmalformed problems. Our system ensures high correctness, as verified by human\nexperts. AutoCode successfully produces novel problems judged by\nGrandmaster-level (top 0.3%) competitive programmers to be of contest quality.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.12896", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.12896", "abs": "https://arxiv.org/abs/2510.12896", "authors": ["Ekram Hossain", "Angelo Vera-Rivera"], "title": "Toward Hyper-Dimensional Connectivity in Beyond 6G: A Conceptual Framework", "comment": null, "summary": "Cellular wireless networks enable mobile broadband connectivity for\nInternet-based applications through their radio access and core network\ninfrastructure. While Fifth-Generation (5G) cellular systems are currently\nbeing deployed, ongoing research on cellular technologies primarily focuses on\nSixth-Generation (6G) networks to set the stage for developing standards for\nthese systems. Therefore, the time has come to articulate the visions for\nbeyond 6G (B6G) systems. In this article, we present a visionary framework\ntoward hyper-dimensional connectivity in B6G that enables wireless access to\nhyper-immersive Internet technologies. Our contributions include a conceptual\nframework for B6G cellular systems with jointly integrated communication,\ncognition, computing, and cyber-physical capabilities as core connectivity\ndimensions, a set of technical definitions outlining potential use cases and\nsystem-level requirements, a mapping of prospective technology enablers, and a\nforward-looking research agenda for B6G systems. The conceptual discussions in\nthis article would be helpful for identifying innovation drivers, shaping\nlong-term technical goals, and defining research agendas for the future of\nmobile broadband technologies.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13343", "categories": ["cs.MA", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13343", "abs": "https://arxiv.org/abs/2510.13343", "authors": ["Shota Takayama", "Katsuhide Fujita"], "title": "AOAD-MAT: Transformer-based multi-agent deep reinforcement learning model considering agents' order of action decisions", "comment": "This manuscript is an extended version of the work accepted as a\n  short paper at the 26th International Conference on Principles and Practice\n  of Multi-Agent Systems (PRIMA 2025). The Version of Record of this\n  contribution is published in Springer's Lecture Notes in Artificial\n  Intelligence series (LNCS/LNAI)", "summary": "Multi-agent reinforcement learning focuses on training the behaviors of\nmultiple learning agents that coexist in a shared environment. Recently, MARL\nmodels, such as the Multi-Agent Transformer (MAT) and ACtion dEpendent deep\nQ-learning (ACE), have significantly improved performance by leveraging\nsequential decision-making processes. Although these models can enhance\nperformance, they do not explicitly consider the importance of the order in\nwhich agents make decisions. In this paper, we propose an Agent Order of Action\nDecisions-MAT (AOAD-MAT), a novel MAT model that considers the order in which\nagents make decisions. The proposed model explicitly incorporates the sequence\nof action decisions into the learning process, allowing the model to learn and\npredict the optimal order of agent actions. The AOAD-MAT model leverages a\nTransformer-based actor-critic architecture that dynamically adjusts the\nsequence of agent actions. To achieve this, we introduce a novel MARL\narchitecture that cooperates with a subtask focused on predicting the next\nagent to act, integrated into a Proximal Policy Optimization based loss\nfunction to synergistically maximize the advantage of the sequential\ndecision-making. The proposed method was validated through extensive\nexperiments on the StarCraft Multi-Agent Challenge and Multi-Agent MuJoCo\nbenchmarks. The experimental results show that the proposed AOAD-MAT model\noutperforms existing MAT and other baseline models, demonstrating the\neffectiveness of adjusting the AOAD order in MARL.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13362", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.13362", "abs": "https://arxiv.org/abs/2510.13362", "authors": ["Angelos Athanasiadis", "Nikolaos Tampouratzis", "Ioannis Papaefstathiou"], "title": "Energy-Efficient FPGA Framework for Non-Quantized Convolutional Neural Networks", "comment": "9th International Workoshop on Microsystems, International Hellenic\n  University", "summary": "The growing demand for real-time processing in artificial intelligence\napplications, particularly those involving Convolutional Neural Networks\n(CNNs), has highlighted the need for efficient computational solutions.\nConventional processors, very often, fall short in balancing performance, power\nconsumption, and latency, especially in embedded systems and edge computing\nplatforms. Field-Programmable Gate Arrays (FPGAs) offer a promising\nalternative, combining high performance with energy efficiency and\nreconfigurability. The presented framework addresses the complex and demanding\ncomputations of CNNs on FPGAs maintaining full precision in all neural network\nparameters. Specifically, our framework is based on Darknet which is very\nwidely used for the design of CNNs and allows the designer, by using a similar\ninput to that given to Darknet, to efficiently implement a CNN in a\nheterogeneous system comprising of CPUs and FPGAs. When compared with the FPGA\nframeworks that support quantization, our solution aims to offer similar\nperformance and/or energy efficiency without any degradation on the NN\naccuracy.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13203", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13203", "abs": "https://arxiv.org/abs/2510.13203", "authors": ["Mehdi Zekriyapanah Gashti"], "title": "Scrutiny new framework in integrated distributed reliable systems", "comment": null, "summary": "In this paper we represent a new framework for integrated distributed\nsystems. In the proposed framework we have used three parts to increase\nSatisfaction and Performance of this framework. At first we analyse integrated\nsystems and their evolution process and also ERPSD and ERPDRT framework briefly\nthen we explain the new FDIRS framework. Finally we compare the results of\nsimulation of the new framework with presented frameworks. Result showed In\nFIDRS framework, the technique of heterogeneous distributed data base is used\nto improve Performance and speed in responding to users. Finally by using FDIRS\nframework we succeeded to increase Efficiency, Performance and reliability of\nintegrated systems and remove some of previous frameworks problems.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.12948", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.12948", "abs": "https://arxiv.org/abs/2510.12948", "authors": ["Minh Nguyen"], "title": "SpareCodeSearch: Searching for Code Context When You Have No Spare GPU", "comment": "4 pages, 3 figures, 4 tables. Accepted to Context Collection Workshop\n  co-located with ASE'25", "summary": "Retrieval-Augmented Generation (RAG) frameworks aim to enhance Code Language\nModels (CLMs) by including another module for retrieving relevant context to\nconstruct the input prompt. However, these retrieval modules commonly use\nsemantic search, requiring substantial computational resources for training and\nhosting these embedded models, making them infeasible to integrate into\nlightweight applications such as in-IDE AI-based code completion. In this\nsolution paper, we prove that using keyword-search is sufficient to retrieve\nrelevant and useful code context inside large codebases, without the need for\nextensive GPU resources. The usefulness of code contexts found by our solution\nis demonstrated through their completion results on the Code Context\nCompetition's benchmark, reaching 0.748 and 0.725 chRF scores on Kotlin and\nPython tracks, respectively.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13031", "categories": ["cs.NI", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2510.13031", "abs": "https://arxiv.org/abs/2510.13031", "authors": ["Pragya Sharma", "Shihua Sun", "Shachi Deshpande", "Angelos Stavrou", "Haining Wang"], "title": "Towards xApp Conflict Evaluation with Explainable Machine Learning and Causal Inference in O-RAN", "comment": null, "summary": "The Open Radio Access Network (O-RAN) architecture enables a flexible,\nvendor-neutral deployment of 5G networks by disaggregating base station\ncomponents and supporting third-party xApps for near real-time RAN control.\nHowever, the concurrent operation of multiple xApps can lead to conflicting\ncontrol actions, which may cause network performance degradation. In this work,\nwe propose a framework for xApp conflict management that combines explainable\nmachine learning and causal inference to evaluate the causal relationships\nbetween RAN Control Parameters (RCPs) and Key Performance Indicators (KPIs). We\nuse model explainability tools such as SHAP to identify RCPs that jointly\naffect the same KPI, signaling potential conflicts, and represent these\ninteractions as a causal Directed Acyclic Graph (DAG). We then estimate the\ncausal impact of each of these RCPs on their associated KPIs using metrics such\nas Average Treatment Effect (ATE) and Conditional Average Treatment Effect\n(CATE). This approach offers network operators guided insights into identifying\nconflicts and quantifying their impacts, enabling more informed and effective\nconflict resolution strategies across diverse xApp deployments.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13401", "categories": ["cs.AR", "cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13401", "abs": "https://arxiv.org/abs/2510.13401", "authors": ["Jude Haris", "Jos\u00e9 Cano"], "title": "F-BFQ: Flexible Block Floating-Point Quantization Accelerator for LLMs", "comment": "Accepted to Workshop on New Approaches for Addressing the Computing\n  Requirements of LLMs and GNNs (LG-ARC) @ ISCA 2025", "summary": "Large Language Models (LLMs) have become increasingly prominent for daily\ntasks, from improving sound-totext translation to generating additional frames\nfor the latest video games. With the help of LLM inference frameworks, such as\nllama.cpp, which support optimizations such as KV-caching and quantization, it\nis now easier than ever to deploy LLMs on edge devices. Quantization is\nfundamental to enable LLMs on resource-constrained edge devices, and llama.cpp\nutilizes block floating point (BFP) quantization to drastically reduce the bit\nwidth of weights and input tensors, the memory footprint, and the computational\npower required to run LLMs. LLMs are typically quantized with mixed BFP\nquantization across the model layers to reduce the loss of model accuracy due\nto quantization. Therefore, to efficiently accelerate across the layers of\nBFP-quantized LLMs, specialized accelerators need to support different BFP\nvariants without reconfiguration. To address this issue, we propose a Flexible\nBlock FloatingPoint Quantization (F-BFQ) accelerator, which can dynamically\nswitch between two BFP quantization variants and perform matrix multiplication\n(MatMul) operations. Our initial F-BFQ accelerator design, deployed on the AMD\nKria board, reduces inference time by 1.4x on average over the Arm NEON-based\nCPU execution across three BFP quantized LLMs while achieving 5.2 tokens per\nsecond (~3.9 words per second).", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13223", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13223", "abs": "https://arxiv.org/abs/2510.13223", "authors": ["Yiyuan He", "Minxian Xu", "Jingfeng Wu", "Jianmin Hu", "Chong Ma", "Min Shen", "Le Chen", "Chengzhong Xu", "Lin Qu", "Kejiang Ye"], "title": "BanaServe: Unified KV Cache and Dynamic Module Migration for Balancing Disaggregated LLM Serving in AI Infrastructure", "comment": "23 pages", "summary": "Large language models (LLMs) are increasingly deployed in AI infrastructure,\ndriving the need for high throughput, resource efficient serving systems.\nDisaggregated LLM serving, which separates prompt prefill from auto-regressive\ndecode, has emerged as a promising architecture by isolating their\nheterogeneous compute and memory demands. However, current disaggregated\nsystems face three key limitations: (i) static resource allocation cannot adapt\nto highly dynamic workloads, causing over-provisioning that wastes resources or\nunder-provisioning that violates service level objectives (SLOs); (ii) inherent\nload imbalance between prefill and decode stages, where prefill is\ncompute-bound and decode is memory-bound, causes under-utilization in one tier\nwhile the other becomes a bottleneck; and (iii) prefix cache aware routing\nskews load distribution, as high cache hit rate prefill nodes attract\ndisproportionately more requests, further degrading balance and efficiency. To\naddress these issues, we present BanaServe, a dynamic orchestration framework\nthat continuously rebalances computational and memory resources across prefill\nand decode instances while eliminating hotspots induced by cache. BanaServe\nintroduces layer level weight migration, attention level Key Value Cache (KV\nCache) migration, and Global KV Cache Store sharing with layer wise overlapped\ntransmission, enabling both coarse grained (layer level) and fine grained\n(attention level) load redistribution with minimal latency overhead. These\nmechanisms allow routers to perform purely load aware scheduling, unconstrained\nby cache placement. Compared to vLLM, BanaServe achieves 1.2x-3.9x higher\nthroughput with 3.9%-78.4% lower total processing time, and outperforms\nDistServe by 1.1x-2.8x in throughput with 1.4%-70.1% latency reduction.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13078", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13078", "abs": "https://arxiv.org/abs/2510.13078", "authors": ["Tri Minh-Triet Pham", "Diego Elias Costa", "Weiyi Shang", "Jinqiu Yang"], "title": "ADPerf: Investigating and Testing Performance in Autonomous Driving Systems", "comment": "13 pages, accepted by ASE 2025", "summary": "Obstacle detection is crucial to the operation of autonomous driving systems,\nwhich rely on multiple sensors, such as cameras and LiDARs, combined with code\nlogic and deep learning models to detect obstacles for time-sensitive\ndecisions. Consequently, obstacle detection latency is critical to the safety\nand effectiveness of autonomous driving systems. However, the latency of the\nobstacle detection module and its resilience to various changes in the LiDAR\npoint cloud data are not yet fully understood. In this work, we present the\nfirst comprehensive investigation on measuring and modeling the performance of\nthe obstacle detection modules in two industry-grade autonomous driving\nsystems, i.e., Apollo and Autoware. Learning from this investigation, we\nintroduce ADPerf, a tool that aims to generate realistic point cloud data test\ncases that can expose increased detection latency. Increasing latency decreases\nthe availability of the detected obstacles and stresses the capabilities of\nsubsequent modules in autonomous driving systems, i.e., the modules may be\nnegatively impacted by the increased latency in obstacle detection.\n  We applied ADPerf to stress-test the performance of widely used 3D obstacle\ndetection modules in autonomous driving systems, as well as the propagation of\nsuch tests on trajectory prediction modules. Our evaluation highlights the need\nto conduct performance testing of obstacle detection components, especially 3D\nobstacle detection, as they can be a major bottleneck to increased latency of\nthe autonomous driving system. Such an adverse outcome will also further\npropagate to other modules, reducing the overall reliability of autonomous\ndriving systems.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13248", "categories": ["cs.NI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13248", "abs": "https://arxiv.org/abs/2510.13248", "authors": ["Yunze Wei", "Kaiwen Wei", "Shibo Du", "Jianyu Wang", "Zhangzhong Liu", "Yawen Wang", "Zhanyou Li", "Congcong Miao", "Xiaohui Xie", "Yong Cui"], "title": "Automated Network Protocol Testing with LLM Agents", "comment": null, "summary": "Network protocol testing is fundamental for modern network infrastructure.\nHowever, traditional network protocol testing methods are labor-intensive and\nerror-prone, requiring manual interpretation of specifications, test case\ndesign, and translation into executable artifacts, typically demanding one\nperson-day of effort per test case. Existing model-based approaches provide\npartial automation but still involve substantial manual modeling and expert\nintervention, leading to high costs and limited adaptability to diverse and\nevolving protocols. In this paper, we propose a first-of-its-kind system called\nNeTestLLM that takes advantage of multi-agent Large Language Models (LLMs) for\nend-to-end automated network protocol testing. NeTestLLM employs hierarchical\nprotocol understanding to capture complex specifications, iterative test case\ngeneration to improve coverage, a task-specific workflow for executable\nartifact generation, and runtime feedback analysis for debugging and\nrefinement. NeTestLLM has been deployed in a production environment for several\nmonths, receiving positive feedback from domain experts. In experiments,\nNeTestLLM generated 4,632 test cases for OSPF, RIP, and BGP, covering 41\nhistorical FRRouting bugs compared to 11 by current national standards. The\nprocess of generating executable artifacts also improves testing efficiency by\na factor of 8.65x compared to manual methods. NeTestLLM provides the first\npractical LLM-powered solution for automated end-to-end testing of\nheterogeneous network protocols.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13306", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.13306", "abs": "https://arxiv.org/abs/2510.13306", "authors": ["Jannick Borowitz", "Ernestine Gro\u00dfmann", "Mattthias Schimek"], "title": "Distributed Reductions for the Maximum Weight Independent Set Problem", "comment": null, "summary": "Finding maximum-weight independent sets in graphs is an important NP-hard\noptimization problem. Given a vertex-weighted graph $G$, the task is to find a\nsubset of pairwise non-adjacent vertices of $G$ with maximum weight. Most\nrecently published practical exact algorithms and heuristics for this problem\nuse a variety of data-reduction rules to compute (near-)optimal solutions.\nApplying these rules results in an equivalent instance of reduced size. An\noptimal solution to the reduced instance can be easily used to construct an\noptimal solution for the original input.\n  In this work, we present the first distributed-memory parallel reduction\nalgorithms for this problem, targeting graphs beyond the scale of previous\nsequential approaches. Furthermore, we propose the first distributed\nreduce-and-greedy and reduce-and-peel algorithms for finding a maximum weight\nindependent set heuristically.\n  In our practical evaluation, our experiments on up to $1024$ processors\ndemonstrate good scalability of our distributed reduce algorithms while\nmaintaining good reduction impact. Our asynchronous reduce-and-peel approach\nachieves an average speedup of $33\\times$ over a sequential state-of-the-art\nreduce-and-peel approach on 36 real-world graphs with a solution quality close\nto the sequential algorithm. Our reduce-and-greedy algorithms even achieve\naverage speedups of up to $50\\times$ at the cost of a lower solution quality.\nMoreover, our distributed approach allows us to consider graphs with more than\none billion vertices and 17 billion edges.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13106", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.13106", "abs": "https://arxiv.org/abs/2510.13106", "authors": ["Ruoyu Sun", "Da Song", "Jiayang Song", "Yuheng Huang", "Lei Ma"], "title": "TRUSTVIS: A Multi-Dimensional Trustworthiness Evaluation Framework for Large Language Models", "comment": "4 pages, 2 figures, To appear in ASE 2025 Demo Track", "summary": "As Large Language Models (LLMs) continue to revolutionize Natural Language\nProcessing (NLP) applications, critical concerns about their trustworthiness\npersist, particularly in safety and robustness. To address these challenges, we\nintroduce TRUSTVIS, an automated evaluation framework that provides a\ncomprehensive assessment of LLM trustworthiness. A key feature of our framework\nis its interactive user interface, designed to offer intuitive visualizations\nof trustworthiness metrics. By integrating well-known perturbation methods like\nAutoDAN and employing majority voting across various evaluation methods,\nTRUSTVIS not only provides reliable results but also makes complex evaluation\nprocesses accessible to users. Preliminary case studies on models like\nVicuna-7b, Llama2-7b, and GPT-3.5 demonstrate the effectiveness of our\nframework in identifying safety and robustness vulnerabilities, while the\ninteractive interface allows users to explore results in detail, empowering\ntargeted model improvements. Video Link: https://youtu.be/k1TrBqNVg8g", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13467", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13467", "abs": "https://arxiv.org/abs/2510.13467", "authors": ["Enhan Li", "Hongyang Du", "Kaibin Huang"], "title": "NetMCP: Network-Aware Model Context Protocol Platform for LLM Capability Extension", "comment": null, "summary": "Large Language Models (LLMs) remain static in functionality after training,\nand extending their capabilities requires integration with external data,\ncomputation, and services. The Model Context Protocol (MCP) has emerged as a\nstandard interface for such extensions, but current implementations rely solely\non semantic matching between users' requests and server function descriptions,\nwhich makes current deployments and simulation testbeds fragile under latency\nfluctuations or server failures. We address this gap by enhancing MCP tool\nrouting algorithms with real-time awareness of network and server status. To\nprovide a controlled test environment for development and evaluation, we\nconstruct a heterogeneous experimental platform, namely Network-aware MCP\n(NetMCP), which offers five representative network states and build a benchmark\nfor latency sequence generation and MCP server datasets. On top of NetMCP\nplatform, we analyze latency sequences and propose a Semantic-Oriented and\nNetwork-Aware Routing (SONAR) algorithm, which jointly optimizes semantic\nsimilarity and network Quality of Service (QoS) metrics for adaptive tool\nrouting. Results show that SONAR consistently improves task success rate and\nreduces completion time and failure number compared with semantic-only,\nLLM-based baselines, demonstrating the value of network-aware design for\nproduction-scale LLM systems. The code for NetMCP is available at\nhttps://github.com/NICE-HKU/NetMCP.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13447", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13447", "abs": "https://arxiv.org/abs/2510.13447", "authors": ["Julian Legler", "Sebastian Werner", "Maria C. Borges", "Stefan Tai"], "title": "Service-Level Energy Modeling and Experimentation for Cloud-Native Microservices", "comment": "Accepted at ICSOC 2025", "summary": "Microservice architectures have become the dominant paradigm for cloud-native\nsystems, offering flexibility and scalability. However, this shift has also led\nto increased demand for cloud resources, contributing to higher energy\nconsumption and carbon emissions. While existing research has focused on\nmeasuring fine-grained energy usage of CPU and memory at the container level,\nor on system-wide assessments, these approaches often overlook the energy\nimpact of cross-container service interactions, especially those involving\nnetwork and storage for auxiliary services such as observability and system\nmonitoring. To address this gap, we introduce a service-level energy model that\ncaptures the distributed nature of microservice execution across containers.\nOur model is supported by an experimentation tool that accounts for energy\nconsumption not just in CPU and memory, but also in network and storage\ncomponents. We validate our approach through extensive experimentation with\ndiverse experiment configurations of auxiliary services for a popular\nopen-source cloud-native microservice application. Results show that omitting\nnetwork and storage can lead to an underestimation of auxiliary service energy\nuse by up to 63%, highlighting the need for more comprehensive energy\nassessments in the design of energy-efficient microservice architectures.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13128", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13128", "abs": "https://arxiv.org/abs/2510.13128", "authors": ["Yujie Liu", "Mingxuan Zhu", "Shengyu Cheng", "Dan Hao"], "title": "Isolating Compiler Bugs through Compilation Steps Analysis", "comment": null, "summary": "Compilers are essential to software systems, and their bugs can propagate to\ndependent software. Ensuring compiler correctness is critical. However,\nisolating compiler bugs remains challenging due to the internal complexity of\ncompiler execution. Existing techniques primarily mutate compilation inputs to\ngenerate passing and failing tests, but often lack causal analysis of internal\nsteps, limiting their effectiveness.\n  To address this limitation, we propose CompSCAN, a novel compiler bug\nisolation technique that applies analysis over the sequence of compilation\nsteps. CompSCAN follows a three-stage process: (1) extracting the array of\ncompilation steps that leads to the original failure, (2) identifying\nbug-causing steps and collecting corresponding compiler code elements, and (3)\ncalculating suspicious scores for each code element and outputting a suspicious\nranking list as the bug isolation result.\n  We evaluate CompSCAN on 185 real-world LLVM and GCC bugs. Results show that\nCompSCAN outperforms state-of-the-art techniques in both effectiveness and\nefficiency. CompSCAN successfully isolates 50, 85, 100, and 123 bugs within the\nTop-1/3/5/10 ranks, respectively. Compared with ETEM and ODFL, two\nstate-of-the-art compiler bug isolation techniques, CompSCAN achieves relative\nimprovements of 44.51% / 50.18% / 36.24% / 24.49% over ETEM, and 31.58% /\n49.12% / 44.93% / 21.78% over ODFL on those metrics. Moreover, CompSCAN runs\nfaster on average per bug than both baselines.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13664", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13664", "abs": "https://arxiv.org/abs/2510.13664", "authors": ["Muhammad Haseeb", "Jinkun Geng", "Radhika Mittal", "Aurojit Panda", "Srinivas Narayana", "Anirudh Sivaraman"], "title": "Fair Ordering", "comment": null, "summary": "A growing class of applications demands \\emph{fair ordering/sequencing} of\nevents which ensures that events generated earlier by one client are processed\nbefore later events from other clients. However, achieving such sequencing is\nfundamentally challenging due to the inherent limitations of clock\nsynchronization. We advocate for an approach that embraces, rather than\neliminates, clock variability. Instead of attempting to remove error from a\ntimestamp, Tommy, our proposed system, leverages a statistical model to compare\ntwo noisy timestamps probabilistically by learning per-clock offset\ndistributions. Our preliminary statistical model computes the probability that\none event precedes another w.r.t. the wall-clock time without access to the\nwall-clock. This serves as a foundation for a new relation:\n\\emph{likely-happened-before} denoted by $\\xrightarrow{p}$ where $p$ represents\nthe probability of an event to have happened before another. The\n$\\xrightarrow{p}$ relation provides a basis for ordering multiple events which\nare otherwise considered \\emph{concurrent} by the typical\n\\emph{happened-before} ($\\rightarrow$) relation. We highlight various related\nchallenges including intransitivity of $\\xrightarrow{p}$ relation as opposed to\nthe transitive $\\rightarrow$ relation. We also outline several research\ndirections: online fair sequencing, stochastically fair total ordering,\nhost-level support for fairness and more.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13668", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13668", "abs": "https://arxiv.org/abs/2510.13668", "authors": ["Zhibin Wang", "Zetao Hong", "Xue Li", "Zibo Wang", "Shipeng Li", "Qingkai Meng", "Qing Wang", "Chengying Huan", "Rong Gu", "Sheng Zhong", "Chen Tian"], "title": "Adaptive Rescheduling in Prefill-Decode Disaggregated LLM Inference", "comment": null, "summary": "Large Language Model (LLM) inference has emerged as a fundamental paradigm.\nIn real-world scenarios, variations in output length cause severe workload\nimbalance in the decode phase, particularly for long-output reasoning tasks.\nExisting systems, such as PD disaggregation architectures, rely on static\nprefill-to-decode scheduling, which often results in SLO violations and OOM\nfailures under evolving decode workloads.\n  In this paper, we propose ARES, an adaptive decoding rescheduling system\npowered by length prediction to anticipate future workloads. Our core\ncontributions include: (1) A lightweight and continuous LLM-native prediction\nmethod that leverages LLM hidden state to model remaining generation length\nwith high precision (reducing MAE by 49.42%) and low overhead (cutting\npredictor parameters by 93.28%); (2) A rescheduling solution in decode phase\nwith : A dynamic balancing mechanism that integrates current and predicted\nworkloads, reducing P99 TPOT by 74.77% and achieving up to 2.24 times higher\ngoodput.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13176", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13176", "abs": "https://arxiv.org/abs/2510.13176", "authors": ["Haolin Pan", "Chao Zha", "Jinyuan Dong", "Mingjie Xing", "Yanjun Wu"], "title": "GRACE: Globally-Seeded Representation-Aware Cluster-Specific Evolution for Compiler Auto-Tuning", "comment": null, "summary": "Compiler pass selection and phase ordering present a significant challenge in\nachieving optimal program performance, particularly for objectives like code\nsize reduction. Standard compiler heuristics offer general applicability but\noften yield suboptimal, program-specific results due to their one-size-fits-all\nnature. While iterative compilation can find tailored solutions, its\nprohibitive search cost limits practical use. Machine learning approaches\npromise faster inference but frequently struggle with generalization to unseen\nprograms. This paper introduces GRACE, a novel framework for compiler\nauto-tuning, demonstrated for LLVM IR instruction count optimization. GRACE\neffectively curtails the search space by leveraging pass synergies and a\nweighted scoring method to generate initial high-quality candidate sequences\nand a pass pool. It then employs contrastive learning, using pass\nsequence-based data augmentation, to create program embeddings that facilitate\nsimilarity-aware clustering. Evolutionary search within these clusters yields a\ncoreset of $k$ specialized pass sequences designed for robust generalization to\nunseen programs. At test time, GRACE efficiently selects the best coreset\nsequence and refines it using lightweight techniques. Experimental results on\nseven diverse datasets show that GRACE reduces LLVM IR instruction count by an\naverage of 10.09% on LLVM 10.0.0 and 10.19% on LLVM 18.1.6 compared to opt -Oz,\nwhile incurring an average tuning time of less than 1s per program,\ndemonstrating its state-of-the-art performance and practical effectiveness.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13689", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13689", "abs": "https://arxiv.org/abs/2510.13689", "authors": ["Zhiyuan He", "Yi Xu", "Cheng Luo", "Lili Qiu", "Yuqing Yang"], "title": "Optimize Replica Server Placement in a Satellite Network", "comment": "14 pages, two columns", "summary": "Satellite communication offers Internet connectivity to remote locations,\nsuch as villages, deserts, mountains, and at sea. However, transmitting content\nover satellite networks is significantly more expensive than traditional\nInternet. To address this issue, we propose placing content replica servers\nwithin satellite networks and optimizing replica placement for important\nperformance metrics, such as latency, transmission, and storage cost. Our\napproach can support different types of satellite networks, including Low Earth\nOrbit (LEO), Medium Earth Orbit (MEO), Geostationary Orbit (GEO), and their\ncombinations. An important challenge for supporting content replicas in such\nnetworks is that LEO and MEO satellites are constantly moving. We address this\nchallenge by explicitly considering their moving trajectories and strategically\noptimizing not only client performance, but also the cost of transferring\ncontent from one satellite to another as needed. We demonstrate the\neffectiveness of our approach using both simulated traffic traces and a\nprototype system.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13724", "categories": ["cs.DC", "cs.AI", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13724", "abs": "https://arxiv.org/abs/2510.13724", "authors": ["Aditya Tanikanti", "Benoit C\u00f4t\u00e9", "Yanfei Guo", "Le Chen", "Nickolaus Saint", "Ryan Chard", "Ken Raffenetti", "Rajeev Thakur", "Thomas Uram", "Ian Foster", "Michael E. Papka", "Venkatram Vishwanath"], "title": "FIRST: Federated Inference Resource Scheduling Toolkit for Scientific AI Model Access", "comment": null, "summary": "We present the Federated Inference Resource Scheduling Toolkit (FIRST), a\nframework enabling Inference-as-a-Service across distributed High-Performance\nComputing (HPC) clusters. FIRST provides cloud-like access to diverse AI\nmodels, like Large Language Models (LLMs), on existing HPC infrastructure.\nLeveraging Globus Auth and Globus Compute, the system allows researchers to run\nparallel inference workloads via an OpenAI-compliant API on private, secure\nenvironments. This cluster-agnostic API allows requests to be distributed\nacross federated clusters, targeting numerous hosted models. FIRST supports\nmultiple inference backends (e.g., vLLM), auto-scales resources, maintains\n\"hot\" nodes for low-latency execution, and offers both high-throughput batch\nand interactive modes. The framework addresses the growing demand for private,\nsecure, and scalable AI inference in scientific workflows, allowing researchers\nto generate billions of tokens daily on-premises without relying on commercial\ncloud infrastructure.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13184", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13184", "abs": "https://arxiv.org/abs/2510.13184", "authors": ["Haolin Pan", "Jinyuan Dong", "Mingjie Xing", "Yanjun Wu"], "title": "Synergy-Guided Compiler Auto-Tuning of Nested LLVM Pass Pipelines", "comment": null, "summary": "Compiler optimization relies on sequences of passes to improve program\nperformance. Selecting and ordering these passes automatically, known as\ncompiler auto-tuning, is challenging due to the large and complex search space.\nExisting approaches generally assume a linear sequence of passes, a model\ncompatible with legacy compilers but fundamentally misaligned with the\nhierarchical design of the LLVM New Pass Manager. This misalignment prevents\nthem from guaranteeing the generation of syntactically valid optimization\npipelines. In this work, we present a new auto-tuning framework built from the\nground up for the New Pass Manager. We introduce a formal grammar to define the\nspace of valid nested pipelines and a forest-based data structure for their\nnative representation. Upon this foundation, we develop a structure-aware\nGenetic Algorithm whose operators manipulate these forests directly, ensuring\nthat all candidate solutions are valid by construction. The framework first\nmines synergistic pass relationships to guide the search. An optional\nrefinement stage further explores subtle performance variations arising from\ndifferent valid structural arrangements.\n  We evaluate our approach on seven benchmark datasets using LLVM 18.1.6. The\ndiscovered pipelines achieve an average of 13.62% additional instruction count\nreduction compared to the standard opt -Oz optimization level, showing that our\nframework is capable of navigating this complex, constrained search space to\nidentify valid and effective pass pipelines.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13710", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13710", "abs": "https://arxiv.org/abs/2510.13710", "authors": ["Rohan Bose", "Jinwei Zhao", "Tanya Shreedhar", "Jianping Pan", "Nitinder Mohan"], "title": "Investigating Web Content Delivery Performance over Starlink", "comment": "12 pages, 14 figures, LEO Satellite Networks, Content Delivery\n  Networks, Domain Name System, Internet Measurements", "summary": "Low Earth Orbit (LEO) satellite ISPs promise universal Internet connectivity,\nyet their interaction with content delivery remains poorly understood. We\npresent the first comprehensive measurement study decomposing Starlink's web\ncontent delivery performance decomposed across Point of Presence (PoP), DNS,\nand CDN layers. Through two years of measurements combining 225K Cloudflare AIM\ntests, M-Lab data, and active probing from 99 RIPE Atlas and controlled\nStarlink probes, we collect 6.1M traceroutes and 10.8M DNS queries to quantify\nhow satellite architecture disrupts terrestrial CDN assumptions. We identify\nthree distinct performance regimes based on infrastructure density. Regions\nwith local content-rich PoPs achieve near-terrestrial latencies with the\nsatellite segment dominating 80-90% of RTT. Infrastructure-sparse regions\nsuffer cascading penalties: remote PoPs force distant resolver selection, which\ntriggers CDN mis-localization, pushing latencies beyond 200 ms.\nDense-infrastructure regions show minimal sensitivity to PoP changes.\nLeveraging Starlink's infrastructure expansion in early 2025 as a natural\nexperiment, we demonstrate that relocating PoPs closer to user location reduces\nmedian page-fetch times by 60%. Our findings reveal that infrastructure\nproximity, not satellite coverage, influences web performance, requiring\nfundamental changes to CDN mapping and DNS resolution for satellite ISPs.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13755", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13755", "abs": "https://arxiv.org/abs/2510.13755", "authors": ["Timoth\u00e9 Albouy", "Antonio Fern\u00e1ndez Anta", "Chryssis Georgiou", "Nicolas Nicolaou", "Junlang Wang"], "title": "Tight Conditions for Binary-Output Tasks under Crashes", "comment": null, "summary": "This paper explores necessary and sufficient system conditions to solve\ndistributed tasks with binary outputs (\\textit{i.e.}, tasks with output values\nin $\\{0,1\\}$). We focus on the distinct output sets of values a task can\nproduce (intentionally disregarding validity and value multiplicity),\nconsidering that some processes may output no value. In a distributed system\nwith $n$ processes, of which up to $t \\leq n$ can crash, we provide a complete\ncharacterization of the tight conditions on $n$ and $t$ under which every class\nof tasks with binary outputs is solvable, for both synchronous and asynchronous\nsystems. This output-set approach yields highly general results: it unifies\nmultiple distributed computing problems, such as binary consensus and symmetry\nbreaking, and it produces impossibility proofs that hold for stronger task\nformulations, including those that consider validity, account for value\nmultiplicity, or move beyond binary outputs.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13423", "categories": ["cs.SE", "cs.MS"], "pdf": "https://arxiv.org/pdf/2510.13423", "abs": "https://arxiv.org/abs/2510.13423", "authors": ["Matthew Sottile", "Mohit Tekriwal", "John Sarracino"], "title": "Towards Richer Challenge Problems for Scientific Computing Correctness", "comment": "In Proceedings VSS 2025, arXiv:2510.12314", "summary": "Correctness in scientific computing (SC) is gaining increasing attention in\nthe formal methods (FM) and programming languages (PL) community. Existing\nPL/FM verification techniques struggle with the complexities of realistic SC\napplications. Part of the problem is a lack of a common understanding between\nthe SC and PL/FM communities of machine-verifiable correctness challenges and\ndimensions of correctness in SC applications.\n  To address this gap, we call for specialized challenge problems to inform the\ndevelopment and evaluation of FM/PL verification techniques for correctness in\nSC. These specialized challenges are intended to augment existing problems\nstudied by FM/PL researchers for general programs to ensure the needs of SC\napplications can be met. We propose several dimensions of correctness relevant\nto scientific computing, and discuss some guidelines and criteria for designing\nchallenge problems to evaluate correctness in scientific computing.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13732", "categories": ["cs.NI", "cs.IT", "math.IT"], "pdf": "https://arxiv.org/pdf/2510.13732", "abs": "https://arxiv.org/abs/2510.13732", "authors": ["Mohd Saif Ali Khan", "Karthik RM", "Samar Agnihotri"], "title": "Scalable Pilot Assignment for Distributed Massive MIMO using Channel Estimation Error", "comment": null, "summary": "Pilot contamination remains a major bottleneck in realizing the full\npotential of distributed massive MIMO systems. We propose two dynamic and\nscalable pilot assignment strategies designed for practical deployment in such\nnetworks. First, we present a low complexity centralized algorithm that\nsequentially assigns pilots to user equipments (UEs) to minimize the global\nchannel estimation errors across serving access points (APs). This improves the\nchannel estimation quality and reduces interference among UEs, enhancing the\nspectral efficiency. Second, we develop a fully distributed algorithm that uses\na priority-based pilot selection approach. In this algorithm, each selected AP\nminimizes estimation error using only local information and offers candidate\npilots to the UEs. Every UE then selects a suitable pilot based on AP priority.\nThis approach ensures consistency and minimizes interference while\nsignificantly reducing pilot contamination. The method requires no global\ncoordination, maintains low signaling overhead, and adapts dynamically to the\nUE deployment. Numerical simulations demonstrate the superiority of our\nproposed schemes in terms of network throughput when compared to other\nstate-of-the-art benchmark schemes.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13424", "categories": ["cs.SE", "D.2.5; G.1.3"], "pdf": "https://arxiv.org/pdf/2510.13424", "abs": "https://arxiv.org/abs/2510.13424", "authors": ["Alexander C. Wilton"], "title": "Verifying a Sparse Matrix Algorithm Using Symbolic Execution", "comment": "In Proceedings VSS 2025, arXiv:2510.12314", "summary": "Scientific software is, by its very nature, complex. It is mathematical and\nhighly optimized which makes it prone to subtle bugs not as easily detected by\ntraditional testing. We outline how symbolic execution can be used to write\ntests similar to traditional unit tests while providing stronger verification\nguarantees and apply this methodology to a sparse matrix algorithm.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13561", "categories": ["cs.SE", "cs.AI", "68N30"], "pdf": "https://arxiv.org/pdf/2510.13561", "abs": "https://arxiv.org/abs/2510.13561", "authors": ["Peng Di", "Faqiang Chen", "Xiao Bai", "Hongjun Yang", "Qingfeng Li", "Ganglin Wei", "Jian Mou", "Feng Shi", "Keting Chen", "Peng Tang", "Zhitao Shen", "Zheng Li", "Wenhui Shi", "Junwei Guo", "Hang Yu"], "title": "OpenDerisk: An Industrial Framework for AI-Driven SRE, with Design, Implementation, and Case Studies", "comment": "23 pages", "summary": "The escalating complexity of modern software imposes an unsustainable\noperational burden on Site Reliability Engineering (SRE) teams, demanding\nAI-driven automation that can emulate expert diagnostic reasoning. Existing\nsolutions, from traditional AI methods to general-purpose multi-agent systems,\nfall short: they either lack deep causal reasoning or are not tailored for the\nspecialized, investigative workflows unique to SRE. To address this gap, we\npresent OpenDerisk, a specialized, open-source multi-agent framework\narchitected for SRE. OpenDerisk integrates a diagnostic-native collaboration\nmodel, a pluggable reasoning engine, a knowledge engine, and a standardized\nprotocol (MCP) to enable specialist agents to collectively solve complex,\nmulti-domain problems. Our comprehensive evaluation demonstrates that\nOpenDerisk significantly outperforms state-of-the-art baselines in both\naccuracy and efficiency. This effectiveness is validated by its large-scale\nproduction deployment at Ant Group, where it serves over 3,000 daily users\nacross diverse scenarios, confirming its industrial-grade scalability and\npractical impact. OpenDerisk is open source and available at\nhttps://github.com/derisk-ai/OpenDerisk/", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13575", "categories": ["cs.SE", "D.2.5"], "pdf": "https://arxiv.org/pdf/2510.13575", "abs": "https://arxiv.org/abs/2510.13575", "authors": ["Han Fu", "Sigrid Eldh", "Kristian Wiklund", "Andreas Ermedahl", "Philipp Haller", "Cyrille Artho"], "title": "Auto-repair without test cases: How LLMs fix compilation errors in large industrial embedded code", "comment": "9 pages, 4 figures, conference: 2025 28th Euromicro Conference on\n  Digital System Design (DSD)", "summary": "The co-development of hardware and software in industrial embedded systems\nfrequently leads to compilation errors during continuous integration (CI).\nAutomated repair of such failures is promising, but existing techniques rely on\ntest cases, which are not available for non-compilable code.\n  We employ an automated repair approach for compilation errors driven by large\nlanguage models (LLMs). Our study encompasses the collection of more than 40000\ncommits from the product's source code. We assess the performance of an\nindustrial CI system enhanced by four state-of-the-art LLMs, comparing their\noutcomes with manual corrections provided by human programmers. LLM-equipped CI\nsystems can resolve up to 63 % of the compilation errors in our baseline\ndataset. Among the fixes associated with successful CI builds, 83 % are deemed\nreasonable. Moreover, LLMs significantly reduce debugging time, with the\nmajority of successful cases completed within 8 minutes, compared to hours\ntypically required for manual debugging.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13692", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13692", "abs": "https://arxiv.org/abs/2510.13692", "authors": ["Deepak A. Cherian"], "title": "Property Testing for Ocean Models. Can We Specify It? (Invited Talk)", "comment": "In Proceedings VSS 2025, arXiv:2510.12314", "summary": "I take inspiration from the property-testing literature, particularly the\nwork of Prof. John Hughes, and explore how such ideas might be applied to\nnumerical models of the ocean. Specifically, I ask whether geophysical fluid\ndynamics (GFD) theory, expressed as property tests, might be used to address\nthe oracle problem of testing the correctness of ocean models. I propose that a\nnumber of simple idealized GFD problems can be framed as property tests. These\nexamples clearly illustrate how physics naturally lends itself to specifying\nproperty tests. Which of these proposed tests might be most feasible and\nuseful, remains to be seen.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
{"id": "2510.13697", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13697", "abs": "https://arxiv.org/abs/2510.13697", "authors": ["Maksim Sapronov", "Evgeniy Glukhov"], "title": "On Pretraining for Project-Level Code Completion", "comment": null, "summary": "Repository-level pretraining is commonly used to enable large language models\nfor code to leverage codebase-wide context. This enhances their ability to\ngenerate accurate and context-aware code completions. In this work, we\ninvestigate how different repository-processing strategies affect in-context\nlearning in OpenCoder, a 1.5B-parameter model. We extend its context window\nfrom 4,096 to 16,384 tokens by training on additional 1B tokens of curated\nrepository-level data. Despite relying on a smaller dataset than competing\nmodels (which often use hundreds of billions of tokens), our model achieves\ncomparable performance on the Long Code Arena benchmark. We find that various\nrepository-processing techniques yield similarly strong results, with the\nprimary gain coming from adapting to a new rotary positional embedding (RoPE)\nscaling parameter. Finally, we show that a simpler file-level training approach\nat the original sequence length remains highly effective, opening up\nrepository-level code completion research to settings with more constrained\ndata and compute resources.", "AI": {"tldr": "Summary generation failed", "motivation": "Motivation analysis unavailable", "method": "Method extraction failed", "result": "Result analysis unavailable", "conclusion": "Conclusion extraction failed"}}
