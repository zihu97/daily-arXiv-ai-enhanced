{"id": "2510.13147", "categories": ["cs.AR", "cs.LG", "cs.PF", "C.1.4"], "pdf": "https://arxiv.org/pdf/2510.13147", "abs": "https://arxiv.org/abs/2510.13147", "authors": ["Faraz Tahmasebi", "Michael Pelluer", "Hyoukjun Kwon"], "title": "D-com: Accelerating Iterative Processing to Enable Low-rank Decomposition of Activations", "comment": "12 pages, 13 figures", "summary": "The computation and memory costs of large language models kept increasing\nover last decade, which reached over the scale of 1T parameters. To address the\nchallenges from the large scale models, model compression techniques such as\nlow-rank decomposition have been explored. Previous model decomposition works\nhave focused on weight decomposition to avoid costly runtime decomposition,\nwhose latency often significantly exceeds the benefits from decomposition\n(e.g., 38% more end-to-end latency when running Llama2-7b on A100 with 4K\nsequence length with activation decomposition compared to no decomposition). In\nthis work, we debunk such observations and report that the input decomposition\ncan be significantly beneficial with a proper choice of decomposition algorithm\nand hardware support. We adopt progressive decomposition algorithm, Lanczos\nalgorithm, and design a co-accelerator architecture for the decomposition\nalgorithm. To address the memory- boundness of the decomposition operation, we\nintroduce a novel compute replication methodology that moves the op- eration\ntoward compute-bound region, which enables 6.2x speedup in our evaluation. We\nalso develop an output shape- preserving computation scheme that eliminates\ndecomposi- tion costs in consecutive layers. To compensate model quality loss\nfrom compression, we introduce a multi-track decom- position approach that\nseparately handles outlier channels for high accuracy and low perplexity with\nminimal compu- tational costs. Combined together, our accelerator, D-com,\nprovides 22% end-to-end latency improvements compared to A100 GPU at the cost\nof small model quality degradation (e.g., 3% on AI2 Reasoning Challenge task).", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aD-com\u7684\u52a0\u901f\u5668\u67b6\u6784\uff0c\u901a\u8fc7\u6539\u8fdb\u8f93\u5165\u5206\u89e3\u7b97\u6cd5\uff08\u91c7\u7528Lanczos\u7b97\u6cd5\uff09\u3001\u8bbe\u8ba1\u534f\u540c\u52a0\u901f\u5668\u3001\u5f15\u5165\u8ba1\u7b97\u590d\u5236\u65b9\u6cd5\u548c\u8f93\u51fa\u5f62\u72b6\u4fdd\u6301\u8ba1\u7b97\u65b9\u6848\uff0c\u5e76\u7ed3\u5408\u591a\u8f68\u5206\u89e3\u7b56\u7565\uff0c\u5728\u4ec5\u8f7b\u5fae\u964d\u4f4e\u6a21\u578b\u8d28\u91cf\u7684\u524d\u63d0\u4e0b\uff0c\u76f8\u6bd4A100 GPU\u5b9e\u73b0\u4e8622%\u7684\u7aef\u5230\u7aef\u5ef6\u8fdf\u6539\u8fdb\u3002", "motivation": "\u5927\u578b\u8bed\u8a00\u6a21\u578b\u7684\u8ba1\u7b97\u548c\u5185\u5b58\u6210\u672c\u6301\u7eed\u589e\u957f\uff0c\u5df2\u8fbe\u4e07\u4ebf\u53c2\u6570\u89c4\u6a21\u3002\u73b0\u6709\u6a21\u578b\u538b\u7f29\u6280\u672f\uff08\u5982\u4f4e\u79e9\u5206\u89e3\uff09\u591a\u805a\u7126\u4e8e\u6743\u91cd\u5206\u89e3\uff0c\u4ee5\u907f\u514d\u8fd0\u884c\u65f6\u5206\u89e3\u5e26\u6765\u7684\u9ad8\u5ef6\u8fdf\u3002\u7136\u800c\uff0c\u4f5c\u8005\u8ba4\u4e3a\u5728\u5408\u9002\u7684\u5206\u89e3\u7b97\u6cd5\u548c\u786c\u4ef6\u652f\u6301\u4e0b\uff0c\u8f93\u5165\u5206\u89e3\u4ecd\u53ef\u5e26\u6765\u663e\u8457\u6536\u76ca\u3002", "method": "\u91c7\u7528\u6e10\u8fdb\u5f0f\u5206\u89e3\u7b97\u6cd5\uff08Lanczos\u7b97\u6cd5\uff09\uff0c\u8bbe\u8ba1\u4e13\u7528\u534f\u52a0\u901f\u5668\u67b6\u6784\uff1b\u5f15\u5165\u8ba1\u7b97\u590d\u5236\u65b9\u6cd5\u7f13\u89e3\u5206\u89e3\u64cd\u4f5c\u7684\u5185\u5b58\u74f6\u9888\uff1b\u5f00\u53d1\u8f93\u51fa\u5f62\u72b6\u4fdd\u6301\u8ba1\u7b97\u65b9\u6848\u4ee5\u6d88\u9664\u8fde\u7eed\u5c42\u4e2d\u7684\u5206\u89e3\u5f00\u9500\uff1b\u63d0\u51fa\u591a\u8f68\u5206\u89e3\u65b9\u6cd5\uff0c\u5355\u72ec\u5904\u7406\u5f02\u5e38\u901a\u9053\u4ee5\u5728\u4f4e\u8ba1\u7b97\u5f00\u9500\u4e0b\u4fdd\u6301\u9ad8\u7cbe\u5ea6\u548c\u4f4e\u56f0\u60d1\u5ea6\u3002", "result": "\u5728\u8bc4\u4f30\u4e2d\uff0c\u6240\u63d0\u65b9\u6cd5\u5b9e\u73b0\u4e866.2\u500d\u7684\u5206\u89e3\u64cd\u4f5c\u52a0\u901f\uff0c\u5e76\u5728\u7aef\u5230\u7aef\u63a8\u7406\u4e2d\u76f8\u6bd4A100 GPU\u83b7\u5f9722%\u7684\u5ef6\u8fdf\u6539\u5584\uff0c\u540c\u65f6\u6a21\u578b\u8d28\u91cf\u4ec5\u8f7b\u5fae\u4e0b\u964d\uff08\u5982\u5728AI2\u63a8\u7406\u6311\u6218\u4efb\u52a1\u4e0a\u4e0b\u964d3%\uff09\u3002", "conclusion": "\u901a\u8fc7\u7b97\u6cd5\u4e0e\u786c\u4ef6\u534f\u540c\u8bbe\u8ba1\uff0c\u8f93\u5165\u5206\u89e3\u5728\u5927\u578b\u8bed\u8a00\u6a21\u578b\u4e2d\u5177\u6709\u663e\u8457\u6f5c\u529b\uff0cD-com\u52a0\u901f\u5668\u5728\u51e0\u4e4e\u4e0d\u5f71\u54cd\u6a21\u578b\u8d28\u91cf\u7684\u524d\u63d0\u4e0b\u6709\u6548\u63d0\u5347\u4e86\u63a8\u7406\u6548\u7387\u3002"}}
{"id": "2510.13401", "categories": ["cs.AR", "cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13401", "abs": "https://arxiv.org/abs/2510.13401", "authors": ["Jude Haris", "Jos\u00e9 Cano"], "title": "F-BFQ: Flexible Block Floating-Point Quantization Accelerator for LLMs", "comment": "Accepted to Workshop on New Approaches for Addressing the Computing\n  Requirements of LLMs and GNNs (LG-ARC) @ ISCA 2025", "summary": "Large Language Models (LLMs) have become increasingly prominent for daily\ntasks, from improving sound-totext translation to generating additional frames\nfor the latest video games. With the help of LLM inference frameworks, such as\nllama.cpp, which support optimizations such as KV-caching and quantization, it\nis now easier than ever to deploy LLMs on edge devices. Quantization is\nfundamental to enable LLMs on resource-constrained edge devices, and llama.cpp\nutilizes block floating point (BFP) quantization to drastically reduce the bit\nwidth of weights and input tensors, the memory footprint, and the computational\npower required to run LLMs. LLMs are typically quantized with mixed BFP\nquantization across the model layers to reduce the loss of model accuracy due\nto quantization. Therefore, to efficiently accelerate across the layers of\nBFP-quantized LLMs, specialized accelerators need to support different BFP\nvariants without reconfiguration. To address this issue, we propose a Flexible\nBlock FloatingPoint Quantization (F-BFQ) accelerator, which can dynamically\nswitch between two BFP quantization variants and perform matrix multiplication\n(MatMul) operations. Our initial F-BFQ accelerator design, deployed on the AMD\nKria board, reduces inference time by 1.4x on average over the Arm NEON-based\nCPU execution across three BFP quantized LLMs while achieving 5.2 tokens per\nsecond (~3.9 words per second).", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7075\u6d3b\u7684\u5757\u6d6e\u70b9\u91cf\u5316\uff08F-BFQ\uff09\u52a0\u901f\u5668\uff0c\u53ef\u5728\u4e0d\u540cBFP\u53d8\u4f53\u95f4\u52a8\u6001\u5207\u6362\u4ee5\u9ad8\u6548\u6267\u884c\u91cf\u5316\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u76f8\u6bd4Arm NEON CPU\u5e73\u5747\u63a8\u7406\u901f\u5ea6\u63d0\u53471.4\u500d\u3002", "motivation": "\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u90e8\u7f72\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u9700\u8981\u4f4e\u5185\u5b58\u5360\u7528\u548c\u4f4e\u8ba1\u7b97\u5f00\u9500\uff0c\u5757\u6d6e\u70b9\uff08BFP\uff09\u91cf\u5316\u662f\u5173\u952e\u624b\u6bb5\u3002\u7136\u800c\uff0c\u73b0\u6709LLM\u901a\u5e38\u91c7\u7528\u6df7\u5408BFP\u91cf\u5316\u7b56\u7565\uff0c\u8981\u6c42\u52a0\u901f\u5668\u80fd\u652f\u6301\u591a\u79cdBFP\u683c\u5f0f\u800c\u65e0\u9700\u91cd\u65b0\u914d\u7f6e\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u7075\u6d3b\u7684\u786c\u4ef6\u52a0\u901f\u65b9\u6848\u3002", "method": "\u4f5c\u8005\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86Flexible Block Floating-Point Quantization\uff08F-BFQ\uff09\u52a0\u901f\u5668\uff0c\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5207\u6362\u4e24\u79cdBFP\u91cf\u5316\u683c\u5f0f\uff0c\u5e76\u9ad8\u6548\u6267\u884c\u77e9\u9635\u4e58\u6cd5\uff08MatMul\uff09\u64cd\u4f5c\u3002\u8be5\u52a0\u901f\u5668\u90e8\u7f72\u5728AMD Kria\u5f00\u53d1\u677f\u4e0a\u3002", "result": "\u5728\u4e09\u79cdBFP\u91cf\u5316LLM\u4e0a\uff0cF-BFQ\u52a0\u901f\u5668\u76f8\u6bd4\u57fa\u4e8eArm NEON\u7684CPU\u5b9e\u73b0\u5e73\u5747\u63a8\u7406\u65f6\u95f4\u51cf\u5c111.4\u500d\uff0c\u8fbe\u5230\u6bcf\u79d25.2\u4e2atoken\uff08\u7ea63.9\u4e2a\u8bcd\uff09\u7684\u541e\u5410\u91cf\u3002", "conclusion": "F-BFQ\u52a0\u901f\u5668\u6709\u6548\u652f\u6301\u6df7\u5408BFP\u91cf\u5316LLM\u7684\u9ad8\u6548\u63a8\u7406\uff0c\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u5c55\u73b0\u51fa\u663e\u8457\u6027\u80fd\u4f18\u52bf\uff0c\u4e3a\u8d44\u6e90\u53d7\u9650\u573a\u666f\u4e0b\u7684LLM\u90e8\u7f72\u63d0\u4f9b\u4e86\u53ef\u884c\u7684\u786c\u4ef6\u52a0\u901f\u65b9\u6848\u3002"}}
{"id": "2510.12803", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.12803", "abs": "https://arxiv.org/abs/2510.12803", "authors": ["Shang Zhou", "Zihan Zheng", "Kaiyuan Liu", "Zeyu Shen", "Zerui Cheng", "Zexing Chen", "Hansen He", "Jianzhu Yao", "Huanzhi Mao", "Qiuyang Mang", "Tianfu Fu", "Beichen Li", "Dongruixuan Li", "Wenhao Chai", "Zhuang Liu", "Aleksandra Korolova", "Peter Henderson", "Natasha Jaques", "Pramod Viswanath", "Saining Xie", "Jingbo Shang"], "title": "AutoCode: LLMs as Problem Setters for Competitive Programming", "comment": "Project page: https://livecodebenchpro.com/projects/autocode/overview", "summary": "Writing competitive programming problems is exacting. Authors must: set\nconstraints, input distributions, and edge cases that rule out shortcuts;\ntarget specific algorithms (e.g., max-flow, dynamic programming, data\nstructures); and calibrate complexity beyond the reach of most competitors. We\nargue that this makes for an ideal test of general large language model\ncapabilities and study whether they can do this reliably. We introduce\nAutoCode, which uses multiple rounds of validation to yield competition-grade\nproblem statements and test cases. On held-out problems, AutoCode test suites\napproach 99% consistency with official judgments, a significant improvement\nover current state-of-the-art methods like HardTests, which achieve less than\n81%. Furthermore, starting with a random seed problem, AutoCode can create\nnovel variants with reference and brute-force solutions. By cross-verifying\nthese generated solutions against test cases, we can further filter out\nmalformed problems. Our system ensures high correctness, as verified by human\nexperts. AutoCode successfully produces novel problems judged by\nGrandmaster-level (top 0.3%) competitive programmers to be of contest quality.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faAutoCode\u7cfb\u7edf\uff0c\u901a\u8fc7\u591a\u8f6e\u9a8c\u8bc1\u81ea\u52a8\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u7ade\u8d5b\u7f16\u7a0b\u9898\u76ee\u548c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5176\u751f\u6210\u7ed3\u679c\u63a5\u8fd1\u5b98\u65b9\u5224\u65ad\u6807\u51c6\uff0899%\u4e00\u81f4\u6027\uff09\uff0c\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u5e76\u80fd\u521b\u9020\u65b0\u9896\u4e14\u7b26\u5408\u7ade\u8d5b\u6807\u51c6\u7684\u95ee\u9898\u3002", "motivation": "\u7f16\u5199\u9ad8\u8d28\u91cf\u7684\u7ade\u8d5b\u7f16\u7a0b\u9898\u76ee\u975e\u5e38\u56f0\u96be\uff0c\u9700\u8981\u8bbe\u5b9a\u7cbe\u786e\u7684\u7ea6\u675f\u3001\u8f93\u5165\u5206\u5e03\u548c\u8fb9\u754c\u60c5\u51b5\uff0c\u4ee5\u6392\u9664\u6377\u5f84\u89e3\u6cd5\u5e76\u9488\u5bf9\u7279\u5b9a\u7b97\u6cd5\uff0c\u8fd9\u5bf9\u5927\u8bed\u8a00\u6a21\u578b\u7684\u80fd\u529b\u63d0\u51fa\u4e86\u7406\u60f3\u6d4b\u8bd5\u573a\u666f\u3002", "method": "AutoCode\u91c7\u7528\u591a\u8f6e\u9a8c\u8bc1\u673a\u5236\u751f\u6210\u7ade\u8d5b\u7ea7\u9898\u76ee\u4e0e\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u901a\u8fc7\u53c2\u8003\u89e3\u4e0e\u66b4\u529b\u89e3\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u8fc7\u6ee4\u65e0\u6548\u9898\u76ee\uff0c\u786e\u4fdd\u6b63\u786e\u6027\u3002", "result": "\u5728\u4fdd\u7559\u6d4b\u8bd5\u96c6\u4e0a\uff0cAutoCode\u751f\u6210\u7684\u6d4b\u8bd5\u5957\u4ef6\u4e0e\u5b98\u65b9\u5224\u65ad\u4e00\u81f4\u6027\u8fbe99%\uff0c\u8fdc\u8d85\u73b0\u6709\u65b9\u6cd5\uff08\u5982HardTests\u768481%\u4ee5\u4e0b\uff09\uff1b\u751f\u6210\u7684\u65b0\u9898\u76ee\u88ab\u9876\u7ea7\uff08Grandmaster\u7ea7\uff09\u9009\u624b\u8bc4\u4e3a\u5177\u5907\u7ade\u8d5b\u8d28\u91cf\u3002", "conclusion": "AutoCode\u80fd\u53ef\u9760\u5730\u751f\u6210\u9ad8\u8d28\u91cf\u3001\u65b0\u9896\u4e14\u7b26\u5408\u7ade\u8d5b\u6807\u51c6\u7684\u7f16\u7a0b\u9898\u76ee\uff0c\u5c55\u793a\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5728\u590d\u6742\u4efb\u52a1\u751f\u6210\u65b9\u9762\u7684\u6f5c\u529b\u3002"}}
{"id": "2510.13203", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13203", "abs": "https://arxiv.org/abs/2510.13203", "authors": ["Mehdi Zekriyapanah Gashti"], "title": "Scrutiny new framework in integrated distributed reliable systems", "comment": null, "summary": "In this paper we represent a new framework for integrated distributed\nsystems. In the proposed framework we have used three parts to increase\nSatisfaction and Performance of this framework. At first we analyse integrated\nsystems and their evolution process and also ERPSD and ERPDRT framework briefly\nthen we explain the new FDIRS framework. Finally we compare the results of\nsimulation of the new framework with presented frameworks. Result showed In\nFIDRS framework, the technique of heterogeneous distributed data base is used\nto improve Performance and speed in responding to users. Finally by using FDIRS\nframework we succeeded to increase Efficiency, Performance and reliability of\nintegrated systems and remove some of previous frameworks problems.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aFDIRS\u7684\u65b0\u6846\u67b6\uff0c\u7528\u4e8e\u63d0\u5347\u96c6\u6210\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6027\u80fd\u3001\u6548\u7387\u548c\u53ef\u9760\u6027\uff0c\u901a\u8fc7\u5f02\u6784\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u6280\u672f\u4f18\u5316\u7528\u6237\u54cd\u5e94\u901f\u5ea6\uff0c\u5e76\u5728\u4eff\u771f\u4e2d\u4f18\u4e8e\u73b0\u6709\u6846\u67b6\u3002", "motivation": "\u73b0\u6709\u96c6\u6210\u7cfb\u7edf\u6846\u67b6\uff08\u5982ERPSD\u548cERPDRT\uff09\u5b58\u5728\u6027\u80fd\u3001\u6548\u7387\u548c\u53ef\u9760\u6027\u65b9\u9762\u7684\u4e0d\u8db3\uff0c\u4e9f\u9700\u4e00\u79cd\u66f4\u4f18\u7684\u89e3\u51b3\u65b9\u6848\u6765\u63d0\u5347\u7528\u6237\u6ee1\u610f\u5ea6\u548c\u7cfb\u7edf\u8868\u73b0\u3002", "method": "\u4f5c\u8005\u5206\u6790\u4e86\u73b0\u6709\u96c6\u6210\u7cfb\u7edf\u53ca\u5176\u6f14\u8fdb\u8fc7\u7a0b\uff0c\u63d0\u51fa\u4e86\u5305\u542b\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u65b0FDIRS\u6846\u67b6\uff0c\u5e76\u91c7\u7528\u5f02\u6784\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u6280\u672f\u4ee5\u589e\u5f3a\u7cfb\u7edf\u6027\u80fd\u3002", "result": "\u4eff\u771f\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cFDIRS\u6846\u67b6\u5728\u6027\u80fd\u3001\u6548\u7387\u548c\u53ef\u9760\u6027\u65b9\u9762\u4f18\u4e8e\u73b0\u6709\u6846\u67b6\uff0c\u5e76\u6709\u6548\u89e3\u51b3\u4e86\u5148\u524d\u6846\u67b6\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u3002", "conclusion": "FDIRS\u6846\u67b6\u901a\u8fc7\u5f15\u5165\u5f02\u6784\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u6280\u672f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u96c6\u6210\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6574\u4f53\u8868\u73b0\uff0c\u4e3a\u672a\u6765\u7cfb\u7edf\u8bbe\u8ba1\u63d0\u4f9b\u4e86\u6709\u6548\u53c2\u8003\u3002"}}
{"id": "2510.12948", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.12948", "abs": "https://arxiv.org/abs/2510.12948", "authors": ["Minh Nguyen"], "title": "SpareCodeSearch: Searching for Code Context When You Have No Spare GPU", "comment": "4 pages, 3 figures, 4 tables. Accepted to Context Collection Workshop\n  co-located with ASE'25", "summary": "Retrieval-Augmented Generation (RAG) frameworks aim to enhance Code Language\nModels (CLMs) by including another module for retrieving relevant context to\nconstruct the input prompt. However, these retrieval modules commonly use\nsemantic search, requiring substantial computational resources for training and\nhosting these embedded models, making them infeasible to integrate into\nlightweight applications such as in-IDE AI-based code completion. In this\nsolution paper, we prove that using keyword-search is sufficient to retrieve\nrelevant and useful code context inside large codebases, without the need for\nextensive GPU resources. The usefulness of code contexts found by our solution\nis demonstrated through their completion results on the Code Context\nCompetition's benchmark, reaching 0.748 and 0.725 chRF scores on Kotlin and\nPython tracks, respectively.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u5728\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08RAG\uff09\u6846\u67b6\u4e2d\u4f7f\u7528\u5173\u952e\u8bcd\u641c\u7d22\u66ff\u4ee3\u8bed\u4e49\u641c\u7d22\uff0c\u4ee5\u964d\u4f4e\u8d44\u6e90\u6d88\u8017\uff0c\u540c\u65f6\u5728\u5927\u578b\u4ee3\u7801\u5e93\u4e2d\u4ecd\u80fd\u6709\u6548\u68c0\u7d22\u6709\u7528\u4ee3\u7801\u4e0a\u4e0b\u6587\uff0c\u5e76\u5728\u4ee3\u7801\u4e0a\u4e0b\u6587\u7ade\u8d5b\u57fa\u51c6\u4e0a\u53d6\u5f97\u826f\u597d\u6210\u7ee9\u3002", "motivation": "\u73b0\u6709\u7684RAG\u6846\u67b6\u4f9d\u8d56\u8bed\u4e49\u641c\u7d22\u8fdb\u884c\u4e0a\u4e0b\u6587\u68c0\u7d22\uff0c\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u8d44\u6e90\uff0c\u96be\u4ee5\u5e94\u7528\u4e8e\u8f7b\u91cf\u7ea7\u573a\u666f\uff08\u5982IDE\u4e2d\u7684\u4ee3\u7801\u8865\u5168\uff09\u3002", "method": "\u91c7\u7528\u5173\u952e\u8bcd\u641c\u7d22\u65b9\u6cd5\u4ece\u5927\u578b\u4ee3\u7801\u5e93\u4e2d\u68c0\u7d22\u76f8\u5173\u4ee3\u7801\u4e0a\u4e0b\u6587\uff0c\u907f\u514d\u4f7f\u7528\u8d44\u6e90\u5bc6\u96c6\u578b\u7684\u5d4c\u5165\u6a21\u578b\u3002", "result": "\u5728Code Context Competition\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u8be5\u65b9\u6cd5\u5728Kotlin\u548cPython\u8d5b\u9053\u5206\u522b\u53d6\u5f97\u4e860.748\u548c0.725\u7684chRF\u5206\u6570\u3002", "conclusion": "\u5173\u952e\u8bcd\u641c\u7d22\u8db3\u4ee5\u5728\u4e0d\u4f9d\u8d56GPU\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b\u6709\u6548\u68c0\u7d22\u4ee3\u7801\u4e0a\u4e0b\u6587\uff0c\u9002\u7528\u4e8e\u8f7b\u91cf\u7ea7\u4ee3\u7801\u8865\u5168\u5e94\u7528\u3002"}}
{"id": "2510.13223", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13223", "abs": "https://arxiv.org/abs/2510.13223", "authors": ["Yiyuan He", "Minxian Xu", "Jingfeng Wu", "Jianmin Hu", "Chong Ma", "Min Shen", "Le Chen", "Chengzhong Xu", "Lin Qu", "Kejiang Ye"], "title": "BanaServe: Unified KV Cache and Dynamic Module Migration for Balancing Disaggregated LLM Serving in AI Infrastructure", "comment": "23 pages", "summary": "Large language models (LLMs) are increasingly deployed in AI infrastructure,\ndriving the need for high throughput, resource efficient serving systems.\nDisaggregated LLM serving, which separates prompt prefill from auto-regressive\ndecode, has emerged as a promising architecture by isolating their\nheterogeneous compute and memory demands. However, current disaggregated\nsystems face three key limitations: (i) static resource allocation cannot adapt\nto highly dynamic workloads, causing over-provisioning that wastes resources or\nunder-provisioning that violates service level objectives (SLOs); (ii) inherent\nload imbalance between prefill and decode stages, where prefill is\ncompute-bound and decode is memory-bound, causes under-utilization in one tier\nwhile the other becomes a bottleneck; and (iii) prefix cache aware routing\nskews load distribution, as high cache hit rate prefill nodes attract\ndisproportionately more requests, further degrading balance and efficiency. To\naddress these issues, we present BanaServe, a dynamic orchestration framework\nthat continuously rebalances computational and memory resources across prefill\nand decode instances while eliminating hotspots induced by cache. BanaServe\nintroduces layer level weight migration, attention level Key Value Cache (KV\nCache) migration, and Global KV Cache Store sharing with layer wise overlapped\ntransmission, enabling both coarse grained (layer level) and fine grained\n(attention level) load redistribution with minimal latency overhead. These\nmechanisms allow routers to perform purely load aware scheduling, unconstrained\nby cache placement. Compared to vLLM, BanaServe achieves 1.2x-3.9x higher\nthroughput with 3.9%-78.4% lower total processing time, and outperforms\nDistServe by 1.1x-2.8x in throughput with 1.4%-70.1% latency reduction.", "AI": {"tldr": "BanaServe \u662f\u4e00\u79cd\u9762\u5411\u89e3\u8026\u5f0f\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u670d\u52a1\u7684\u52a8\u6001\u7f16\u6392\u6846\u67b6\uff0c\u901a\u8fc7\u5c42\u7ea7\u522b\u6743\u91cd\u8fc1\u79fb\u3001\u6ce8\u610f\u529b\u7ea7\u522b KV \u7f13\u5b58\u8fc1\u79fb\u548c\u5168\u5c40 KV \u7f13\u5b58\u5171\u4eab\uff0c\u5b9e\u73b0\u8ba1\u7b97\u4e0e\u5185\u5b58\u8d44\u6e90\u7684\u52a8\u6001\u518d\u5e73\u8861\uff0c\u663e\u8457\u63d0\u5347\u541e\u5410\u91cf\u5e76\u964d\u4f4e\u5ef6\u8fdf\u3002", "motivation": "\u73b0\u6709\u89e3\u8026\u5f0f LLM \u670d\u52a1\u7cfb\u7edf\u5b58\u5728\u4e09\u5927\u95ee\u9898\uff1a\u9759\u6001\u8d44\u6e90\u5206\u914d\u65e0\u6cd5\u9002\u5e94\u52a8\u6001\u8d1f\u8f7d\u3001prefill \u4e0e decode \u9636\u6bb5\u8d1f\u8f7d\u4e0d\u5747\u8861\u3001\u4ee5\u53ca\u7f13\u5b58\u611f\u77e5\u8def\u7531\u5bfc\u81f4\u70ed\u70b9\u548c\u8d1f\u8f7d\u5931\u8861\u3002", "method": "BanaServe \u5f15\u5165\u5c42\u7ea7\u522b\u6743\u91cd\u8fc1\u79fb\u3001\u6ce8\u610f\u529b\u7ea7\u522b KV \u7f13\u5b58\u8fc1\u79fb\u548c\u5168\u5c40 KV \u7f13\u5b58\u5b58\u50a8\uff0c\u5e76\u7ed3\u5408\u5c42\u95f4\u91cd\u53e0\u4f20\u8f93\u673a\u5236\uff0c\u5b9e\u73b0\u7c97\u7c92\u5ea6\u4e0e\u7ec6\u7c92\u5ea6\u7684\u8d1f\u8f7d\u518d\u5206\u914d\uff0c\u4f7f\u8def\u7531\u8c03\u5ea6\u4ec5\u4f9d\u8d56\u8d1f\u8f7d\u72b6\u6001\u800c\u4e0d\u53d7\u7f13\u5b58\u4f4d\u7f6e\u9650\u5236\u3002", "result": "\u76f8\u6bd4 vLLM\uff0cBanaServe \u541e\u5410\u91cf\u63d0\u5347 1.2\u20133.9 \u500d\uff0c\u603b\u5904\u7406\u65f6\u95f4\u51cf\u5c11 3.9%\u201378.4%\uff1b\u76f8\u6bd4 DistServe\uff0c\u541e\u5410\u91cf\u63d0\u5347 1.1\u20132.8 \u500d\uff0c\u5ef6\u8fdf\u964d\u4f4e 1.4%\u201370.1%\u3002", "conclusion": "BanaServe \u6709\u6548\u89e3\u51b3\u4e86\u73b0\u6709\u89e3\u8026\u5f0f LLM \u670d\u52a1\u7cfb\u7edf\u4e2d\u7684\u8d44\u6e90\u5206\u914d\u50f5\u5316\u3001\u8d1f\u8f7d\u4e0d\u5747\u4e0e\u7f13\u5b58\u70ed\u70b9\u95ee\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u6548\u7387\u4e0e\u6027\u80fd\u3002"}}
{"id": "2510.13078", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13078", "abs": "https://arxiv.org/abs/2510.13078", "authors": ["Tri Minh-Triet Pham", "Diego Elias Costa", "Weiyi Shang", "Jinqiu Yang"], "title": "ADPerf: Investigating and Testing Performance in Autonomous Driving Systems", "comment": "13 pages, accepted by ASE 2025", "summary": "Obstacle detection is crucial to the operation of autonomous driving systems,\nwhich rely on multiple sensors, such as cameras and LiDARs, combined with code\nlogic and deep learning models to detect obstacles for time-sensitive\ndecisions. Consequently, obstacle detection latency is critical to the safety\nand effectiveness of autonomous driving systems. However, the latency of the\nobstacle detection module and its resilience to various changes in the LiDAR\npoint cloud data are not yet fully understood. In this work, we present the\nfirst comprehensive investigation on measuring and modeling the performance of\nthe obstacle detection modules in two industry-grade autonomous driving\nsystems, i.e., Apollo and Autoware. Learning from this investigation, we\nintroduce ADPerf, a tool that aims to generate realistic point cloud data test\ncases that can expose increased detection latency. Increasing latency decreases\nthe availability of the detected obstacles and stresses the capabilities of\nsubsequent modules in autonomous driving systems, i.e., the modules may be\nnegatively impacted by the increased latency in obstacle detection.\n  We applied ADPerf to stress-test the performance of widely used 3D obstacle\ndetection modules in autonomous driving systems, as well as the propagation of\nsuch tests on trajectory prediction modules. Our evaluation highlights the need\nto conduct performance testing of obstacle detection components, especially 3D\nobstacle detection, as they can be a major bottleneck to increased latency of\nthe autonomous driving system. Such an adverse outcome will also further\npropagate to other modules, reducing the overall reliability of autonomous\ndriving systems.", "AI": {"tldr": "\u672c\u6587\u9996\u6b21\u5bf9\u5de5\u4e1a\u7ea7\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\uff08Apollo\u548cAutoware\uff09\u4e2d\u7684\u969c\u788d\u7269\u68c0\u6d4b\u6a21\u5757\u8fdb\u884c\u6027\u80fd\u6d4b\u91cf\u4e0e\u5efa\u6a21\uff0c\u63d0\u51fa\u5de5\u5177ADPerf\u751f\u6210\u53ef\u52a0\u5267\u68c0\u6d4b\u5ef6\u8fdf\u7684\u70b9\u4e91\u6d4b\u8bd5\u7528\u4f8b\uff0c\u63ed\u793a3D\u969c\u788d\u7269\u68c0\u6d4b\u53ef\u80fd\u6210\u4e3a\u7cfb\u7edf\u5ef6\u8fdf\u74f6\u9888\uff0c\u5e76\u5f71\u54cd\u540e\u7eed\u6a21\u5757\uff08\u5982\u8f68\u8ff9\u9884\u6d4b\uff09\u7684\u53ef\u9760\u6027\u3002", "motivation": "\u969c\u788d\u7269\u68c0\u6d4b\u7684\u5ef6\u8fdf\u5bf9\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u548c\u6709\u6548\u6027\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u76ee\u524d\u5bf9\u5176\u5ef6\u8fdf\u7279\u6027\u53ca\u5bf9LiDAR\u70b9\u4e91\u53d8\u5316\u7684\u9c81\u68d2\u6027\u7f3a\u4e4f\u6df1\u5165\u7406\u89e3\u3002", "method": "\u5bf9Apollo\u548cAutoware\u4e24\u4e2a\u5de5\u4e1a\u7ea7\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u4e2d\u7684\u969c\u788d\u7269\u68c0\u6d4b\u6a21\u5757\u8fdb\u884c\u6027\u80fd\u6d4b\u91cf\u4e0e\u5efa\u6a21\uff0c\u5e76\u5f00\u53d1ADPerf\u5de5\u5177\u751f\u6210\u80fd\u66b4\u9732\u9ad8\u5ef6\u8fdf\u7684\u73b0\u5b9e\u70b9\u4e91\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fdb\u800c\u5bf93D\u969c\u788d\u7269\u68c0\u6d4b\u6a21\u5757\u53ca\u5176\u5bf9\u8f68\u8ff9\u9884\u6d4b\u6a21\u5757\u7684\u5f71\u54cd\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0c3D\u969c\u788d\u7269\u68c0\u6d4b\u6a21\u5757\u5728\u7279\u5b9a\u70b9\u4e91\u8f93\u5165\u4e0b\u4f1a\u51fa\u73b0\u663e\u8457\u5ef6\u8fdf\uff0c\u8be5\u5ef6\u8fdf\u4f1a\u4f20\u64ad\u81f3\u540e\u7eed\u6a21\u5757\uff0c\u964d\u4f4e\u6574\u4e2a\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u3002", "conclusion": "\u5fc5\u987b\u5bf9\u969c\u788d\u7269\u68c0\u6d4b\u7ec4\u4ef6\uff08\u5c24\u5176\u662f3D\u68c0\u6d4b\uff09\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u56e0\u5176\u53ef\u80fd\u6210\u4e3a\u7cfb\u7edf\u5ef6\u8fdf\u7684\u4e3b\u8981\u74f6\u9888\uff0c\u5e76\u5bf9\u6574\u4f53\u7cfb\u7edf\u53ef\u9760\u6027\u4ea7\u751f\u8fde\u9501\u8d1f\u9762\u5f71\u54cd\u3002"}}
{"id": "2510.13306", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.13306", "abs": "https://arxiv.org/abs/2510.13306", "authors": ["Jannick Borowitz", "Ernestine Gro\u00dfmann", "Mattthias Schimek"], "title": "Distributed Reductions for the Maximum Weight Independent Set Problem", "comment": null, "summary": "Finding maximum-weight independent sets in graphs is an important NP-hard\noptimization problem. Given a vertex-weighted graph $G$, the task is to find a\nsubset of pairwise non-adjacent vertices of $G$ with maximum weight. Most\nrecently published practical exact algorithms and heuristics for this problem\nuse a variety of data-reduction rules to compute (near-)optimal solutions.\nApplying these rules results in an equivalent instance of reduced size. An\noptimal solution to the reduced instance can be easily used to construct an\noptimal solution for the original input.\n  In this work, we present the first distributed-memory parallel reduction\nalgorithms for this problem, targeting graphs beyond the scale of previous\nsequential approaches. Furthermore, we propose the first distributed\nreduce-and-greedy and reduce-and-peel algorithms for finding a maximum weight\nindependent set heuristically.\n  In our practical evaluation, our experiments on up to $1024$ processors\ndemonstrate good scalability of our distributed reduce algorithms while\nmaintaining good reduction impact. Our asynchronous reduce-and-peel approach\nachieves an average speedup of $33\\times$ over a sequential state-of-the-art\nreduce-and-peel approach on 36 real-world graphs with a solution quality close\nto the sequential algorithm. Our reduce-and-greedy algorithms even achieve\naverage speedups of up to $50\\times$ at the cost of a lower solution quality.\nMoreover, our distributed approach allows us to consider graphs with more than\none billion vertices and 17 billion edges.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u9996\u4e2a\u9762\u5411\u6700\u5927\u6743\u72ec\u7acb\u96c6\u95ee\u9898\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5e76\u884c\u7ea6\u7b80\u7b97\u6cd5\uff0c\u5e76\u7ed3\u5408\u8d2a\u5fc3\u548c\u5265\u79bb\u7b56\u7565\u8bbe\u8ba1\u4e86\u4e24\u79cd\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u5728\u4fdd\u6301\u826f\u597d\u7ea6\u7b80\u6548\u679c\u7684\u540c\u65f6\u663e\u8457\u63d0\u5347\u4e86\u5927\u89c4\u6a21\u56fe\u7684\u6c42\u89e3\u901f\u5ea6\u548c\u53ef\u6269\u5c55\u6027\u3002", "motivation": "\u6700\u5927\u6743\u72ec\u7acb\u96c6\u95ee\u9898\u662fNP\u96be\u4f18\u5316\u95ee\u9898\uff0c\u73b0\u6709\u5b9e\u7528\u7b97\u6cd5\u4f9d\u8d56\u6570\u636e\u7ea6\u7b80\u89c4\u5219\uff0c\u4f46\u53d7\u9650\u4e8e\u4e32\u884c\u65b9\u6cd5\u7684\u89c4\u6a21\u5904\u7406\u80fd\u529b\uff0c\u96be\u4ee5\u5e94\u5bf9\u8d85\u5927\u89c4\u6a21\u56fe\u3002", "method": "\u63d0\u51fa\u9996\u4e2a\u5206\u5e03\u5f0f\u5185\u5b58\u5e76\u884c\u7ea6\u7b80\u7b97\u6cd5\uff0c\u5e76\u7ed3\u5408\u8d2a\u5fc3\uff08reduce-and-greedy\uff09\u4e0e\u5265\u79bb\uff08reduce-and-peel\uff09\u7b56\u7565\uff0c\u6784\u5efa\u5206\u5e03\u5f0f\u542f\u53d1\u5f0f\u6c42\u89e3\u6846\u67b6\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0c\u6240\u63d0\u65b9\u6cd5\u5728\u591a\u8fbe1024\u4e2a\u5904\u7406\u5668\u4e0a\u5177\u6709\u826f\u597d\u53ef\u6269\u5c55\u6027\uff1b\u5f02\u6b65reduce-and-peel\u65b9\u6cd5\u572836\u4e2a\u771f\u5b9e\u56fe\u4e0a\u5e73\u5747\u52a0\u901f33\u500d\uff0c\u89e3\u8d28\u91cf\u63a5\u8fd1\u4e32\u884c\u7b97\u6cd5\uff1breduce-and-greedy\u65b9\u6cd5\u5e73\u5747\u52a0\u901f\u8fbe50\u500d\uff0c\u4f46\u89e3\u8d28\u91cf\u7565\u4f4e\uff1b\u53ef\u5904\u7406\u8d85\u5341\u4ebf\u9876\u70b9\u548c170\u4ebf\u8fb9\u7684\u56fe\u3002", "conclusion": "\u8be5\u5de5\u4f5c\u6210\u529f\u5c06\u6700\u5927\u6743\u72ec\u7acb\u96c6\u95ee\u9898\u7684\u7ea6\u7b80\u6280\u672f\u6269\u5c55\u81f3\u5206\u5e03\u5f0f\u5185\u5b58\u73af\u5883\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5927\u89c4\u6a21\u56fe\u7684\u5904\u7406\u80fd\u529b\u4e0e\u6c42\u89e3\u6548\u7387\uff0c\u4e3a\u540e\u7eed\u7814\u7a76\u63d0\u4f9b\u4e86\u65b0\u65b9\u5411\u3002"}}
{"id": "2510.13106", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.13106", "abs": "https://arxiv.org/abs/2510.13106", "authors": ["Ruoyu Sun", "Da Song", "Jiayang Song", "Yuheng Huang", "Lei Ma"], "title": "TRUSTVIS: A Multi-Dimensional Trustworthiness Evaluation Framework for Large Language Models", "comment": "4 pages, 2 figures, To appear in ASE 2025 Demo Track", "summary": "As Large Language Models (LLMs) continue to revolutionize Natural Language\nProcessing (NLP) applications, critical concerns about their trustworthiness\npersist, particularly in safety and robustness. To address these challenges, we\nintroduce TRUSTVIS, an automated evaluation framework that provides a\ncomprehensive assessment of LLM trustworthiness. A key feature of our framework\nis its interactive user interface, designed to offer intuitive visualizations\nof trustworthiness metrics. By integrating well-known perturbation methods like\nAutoDAN and employing majority voting across various evaluation methods,\nTRUSTVIS not only provides reliable results but also makes complex evaluation\nprocesses accessible to users. Preliminary case studies on models like\nVicuna-7b, Llama2-7b, and GPT-3.5 demonstrate the effectiveness of our\nframework in identifying safety and robustness vulnerabilities, while the\ninteractive interface allows users to explore results in detail, empowering\ntargeted model improvements. Video Link: https://youtu.be/k1TrBqNVg8g", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86TRUSTVIS\uff0c\u4e00\u4e2a\u7528\u4e8e\u81ea\u52a8\u8bc4\u4f30\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u53ef\u4fe1\u5ea6\u7684\u6846\u67b6\uff0c\u96c6\u6210\u4e86\u6270\u52a8\u65b9\u6cd5\uff08\u5982AutoDAN\uff09\u548c\u591a\u79cd\u8bc4\u4f30\u7b56\u7565\u7684\u591a\u6570\u6295\u7968\u673a\u5236\uff0c\u5e76\u901a\u8fc7\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u754c\u9762\u5e2e\u52a9\u7528\u6237\u76f4\u89c2\u7406\u89e3\u6a21\u578b\u5728\u5b89\u5168\u6027\u548c\u9c81\u68d2\u6027\u65b9\u9762\u7684\u8868\u73b0\u3002", "motivation": "\u5927\u8bed\u8a00\u6a21\u578b\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5e94\u7528\u4e2d\u65e5\u76ca\u666e\u53ca\uff0c\u4f46\u5176\u5728\u5b89\u5168\u6027\u548c\u9c81\u68d2\u6027\u65b9\u9762\u7684\u53ef\u4fe1\u5ea6\u95ee\u9898\u4ecd\u4ee4\u4eba\u62c5\u5fe7\uff0c\u4e9f\u9700\u7cfb\u7edf\u5316\u3001\u53ef\u89e3\u91ca\u7684\u8bc4\u4f30\u5de5\u5177\u3002", "method": "TRUSTVIS\u6846\u67b6\u7ed3\u5408\u4e86\u5df2\u6709\u7684\u6270\u52a8\u65b9\u6cd5\uff08\u5982AutoDAN\uff09\uff0c\u91c7\u7528\u591a\u79cd\u8bc4\u4f30\u65b9\u6cd5\u7684\u591a\u6570\u6295\u7968\u673a\u5236\uff0c\u5e76\u901a\u8fc7\u4ea4\u4e92\u5f0f\u7528\u6237\u754c\u9762\u63d0\u4f9b\u76f4\u89c2\u7684\u53ef\u4fe1\u5ea6\u6307\u6807\u53ef\u89c6\u5316\u3002", "result": "\u5728Vicuna-7b\u3001Llama2-7b\u548cGPT-3.5\u7b49\u6a21\u578b\u4e0a\u7684\u521d\u6b65\u6848\u4f8b\u7814\u7a76\u8868\u660e\uff0cTRUSTVIS\u80fd\u6709\u6548\u8bc6\u522b\u6a21\u578b\u5728\u5b89\u5168\u6027\u548c\u9c81\u68d2\u6027\u65b9\u9762\u7684\u6f0f\u6d1e\uff0c\u5e76\u652f\u6301\u7528\u6237\u6df1\u5165\u63a2\u7d22\u8bc4\u4f30\u7ed3\u679c\u3002", "conclusion": "TRUSTVIS\u4e3a\u5927\u8bed\u8a00\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u8bc4\u4f30\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u9760\u3001\u76f4\u89c2\u4e14\u7528\u6237\u53cb\u597d\u7684\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u6709\u52a9\u4e8e\u63a8\u52a8\u9488\u5bf9\u6027\u7684\u6a21\u578b\u6539\u8fdb\u3002"}}
{"id": "2510.13343", "categories": ["cs.MA", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13343", "abs": "https://arxiv.org/abs/2510.13343", "authors": ["Shota Takayama", "Katsuhide Fujita"], "title": "AOAD-MAT: Transformer-based multi-agent deep reinforcement learning model considering agents' order of action decisions", "comment": "This manuscript is an extended version of the work accepted as a\n  short paper at the 26th International Conference on Principles and Practice\n  of Multi-Agent Systems (PRIMA 2025). The Version of Record of this\n  contribution is published in Springer's Lecture Notes in Artificial\n  Intelligence series (LNCS/LNAI)", "summary": "Multi-agent reinforcement learning focuses on training the behaviors of\nmultiple learning agents that coexist in a shared environment. Recently, MARL\nmodels, such as the Multi-Agent Transformer (MAT) and ACtion dEpendent deep\nQ-learning (ACE), have significantly improved performance by leveraging\nsequential decision-making processes. Although these models can enhance\nperformance, they do not explicitly consider the importance of the order in\nwhich agents make decisions. In this paper, we propose an Agent Order of Action\nDecisions-MAT (AOAD-MAT), a novel MAT model that considers the order in which\nagents make decisions. The proposed model explicitly incorporates the sequence\nof action decisions into the learning process, allowing the model to learn and\npredict the optimal order of agent actions. The AOAD-MAT model leverages a\nTransformer-based actor-critic architecture that dynamically adjusts the\nsequence of agent actions. To achieve this, we introduce a novel MARL\narchitecture that cooperates with a subtask focused on predicting the next\nagent to act, integrated into a Proximal Policy Optimization based loss\nfunction to synergistically maximize the advantage of the sequential\ndecision-making. The proposed method was validated through extensive\nexperiments on the StarCraft Multi-Agent Challenge and Multi-Agent MuJoCo\nbenchmarks. The experimental results show that the proposed AOAD-MAT model\noutperforms existing MAT and other baseline models, demonstrating the\neffectiveness of adjusting the AOAD order in MARL.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aAOAD-MAT\u7684\u65b0\u6a21\u578b\uff0c\u901a\u8fc7\u5728\u591a\u667a\u80fd\u4f53\u5f3a\u5316\u5b66\u4e60\u4e2d\u663e\u5f0f\u5efa\u6a21\u667a\u80fd\u4f53\u52a8\u4f5c\u51b3\u7b56\u7684\u987a\u5e8f\uff0c\u5229\u7528\u57fa\u4e8eTransformer\u7684Actor-Critic\u67b6\u6784\u548c\u96c6\u6210\u7684\u5b50\u4efb\u52a1\u9884\u6d4b\u673a\u5236\uff0c\u5728StarCraft\u548cMuJoCo\u57fa\u51c6\u4e0a\u53d6\u5f97\u4e86\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u7684\u6027\u80fd\u3002", "motivation": "\u73b0\u6709MARL\u6a21\u578b\uff08\u5982MAT\u548cACE\uff09\u867d\u5229\u7528\u4e86\u5e8f\u5217\u51b3\u7b56\u8fc7\u7a0b\uff0c\u4f46\u672a\u663e\u5f0f\u8003\u8651\u667a\u80fd\u4f53\u52a8\u4f5c\u987a\u5e8f\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u3002\u4f5c\u8005\u65e8\u5728\u901a\u8fc7\u5efa\u6a21\u6700\u4f18\u52a8\u4f5c\u987a\u5e8f\u6765\u8fdb\u4e00\u6b65\u63d0\u5347\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u7684\u534f\u4f5c\u6548\u7387\u4e0e\u6027\u80fd\u3002", "method": "\u63d0\u51faAOAD-MAT\u6a21\u578b\uff0c\u7ed3\u5408Transformer\u67b6\u6784\u7684Actor-Critic\u6846\u67b6\uff0c\u5f15\u5165\u4e00\u4e2a\u5b50\u4efb\u52a1\u7528\u4e8e\u9884\u6d4b\u4e0b\u4e00\u4e2a\u5e94\u6267\u884c\u52a8\u4f5c\u7684\u667a\u80fd\u4f53\uff0c\u5e76\u5c06\u5176\u6574\u5408\u5230\u57fa\u4e8ePPO\u7684\u635f\u5931\u51fd\u6570\u4e2d\uff0c\u4ee5\u52a8\u6001\u8c03\u6574\u667a\u80fd\u4f53\u52a8\u4f5c\u987a\u5e8f\u3002", "result": "\u5728StarCraft Multi-Agent Challenge\u548cMulti-Agent MuJoCo\u57fa\u51c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0cAOAD-MAT\u4f18\u4e8e\u539f\u59cbMAT\u53ca\u5176\u4ed6\u57fa\u7ebf\u6a21\u578b\u3002", "conclusion": "\u663e\u5f0f\u5efa\u6a21\u667a\u80fd\u4f53\u52a8\u4f5c\u987a\u5e8f\u80fd\u6709\u6548\u63d0\u5347\u591a\u667a\u80fd\u4f53\u5f3a\u5316\u5b66\u4e60\u6027\u80fd\uff0cAOAD-MAT\u901a\u8fc7\u52a8\u6001\u8c03\u6574\u52a8\u4f5c\u5e8f\u5217\u5b9e\u73b0\u4e86\u66f4\u4f18\u7684\u534f\u4f5c\u7b56\u7565\u3002"}}
{"id": "2510.13664", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13664", "abs": "https://arxiv.org/abs/2510.13664", "authors": ["Muhammad Haseeb", "Jinkun Geng", "Radhika Mittal", "Aurojit Panda", "Srinivas Narayana", "Anirudh Sivaraman"], "title": "Fair Ordering", "comment": null, "summary": "A growing class of applications demands \\emph{fair ordering/sequencing} of\nevents which ensures that events generated earlier by one client are processed\nbefore later events from other clients. However, achieving such sequencing is\nfundamentally challenging due to the inherent limitations of clock\nsynchronization. We advocate for an approach that embraces, rather than\neliminates, clock variability. Instead of attempting to remove error from a\ntimestamp, Tommy, our proposed system, leverages a statistical model to compare\ntwo noisy timestamps probabilistically by learning per-clock offset\ndistributions. Our preliminary statistical model computes the probability that\none event precedes another w.r.t. the wall-clock time without access to the\nwall-clock. This serves as a foundation for a new relation:\n\\emph{likely-happened-before} denoted by $\\xrightarrow{p}$ where $p$ represents\nthe probability of an event to have happened before another. The\n$\\xrightarrow{p}$ relation provides a basis for ordering multiple events which\nare otherwise considered \\emph{concurrent} by the typical\n\\emph{happened-before} ($\\rightarrow$) relation. We highlight various related\nchallenges including intransitivity of $\\xrightarrow{p}$ relation as opposed to\nthe transitive $\\rightarrow$ relation. We also outline several research\ndirections: online fair sequencing, stochastically fair total ordering,\nhost-level support for fairness and more.", "AI": {"tldr": "Tommy\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7edf\u8ba1\u6a21\u578b\u7684\u4e8b\u4ef6\u6392\u5e8f\u65b9\u6cd5\uff0c\u901a\u8fc7\u5b66\u4e60\u5404\u65f6\u949f\u7684\u504f\u79fb\u5206\u5e03\uff0c\u4ee5\u6982\u7387\u65b9\u5f0f\u6bd4\u8f83\u5e26\u566a\u58f0\u7684\u65f6\u95f4\u6233\uff0c\u4ece\u800c\u5b9a\u4e49\u201c\u5f88\u53ef\u80fd\u5148\u53d1\u751f\u201d\uff08likely-happened-before\uff09\u5173\u7cfb\uff0c\u7528\u4e8e\u5b9e\u73b0\u66f4\u516c\u5e73\u7684\u4e8b\u4ef6\u6392\u5e8f\u3002", "motivation": "\u4f20\u7edf\u4e8b\u4ef6\u6392\u5e8f\u4f9d\u8d56\u7cbe\u786e\u65f6\u949f\u540c\u6b65\uff0c\u4f46\u65f6\u949f\u540c\u6b65\u5b58\u5728\u56fa\u6709\u5c40\u9650\uff1b\u73b0\u6709\u201chappened-before\u201d\u5173\u7cfb\u65e0\u6cd5\u533a\u5206\u5e76\u53d1\u4e8b\u4ef6\uff0c\u96be\u4ee5\u6ee1\u8db3\u516c\u5e73\u6392\u5e8f\u9700\u6c42\u3002", "method": "Tommy\u5229\u7528\u7edf\u8ba1\u6a21\u578b\u5b66\u4e60\u6bcf\u4e2a\u5ba2\u6237\u7aef\u65f6\u949f\u7684\u504f\u79fb\u5206\u5e03\uff0c\u5728\u4e0d\u4f9d\u8d56\u771f\u5b9e\u5899\u949f\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5e26\u566a\u58f0\u65f6\u95f4\u6233\u4e4b\u95f4\u4e8b\u4ef6\u5148\u540e\u7684\u6982\u7387\uff0c\u6784\u5efa\u6982\u7387\u5316\u7684\u201c\u5f88\u53ef\u80fd\u5148\u53d1\u751f\u201d\uff08$\\xrightarrow{p}$\uff09\u5173\u7cfb\u3002", "result": "\u521d\u6b65\u6a21\u578b\u80fd\u6709\u6548\u4f30\u8ba1\u4e8b\u4ef6\u5728\u771f\u5b9e\u65f6\u95f4\u4e2d\u7684\u5148\u540e\u6982\u7387\uff0c\u4e3a\u5e76\u53d1\u4e8b\u4ef6\u63d0\u4f9b\u66f4\u7ec6\u7c92\u5ea6\u7684\u6392\u5e8f\u4f9d\u636e\uff0c\u5e76\u63ed\u793a\u4e86$\\xrightarrow{p}$\u5173\u7cfb\u7684\u975e\u4f20\u9012\u6027\u7b49\u65b0\u6311\u6218\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u4e3a\u516c\u5e73\u4e8b\u4ef6\u6392\u5e8f\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\uff0c\u672a\u6765\u53ef\u63a2\u7d22\u5728\u7ebf\u516c\u5e73\u6392\u5e8f\u3001\u968f\u673a\u516c\u5e73\u5168\u5e8f\u3001\u4e3b\u673a\u7ea7\u516c\u5e73\u652f\u6301\u7b49\u65b9\u5411\u3002"}}
{"id": "2510.13176", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13176", "abs": "https://arxiv.org/abs/2510.13176", "authors": ["Haolin Pan", "Chao Zha", "Jinyuan Dong", "Mingjie Xing", "Yanjun Wu"], "title": "GRACE: Globally-Seeded Representation-Aware Cluster-Specific Evolution for Compiler Auto-Tuning", "comment": null, "summary": "Compiler pass selection and phase ordering present a significant challenge in\nachieving optimal program performance, particularly for objectives like code\nsize reduction. Standard compiler heuristics offer general applicability but\noften yield suboptimal, program-specific results due to their one-size-fits-all\nnature. While iterative compilation can find tailored solutions, its\nprohibitive search cost limits practical use. Machine learning approaches\npromise faster inference but frequently struggle with generalization to unseen\nprograms. This paper introduces GRACE, a novel framework for compiler\nauto-tuning, demonstrated for LLVM IR instruction count optimization. GRACE\neffectively curtails the search space by leveraging pass synergies and a\nweighted scoring method to generate initial high-quality candidate sequences\nand a pass pool. It then employs contrastive learning, using pass\nsequence-based data augmentation, to create program embeddings that facilitate\nsimilarity-aware clustering. Evolutionary search within these clusters yields a\ncoreset of $k$ specialized pass sequences designed for robust generalization to\nunseen programs. At test time, GRACE efficiently selects the best coreset\nsequence and refines it using lightweight techniques. Experimental results on\nseven diverse datasets show that GRACE reduces LLVM IR instruction count by an\naverage of 10.09% on LLVM 10.0.0 and 10.19% on LLVM 18.1.6 compared to opt -Oz,\nwhile incurring an average tuning time of less than 1s per program,\ndemonstrating its state-of-the-art performance and practical effectiveness.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86GRACE\u6846\u67b6\uff0c\u901a\u8fc7\u7ed3\u5408\u7f16\u8bd1\u5668pass\u534f\u540c\u6548\u5e94\u3001\u5bf9\u6bd4\u5b66\u4e60\u548c\u8fdb\u5316\u641c\u7d22\uff0c\u5728\u663e\u8457\u964d\u4f4eLLVM IR\u6307\u4ee4\u6570\u7684\u540c\u65f6\u4fdd\u6301\u6781\u4f4e\u7684\u8c03\u4f18\u5f00\u9500\uff0c\u5b9e\u73b0\u4e86\u5bf9\u672a\u89c1\u7a0b\u5e8f\u7684\u826f\u597d\u6cdb\u5316\u80fd\u529b\u3002", "motivation": "\u4f20\u7edf\u7f16\u8bd1\u5668\u542f\u53d1\u5f0f\u65b9\u6cd5\u5728\u4ee3\u7801\u5927\u5c0f\u4f18\u5316\u7b49\u76ee\u6807\u4e0a\u8868\u73b0\u6b21\u4f18\uff0c\u8fed\u4ee3\u7f16\u8bd1\u641c\u7d22\u6210\u672c\u8fc7\u9ad8\uff0c\u800c\u73b0\u6709\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u6cdb\u5316\u80fd\u529b\u6709\u9650\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u517c\u987e\u9ad8\u6548\u6027\u4e0e\u6cdb\u5316\u80fd\u529b\u7684\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u4f18\u65b9\u6848\u3002", "method": "GRACE\u5229\u7528pass\u534f\u540c\u6548\u5e94\u548c\u52a0\u6743\u8bc4\u5206\u751f\u6210\u9ad8\u8d28\u91cf\u5019\u9009\u5e8f\u5217\u4e0epass\u6c60\uff0c\u901a\u8fc7\u57fa\u4e8epass\u5e8f\u5217\u7684\u6570\u636e\u589e\u5f3a\u8fdb\u884c\u5bf9\u6bd4\u5b66\u4e60\uff0c\u6784\u5efa\u7a0b\u5e8f\u5d4c\u5165\u4ee5\u5b9e\u73b0\u76f8\u4f3c\u6027\u611f\u77e5\u805a\u7c7b\uff0c\u5e76\u5728\u805a\u7c7b\u5185\u8fdb\u884c\u8fdb\u5316\u641c\u7d22\uff0c\u5f97\u5230k\u4e2a\u4e13\u7528pass\u5e8f\u5217\uff1b\u6d4b\u8bd5\u65f6\u4ece\u4e2d\u9009\u62e9\u6700\u4f18\u5e8f\u5217\u5e76\u8f7b\u91cf\u5fae\u8c03\u3002", "result": "\u5728\u4e03\u4e2a\u6570\u636e\u96c6\u4e0a\uff0cGRACE\u76f8\u6bd4LLVM\u7684-Oz\u9009\u9879\u5e73\u5747\u51cf\u5c1110.09%\uff08LLVM 10.0.0\uff09\u548c10.19%\uff08LLVM 18.1.6\uff09\u7684IR\u6307\u4ee4\u6570\uff0c\u4e14\u6bcf\u4e2a\u7a0b\u5e8f\u5e73\u5747\u8c03\u4f18\u65f6\u95f4\u4e0d\u52301\u79d2\u3002", "conclusion": "GRACE\u5728\u7f16\u8bd1\u5668pass\u9009\u62e9\u4e0e\u6392\u5e8f\u95ee\u9898\u4e0a\u5b9e\u73b0\u4e86\u5148\u8fdb\u6027\u80fd\uff0c\u5728\u663e\u8457\u63d0\u5347\u4f18\u5316\u6548\u679c\u7684\u540c\u65f6\u5177\u5907\u5b9e\u7528\u6027\u548c\u826f\u597d\u7684\u6cdb\u5316\u80fd\u529b\u3002"}}
{"id": "2510.13724", "categories": ["cs.DC", "cs.AI", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13724", "abs": "https://arxiv.org/abs/2510.13724", "authors": ["Aditya Tanikanti", "Benoit C\u00f4t\u00e9", "Yanfei Guo", "Le Chen", "Nickolaus Saint", "Ryan Chard", "Ken Raffenetti", "Rajeev Thakur", "Thomas Uram", "Ian Foster", "Michael E. Papka", "Venkatram Vishwanath"], "title": "FIRST: Federated Inference Resource Scheduling Toolkit for Scientific AI Model Access", "comment": null, "summary": "We present the Federated Inference Resource Scheduling Toolkit (FIRST), a\nframework enabling Inference-as-a-Service across distributed High-Performance\nComputing (HPC) clusters. FIRST provides cloud-like access to diverse AI\nmodels, like Large Language Models (LLMs), on existing HPC infrastructure.\nLeveraging Globus Auth and Globus Compute, the system allows researchers to run\nparallel inference workloads via an OpenAI-compliant API on private, secure\nenvironments. This cluster-agnostic API allows requests to be distributed\nacross federated clusters, targeting numerous hosted models. FIRST supports\nmultiple inference backends (e.g., vLLM), auto-scales resources, maintains\n\"hot\" nodes for low-latency execution, and offers both high-throughput batch\nand interactive modes. The framework addresses the growing demand for private,\nsecure, and scalable AI inference in scientific workflows, allowing researchers\nto generate billions of tokens daily on-premises without relying on commercial\ncloud infrastructure.", "AI": {"tldr": "FIRST \u662f\u4e00\u4e2a\u652f\u6301\u8de8\u5206\u5e03\u5f0f\u9ad8\u6027\u80fd\u8ba1\u7b97\uff08HPC\uff09\u96c6\u7fa4\u63d0\u4f9b\u63a8\u7406\u5373\u670d\u52a1\uff08Inference-as-a-Service\uff09\u7684\u5de5\u5177\u5305\uff0c\u901a\u8fc7\u517c\u5bb9 OpenAI \u7684 API \u5b9e\u73b0\u79c1\u6709\u3001\u5b89\u5168\u3001\u53ef\u6269\u5c55\u7684 AI \u6a21\u578b\u63a8\u7406\u3002", "motivation": "\u79d1\u5b66\u5de5\u4f5c\u6d41\u5bf9\u79c1\u6709\u3001\u5b89\u5168\u4e14\u53ef\u6269\u5c55\u7684 AI \u63a8\u7406\u9700\u6c42\u65e5\u76ca\u589e\u957f\uff0c\u7814\u7a76\u4eba\u5458\u5e0c\u671b\u5728\u672c\u5730 HPC \u57fa\u7840\u8bbe\u65bd\u4e0a\u9ad8\u6548\u8fd0\u884c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u7b49 AI \u6a21\u578b\uff0c\u800c\u4e0d\u4f9d\u8d56\u5546\u4e1a\u4e91\u670d\u52a1\u3002", "method": "FIRST \u5229\u7528 Globus Auth \u548c Globus Compute \u6784\u5efa\u4e86\u4e00\u4e2a\u96c6\u7fa4\u65e0\u5173\u7684 API \u6846\u67b6\uff0c\u652f\u6301\u591a\u79cd\u63a8\u7406\u540e\u7aef\uff08\u5982 vLLM\uff09\uff0c\u5177\u5907\u81ea\u52a8\u6269\u7f29\u5bb9\u3001\u201c\u70ed\u201d\u8282\u70b9\u7ef4\u6301\u3001\u9ad8\u541e\u5410\u6279\u5904\u7406\u548c\u4ea4\u4e92\u5f0f\u63a8\u7406\u6a21\u5f0f\u3002", "result": "\u8be5\u6846\u67b6\u53ef\u5728\u8054\u90a6 HPC \u96c6\u7fa4\u4e0a\u6bcf\u65e5\u751f\u6210\u6570\u5341\u4ebf tokens\uff0c\u5b9e\u73b0\u4f4e\u5ef6\u8fdf\u3001\u9ad8\u541e\u5410\u7684\u79c1\u6709 AI \u63a8\u7406\u670d\u52a1\u3002", "conclusion": "FIRST \u6709\u6548\u6ee1\u8db3\u4e86\u79d1\u7814\u573a\u666f\u4e0b\u5bf9\u5b89\u5168\u3001\u53ef\u6269\u5c55\u3001\u9ad8\u6027\u80fd\u672c\u5730 AI \u63a8\u7406\u7684\u9700\u6c42\uff0c\u4e3a\u5728\u73b0\u6709 HPC \u57fa\u7840\u8bbe\u65bd\u4e0a\u90e8\u7f72\u548c\u4f7f\u7528\u5927\u578b AI \u6a21\u578b\u63d0\u4f9b\u4e86\u5b9e\u7528\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2510.13755", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13755", "abs": "https://arxiv.org/abs/2510.13755", "authors": ["Timoth\u00e9 Albouy", "Antonio Fern\u00e1ndez Anta", "Chryssis Georgiou", "Nicolas Nicolaou", "Junlang Wang"], "title": "Tight Conditions for Binary-Output Tasks under Crashes", "comment": null, "summary": "This paper explores necessary and sufficient system conditions to solve\ndistributed tasks with binary outputs (\\textit{i.e.}, tasks with output values\nin $\\{0,1\\}$). We focus on the distinct output sets of values a task can\nproduce (intentionally disregarding validity and value multiplicity),\nconsidering that some processes may output no value. In a distributed system\nwith $n$ processes, of which up to $t \\leq n$ can crash, we provide a complete\ncharacterization of the tight conditions on $n$ and $t$ under which every class\nof tasks with binary outputs is solvable, for both synchronous and asynchronous\nsystems. This output-set approach yields highly general results: it unifies\nmultiple distributed computing problems, such as binary consensus and symmetry\nbreaking, and it produces impossibility proofs that hold for stronger task\nformulations, including those that consider validity, account for value\nmultiplicity, or move beyond binary outputs.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u5728\u6700\u591a t \u4e2a\u8fdb\u7a0b\u53ef\u80fd\u5d29\u6e83\u7684 n \u8fdb\u7a0b\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6c42\u89e3\u4e8c\u5143\u8f93\u51fa\u4efb\u52a1\uff08\u8f93\u51fa\u503c\u4e3a {0,1}\uff09\u6240\u9700\u7684 n \u4e0e t \u7684\u7cbe\u786e\u6761\u4ef6\uff0c\u9002\u7528\u4e8e\u540c\u6b65\u4e0e\u5f02\u6b65\u7cfb\u7edf\uff0c\u5e76\u7edf\u4e00\u4e86\u5982\u4e8c\u5143\u5171\u8bc6\u548c\u5bf9\u79f0\u6027\u7834\u7f3a\u7b49\u95ee\u9898\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u901a\u5e38\u5173\u6ce8\u4efb\u52a1\u7684\u6709\u6548\u6027\u6216\u8f93\u51fa\u503c\u7684\u591a\u91cd\u6027\uff0c\u800c\u672c\u6587\u65e8\u5728\u901a\u8fc7\u4ec5\u5173\u6ce8\u4efb\u52a1\u53ef\u80fd\u4ea7\u751f\u7684\u4e0d\u540c\u8f93\u51fa\u96c6\u5408\uff08\u5ffd\u7565\u6709\u6548\u6027\u4e0e\u591a\u91cd\u6027\uff09\uff0c\u5efa\u7acb\u4e00\u4e2a\u66f4\u901a\u7528\u7684\u6846\u67b6\uff0c\u4ee5\u7edf\u4e00\u5206\u6790\u591a\u79cd\u5206\u5e03\u5f0f\u8ba1\u7b97\u95ee\u9898\u5e76\u63a8\u5bfc\u66f4\u5f3a\u7684\u4e0d\u53ef\u80fd\u6027\u7ed3\u8bba\u3002", "method": "\u4f5c\u8005\u91c7\u7528\u201c\u8f93\u51fa\u96c6\u201d\u65b9\u6cd5\uff0c\u5206\u6790\u5728 n \u4e2a\u8fdb\u7a0b\u4e2d\u6700\u591a t \u4e2a\u53ef\u80fd\u5d29\u6e83\u7684\u60c5\u51b5\u4e0b\uff0c\u4e8c\u5143\u8f93\u51fa\u4efb\u52a1\u53ef\u89e3\u7684\u5145\u8981\u7cfb\u7edf\u6761\u4ef6\uff0c\u5206\u522b\u9488\u5bf9\u540c\u6b65\u548c\u5f02\u6b65\u7cfb\u7edf\u8fdb\u884c\u5b8c\u6574\u523b\u753b\u3002", "result": "\u8bba\u6587\u7ed9\u51fa\u4e86\u5728\u540c\u6b65\u548c\u5f02\u6b65\u7cfb\u7edf\u4e2d\uff0c\u6240\u6709\u4e8c\u5143\u8f93\u51fa\u4efb\u52a1\u7c7b\u53ef\u89e3\u7684 n \u4e0e t \u7684\u7d27\u81f4\u6761\u4ef6\uff1b\u8be5\u65b9\u6cd5\u4e0d\u4ec5\u7edf\u4e00\u4e86\u591a\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u8fd8\u5bfc\u51fa\u4e86\u9002\u7528\u4e8e\u66f4\u5e7f\u6cdb\u4efb\u52a1\u5b9a\u4e49\uff08\u5982\u8003\u8651\u6709\u6548\u6027\u3001\u503c\u591a\u91cd\u6027\u6216\u975e\u4e8c\u5143\u8f93\u51fa\uff09\u7684\u4e0d\u53ef\u80fd\u6027\u8bc1\u660e\u3002", "conclusion": "\u901a\u8fc7\u805a\u7126\u8f93\u51fa\u96c6\u800c\u975e\u4f20\u7edf\u7ea6\u675f\uff0c\u8be5\u5de5\u4f5c\u4e3a\u5206\u5e03\u5f0f\u4efb\u52a1\u53ef\u89e3\u6027\u63d0\u4f9b\u4e86\u9ad8\u5ea6\u901a\u7528\u7684\u7406\u8bba\u57fa\u7840\uff0c\u589e\u5f3a\u4e86\u5bf9\u5171\u8bc6\u3001\u5bf9\u79f0\u7834\u7f3a\u7b49\u95ee\u9898\u7684\u7406\u89e3\uff0c\u5e76\u6269\u5c55\u4e86\u4e0d\u53ef\u80fd\u6027\u7ed3\u679c\u7684\u9002\u7528\u8303\u56f4\u3002"}}
{"id": "2510.13424", "categories": ["cs.SE", "D.2.5; G.1.3"], "pdf": "https://arxiv.org/pdf/2510.13424", "abs": "https://arxiv.org/abs/2510.13424", "authors": ["Alexander C. Wilton"], "title": "Verifying a Sparse Matrix Algorithm Using Symbolic Execution", "comment": "In Proceedings VSS 2025, arXiv:2510.12314", "summary": "Scientific software is, by its very nature, complex. It is mathematical and\nhighly optimized which makes it prone to subtle bugs not as easily detected by\ntraditional testing. We outline how symbolic execution can be used to write\ntests similar to traditional unit tests while providing stronger verification\nguarantees and apply this methodology to a sparse matrix algorithm.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4f7f\u7528\u7b26\u53f7\u6267\u884c\u6765\u4e3a\u79d1\u5b66\u8f6f\u4ef6\u7f16\u5199\u7c7b\u4f3c\u4f20\u7edf\u5355\u5143\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4ee5\u63d0\u4f9b\u66f4\u5f3a\u7684\u9a8c\u8bc1\u4fdd\u8bc1\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u4e8e\u7a00\u758f\u77e9\u9635\u7b97\u6cd5\u3002", "motivation": "\u79d1\u5b66\u8f6f\u4ef6\u56e0\u5176\u6570\u5b66\u6027\u548c\u9ad8\u5ea6\u4f18\u5316\u7279\u6027\uff0c\u5bb9\u6613\u4ea7\u751f\u4f20\u7edf\u6d4b\u8bd5\u96be\u4ee5\u53d1\u73b0\u7684\u7ec6\u5fae\u9519\u8bef\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u5f3a\u5927\u7684\u9a8c\u8bc1\u65b9\u6cd5\u3002", "method": "\u91c7\u7528\u7b26\u53f7\u6267\u884c\u6280\u672f\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7c7b\u4f3c\u4e8e\u4f20\u7edf\u5355\u5143\u6d4b\u8bd5\uff0c\u4f46\u80fd\u63d0\u4f9b\u66f4\u5f3a\u7684\u9a8c\u8bc1\u4fdd\u969c\u3002", "result": "\u8be5\u65b9\u6cd5\u6210\u529f\u5e94\u7528\u4e8e\u7a00\u758f\u77e9\u9635\u7b97\u6cd5\uff0c\u5c55\u793a\u4e86\u5176\u5728\u68c0\u6d4b\u79d1\u5b66\u8f6f\u4ef6\u4e2d\u9690\u853d\u9519\u8bef\u65b9\u9762\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u7b26\u53f7\u6267\u884c\u53ef\u6709\u6548\u589e\u5f3a\u79d1\u5b66\u8f6f\u4ef6\u7684\u6d4b\u8bd5\u80fd\u529b\uff0c\u63d0\u4f9b\u6bd4\u4f20\u7edf\u6d4b\u8bd5\u66f4\u5f3a\u7684\u6b63\u786e\u6027\u4fdd\u8bc1\u3002"}}
{"id": "2510.13561", "categories": ["cs.SE", "cs.AI", "68N30"], "pdf": "https://arxiv.org/pdf/2510.13561", "abs": "https://arxiv.org/abs/2510.13561", "authors": ["Peng Di", "Faqiang Chen", "Xiao Bai", "Hongjun Yang", "Qingfeng Li", "Ganglin Wei", "Jian Mou", "Feng Shi", "Keting Chen", "Peng Tang", "Zhitao Shen", "Zheng Li", "Wenhui Shi", "Junwei Guo", "Hang Yu"], "title": "OpenDerisk: An Industrial Framework for AI-Driven SRE, with Design, Implementation, and Case Studies", "comment": "23 pages", "summary": "The escalating complexity of modern software imposes an unsustainable\noperational burden on Site Reliability Engineering (SRE) teams, demanding\nAI-driven automation that can emulate expert diagnostic reasoning. Existing\nsolutions, from traditional AI methods to general-purpose multi-agent systems,\nfall short: they either lack deep causal reasoning or are not tailored for the\nspecialized, investigative workflows unique to SRE. To address this gap, we\npresent OpenDerisk, a specialized, open-source multi-agent framework\narchitected for SRE. OpenDerisk integrates a diagnostic-native collaboration\nmodel, a pluggable reasoning engine, a knowledge engine, and a standardized\nprotocol (MCP) to enable specialist agents to collectively solve complex,\nmulti-domain problems. Our comprehensive evaluation demonstrates that\nOpenDerisk significantly outperforms state-of-the-art baselines in both\naccuracy and efficiency. This effectiveness is validated by its large-scale\nproduction deployment at Ant Group, where it serves over 3,000 daily users\nacross diverse scenarios, confirming its industrial-grade scalability and\npractical impact. OpenDerisk is open source and available at\nhttps://github.com/derisk-ai/OpenDerisk/", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86 OpenDerisk\uff0c\u4e00\u4e2a\u4e13\u4e3a\u7ad9\u70b9\u53ef\u9760\u6027\u5de5\u7a0b\uff08SRE\uff09\u8bbe\u8ba1\u7684\u5f00\u6e90\u591a\u667a\u80fd\u4f53\u6846\u67b6\uff0c\u901a\u8fc7\u96c6\u6210\u8bca\u65ad\u539f\u751f\u534f\u4f5c\u6a21\u578b\u3001\u53ef\u63d2\u62d4\u63a8\u7406\u5f15\u64ce\u3001\u77e5\u8bc6\u5f15\u64ce\u548c\u6807\u51c6\u5316\u534f\u8bae\uff08MCP\uff09\uff0c\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u5728\u51c6\u786e\u6027\u548c\u6548\u7387\u4e0a\u8868\u73b0\u7a81\u51fa\uff0c\u5e76\u5df2\u5728\u8682\u8681\u96c6\u56e2\u5927\u89c4\u6a21\u90e8\u7f72\u3002", "motivation": "\u73b0\u4ee3\u8f6f\u4ef6\u7cfb\u7edf\u65e5\u76ca\u590d\u6742\uff0c\u7ed9SRE\u56e2\u961f\u5e26\u6765\u96be\u4ee5\u627f\u53d7\u7684\u8fd0\u7ef4\u8d1f\u62c5\uff0c\u4e9f\u9700\u80fd\u6a21\u62df\u4e13\u5bb6\u8bca\u65ad\u63a8\u7406\u7684AI\u81ea\u52a8\u5316\u65b9\u6848\u3002\u73b0\u6709\u65b9\u6cd5\uff08\u5305\u62ec\u4f20\u7edfAI\u548c\u901a\u7528\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\uff09\u8981\u4e48\u7f3a\u4e4f\u6df1\u5ea6\u56e0\u679c\u63a8\u7406\u80fd\u529b\uff0c\u8981\u4e48\u65e0\u6cd5\u9002\u914dSRE\u7279\u6709\u7684\u8c03\u67e5\u578b\u5de5\u4f5c\u6d41\u3002", "method": "\u63d0\u51fa OpenDerisk \u6846\u67b6\uff0c\u5176\u6838\u5fc3\u5305\u62ec\u8bca\u65ad\u539f\u751f\u7684\u534f\u4f5c\u6a21\u578b\u3001\u53ef\u63d2\u62d4\u63a8\u7406\u5f15\u64ce\u3001\u77e5\u8bc6\u5f15\u64ce\u4ee5\u53ca\u57fa\u4e8eMCP\u6807\u51c6\u534f\u8bae\u7684\u591a\u667a\u80fd\u4f53\u901a\u4fe1\u673a\u5236\uff0c\u4f7f\u4e13\u4e1a\u667a\u80fd\u4f53\u80fd\u534f\u540c\u89e3\u51b3\u8de8\u9886\u57df\u7684\u590d\u6742SRE\u95ee\u9898\u3002", "result": "\u5b9e\u9a8c\u8bc4\u4f30\u8868\u660e\uff0cOpenDerisk \u5728\u51c6\u786e\u6027\u548c\u6548\u7387\u4e0a\u663e\u8457\u4f18\u4e8e\u5f53\u524d\u6700\u5148\u8fdb\u7684\u57fa\u7ebf\u65b9\u6cd5\uff1b\u5df2\u5728\u8682\u8681\u96c6\u56e2\u5927\u89c4\u6a21\u751f\u4ea7\u73af\u5883\u4e2d\u90e8\u7f72\uff0c\u65e5\u5747\u670d\u52a1\u8d853000\u540d\u7528\u6237\uff0c\u9a8c\u8bc1\u4e86\u5176\u5de5\u4e1a\u7ea7\u53ef\u6269\u5c55\u6027\u4e0e\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\u3002", "conclusion": "OpenDerisk \u662f\u4e00\u4e2a\u9ad8\u6548\u3001\u53ef\u6269\u5c55\u4e14\u4e13\u4e3aSRE\u573a\u666f\u4f18\u5316\u7684\u591a\u667a\u80fd\u4f53\u6846\u67b6\uff0c\u5177\u5907\u5b9e\u9645\u5de5\u4e1a\u90e8\u7f72\u80fd\u529b\uff0c\u73b0\u5df2\u5f00\u6e90\uff0c\u6709\u671b\u63a8\u52a8SRE\u667a\u80fd\u5316\u7684\u53d1\u5c55\u3002"}}
{"id": "2510.13692", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13692", "abs": "https://arxiv.org/abs/2510.13692", "authors": ["Deepak A. Cherian"], "title": "Property Testing for Ocean Models. Can We Specify It? (Invited Talk)", "comment": "In Proceedings VSS 2025, arXiv:2510.12314", "summary": "I take inspiration from the property-testing literature, particularly the\nwork of Prof. John Hughes, and explore how such ideas might be applied to\nnumerical models of the ocean. Specifically, I ask whether geophysical fluid\ndynamics (GFD) theory, expressed as property tests, might be used to address\nthe oracle problem of testing the correctness of ocean models. I propose that a\nnumber of simple idealized GFD problems can be framed as property tests. These\nexamples clearly illustrate how physics naturally lends itself to specifying\nproperty tests. Which of these proposed tests might be most feasible and\nuseful, remains to be seen.", "AI": {"tldr": "\u672c\u6587\u53d7\u5c5e\u6027\u6d4b\u8bd5\u6587\u732e\u542f\u53d1\uff0c\u63a2\u8ba8\u5982\u4f55\u5c06\u5730\u7403\u7269\u7406\u6d41\u4f53\u52a8\u529b\u5b66\uff08GFD\uff09\u7406\u8bba\u8f6c\u5316\u4e3a\u5c5e\u6027\u6d4b\u8bd5\uff0c\u4ee5\u89e3\u51b3\u6d77\u6d0b\u6a21\u578b\u9a8c\u8bc1\u4e2d\u7684\u201c\u9884\u8a00\u673a\u95ee\u9898\u201d\u3002", "motivation": "\u89e3\u51b3\u6d77\u6d0b\u6570\u503c\u6a21\u578b\u9a8c\u8bc1\u4e2d\u7684\u201c\u9884\u8a00\u673a\u95ee\u9898\u201d\uff0c\u5373\u5982\u4f55\u5224\u65ad\u6a21\u578b\u8f93\u51fa\u662f\u5426\u6b63\u786e\uff0c\u4f5c\u8005\u53d7\u5c5e\u6027\u6d4b\u8bd5\u65b9\u6cd5\u548cJohn Hughes\u6559\u6388\u5de5\u4f5c\u7684\u542f\u53d1\uff0c\u5c1d\u8bd5\u5c06GFD\u7406\u8bba\u7528\u4e8e\u6784\u5efa\u53ef\u9a8c\u8bc1\u7684\u5c5e\u6027\u6d4b\u8bd5\u3002", "method": "\u5c06\u82e5\u5e72\u7406\u60f3\u5316\u7684GFD\u95ee\u9898\u91cd\u65b0\u8868\u8ff0\u4e3a\u5c5e\u6027\u6d4b\u8bd5\uff0c\u5229\u7528\u7269\u7406\u89c4\u5f8b\u81ea\u7136\u5730\u5b9a\u4e49\u6a21\u578b\u5e94\u6ee1\u8db3\u7684\u5c5e\u6027\u3002", "result": "\u63d0\u51fa\u4e86\u82e5\u5e72\u53ef\u4f5c\u4e3a\u5c5e\u6027\u6d4b\u8bd5\u7684GFD\u95ee\u9898\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u7269\u7406\u7406\u8bba\u5982\u4f55\u81ea\u7136\u5730\u652f\u6301\u5c5e\u6027\u6d4b\u8bd5\u7684\u6784\u5efa\uff0c\u4f46\u5c1a\u672a\u8bc4\u4f30\u54ea\u4e9b\u6d4b\u8bd5\u6700\u53ef\u884c\u6216\u6700\u6709\u7528\u3002", "conclusion": "GFD\u7406\u8bba\u6709\u6f5c\u529b\u7528\u4e8e\u6784\u5efa\u6d77\u6d0b\u6a21\u578b\u7684\u5c5e\u6027\u6d4b\u8bd5\uff0c\u4f46\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u4ee5\u786e\u5b9a\u6700\u6709\u6548\u548c\u5b9e\u7528\u7684\u6d4b\u8bd5\u65b9\u6848\u3002"}}
{"id": "2510.13697", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13697", "abs": "https://arxiv.org/abs/2510.13697", "authors": ["Maksim Sapronov", "Evgeniy Glukhov"], "title": "On Pretraining for Project-Level Code Completion", "comment": null, "summary": "Repository-level pretraining is commonly used to enable large language models\nfor code to leverage codebase-wide context. This enhances their ability to\ngenerate accurate and context-aware code completions. In this work, we\ninvestigate how different repository-processing strategies affect in-context\nlearning in OpenCoder, a 1.5B-parameter model. We extend its context window\nfrom 4,096 to 16,384 tokens by training on additional 1B tokens of curated\nrepository-level data. Despite relying on a smaller dataset than competing\nmodels (which often use hundreds of billions of tokens), our model achieves\ncomparable performance on the Long Code Arena benchmark. We find that various\nrepository-processing techniques yield similarly strong results, with the\nprimary gain coming from adapting to a new rotary positional embedding (RoPE)\nscaling parameter. Finally, we show that a simpler file-level training approach\nat the original sequence length remains highly effective, opening up\nrepository-level code completion research to settings with more constrained\ndata and compute resources.", "AI": {"tldr": "\u8be5\u7814\u7a76\u901a\u8fc7\u6269\u5c55OpenCoder\u6a21\u578b\u7684\u4e0a\u4e0b\u6587\u7a97\u53e3\u81f316,384\u4e2atoken\uff0c\u5e76\u5728\u4ec5\u4f7f\u752810\u4ebftoken\u7684\u7cbe\u9009\u4ed3\u5e93\u7ea7\u6570\u636e\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u53d1\u73b0\u4e0d\u540c\u7684\u4ed3\u5e93\u5904\u7406\u7b56\u7565\u5bf9\u4e0a\u4e0b\u6587\u5b66\u4e60\u5f71\u54cd\u6709\u9650\uff0c\u4e3b\u8981\u6027\u80fd\u63d0\u5347\u6765\u81ea\u8c03\u6574RoPE\u7f29\u653e\u53c2\u6570\uff1b\u540c\u65f6\u8868\u660e\u5373\u4f7f\u91c7\u7528\u66f4\u7b80\u5355\u7684\u6587\u4ef6\u7ea7\u8bad\u7ec3\u65b9\u6cd5\uff0c\u5728\u539f\u59cb\u4e0a\u4e0b\u6587\u957f\u5ea6\u4e0b\u4e5f\u80fd\u53d6\u5f97\u4f18\u5f02\u6548\u679c\u3002", "motivation": "\u63a2\u7d22\u4e0d\u540c\u4ed3\u5e93\u7ea7\u6570\u636e\u5904\u7406\u7b56\u7565\u5982\u4f55\u5f71\u54cd\u5927\u8bed\u8a00\u6a21\u578b\u5728\u4ee3\u7801\u4efb\u52a1\u4e2d\u7684\u4e0a\u4e0b\u6587\u5b66\u4e60\u80fd\u529b\uff0c\u5e76\u9a8c\u8bc1\u5728\u6709\u9650\u6570\u636e\u548c\u8ba1\u7b97\u8d44\u6e90\u4e0b\u662f\u5426\u4ecd\u80fd\u5b9e\u73b0\u6709\u6548\u7684\u4ed3\u5e93\u7ea7\u4ee3\u7801\u8865\u5168\u3002", "method": "\u5c06OpenCoder\u6a21\u578b\u7684\u4e0a\u4e0b\u6587\u7a97\u53e3\u4ece4,096\u6269\u5c55\u523016,384\u4e2atoken\uff0c\u4f7f\u7528\u989d\u591610\u4ebftoken\u7684\u7cbe\u9009\u4ed3\u5e93\u7ea7\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5bf9\u6bd4\u4e0d\u540c\u4ed3\u5e93\u5904\u7406\u7b56\u7565\u53caRoPE\u7f29\u653e\u53c2\u6570\u7684\u5f71\u54cd\uff1b\u540c\u65f6\u8bc4\u4f30\u7b80\u5316\u540e\u7684\u6587\u4ef6\u7ea7\u8bad\u7ec3\u65b9\u6cd5\u7684\u6548\u679c\u3002", "result": "\u5c3d\u7ba1\u4f7f\u7528\u7684\u6570\u636e\u91cf\u8fdc\u5c0f\u4e8e\u540c\u7c7b\u6a21\u578b\uff08\u901a\u5e38\u4f7f\u7528\u6570\u5343\u4ebftoken\uff09\uff0c\u8be5\u6a21\u578b\u5728Long Code Arena\u57fa\u51c6\u4e0a\u4ecd\u53d6\u5f97\u76f8\u5f53\u7684\u6027\u80fd\uff1b\u4e0d\u540c\u4ed3\u5e93\u5904\u7406\u7b56\u7565\u6548\u679c\u76f8\u8fd1\uff0c\u4e3b\u8981\u63d0\u5347\u6765\u81eaRoPE\u7f29\u653e\u53c2\u6570\u7684\u8c03\u6574\uff1b\u6587\u4ef6\u7ea7\u8bad\u7ec3\u65b9\u6cd5\u5728\u539f\u59cb\u5e8f\u5217\u957f\u5ea6\u4e0b\u4f9d\u7136\u9ad8\u6548\u3002", "conclusion": "\u4ed3\u5e93\u7ea7\u9884\u8bad\u7ec3\u4e2d\uff0c\u6570\u636e\u5904\u7406\u7b56\u7565\u7684\u5f71\u54cd\u6709\u9650\uff0c\u5173\u952e\u5728\u4e8e\u4f4d\u7f6e\u7f16\u7801\u7684\u9002\u914d\uff1b\u540c\u65f6\uff0c\u8d44\u6e90\u53d7\u9650\u573a\u666f\u4e0b\u91c7\u7528\u66f4\u7b80\u5355\u7684\u6587\u4ef6\u7ea7\u8bad\u7ec3\u4e5f\u80fd\u5b9e\u73b0\u9ad8\u6548\u7684\u4ee3\u7801\u8865\u5168\uff0c\u4e3a\u76f8\u5173\u7814\u7a76\u63d0\u4f9b\u4e86\u4f4e\u95e8\u69db\u8def\u5f84\u3002"}}
