{"id": "2509.25415", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.25415", "abs": "https://arxiv.org/abs/2509.25415", "authors": ["Jan Droll"], "title": "Permuting Transactions in Ethereum Blocks: An Empirical Study", "comment": "17 pages, 6 figures, experiment code available", "summary": "Several recent proposals implicitly or explicitly suggest making use of\nrandomized transaction ordering within a block to mitigate centralization\neffects and to improve fairness in the Ethereum ecosystem. However,\ntransactions and blocks are subject to gas limits and protocol rules. In a\nrandomized transaction order, the behavior of transactions may change depending\non other transactions in the same block, leading to invalid blocks and varying\ngas consumptions. In this paper, we quantify and characterize protocol\nviolations, execution errors and deviations in gas consumption of blocks and\ntransactions to examine technical deployability. For that, we permute and\nexecute the transactions of over 335,000 Ethereum Mainnet blocks multiple\ntimes. About 22% of block permutations are invalid due to protocol violations\ncaused by privately mined transactions or blocks close to their gas limit.\nAlso, almost all transactions which show execution errors under permutation but\nnot in the original order are privately mined transactions. Only 6% of\ntransactions show deviations in gas consumption and 98% of block permutations\ndeviate at most 10% from their original gas consumption. From a technical\nperspective, these results suggest that randomized transaction ordering may be\nfeasible if transaction selection is handled carefully.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u91cd\u6392\u5e76\u6267\u884c33.5\u4e07\u591a\u4e2a\u4ee5\u592a\u574a\u4e3b\u7f51\u533a\u5757\u7684\u4ea4\u6613\uff0c\u8bc4\u4f30\u968f\u673a\u4ea4\u6613\u6392\u5e8f\u5728\u6280\u672f\u4e0a\u7684\u53ef\u884c\u6027\uff0c\u53d1\u73b0\u7ea622%\u7684\u533a\u5757\u91cd\u6392\u56e0\u534f\u8bae\u8fdd\u89c4\u800c\u65e0\u6548\uff0c\u4f46\u5927\u591a\u6570\u533a\u5757\u7684Gas\u6d88\u8017\u53d8\u5316\u4e0d\u8d85\u8fc710%\uff0c\u8868\u660e\u5728\u8c28\u614e\u9009\u62e9\u4ea4\u6613\u7684\u524d\u63d0\u4e0b\uff0c\u968f\u673a\u6392\u5e8f\u662f\u53ef\u884c\u7684\u3002", "motivation": "\u63a2\u8ba8\u968f\u673a\u5316\u533a\u5757\u5185\u4ea4\u6613\u987a\u5e8f\u662f\u5426\u53ef\u5728\u4e0d\u8fdd\u53cd\u534f\u8bae\u89c4\u5219\u548cGas\u9650\u5236\u7684\u524d\u63d0\u4e0b\u90e8\u7f72\uff0c\u4ee5\u7f13\u89e3\u4ee5\u592a\u574a\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u4e2d\u5fc3\u5316\u95ee\u9898\u5e76\u63d0\u5347\u516c\u5e73\u6027\u3002", "method": "\u5bf9335,000\u591a\u4e2a\u4ee5\u592a\u574a\u4e3b\u7f51\u533a\u5757\u7684\u4ea4\u6613\u8fdb\u884c\u591a\u6b21\u968f\u673a\u91cd\u6392\u4e0e\u6267\u884c\uff0c\u7edf\u8ba1\u534f\u8bae\u8fdd\u89c4\u3001\u6267\u884c\u9519\u8bef\u53caGas\u6d88\u8017\u504f\u5dee\u7684\u60c5\u51b5\u3002", "result": "\u7ea622%\u7684\u533a\u5757\u91cd\u6392\u56e0\u534f\u8bae\u8fdd\u89c4\u65e0\u6548\uff1b\u51e0\u4e4e\u6240\u6709\u5728\u91cd\u6392\u4e2d\u51fa\u9519\u4f46\u5728\u539f\u59cb\u987a\u5e8f\u4e2d\u6b63\u5e38\u7684\u4ea4\u6613\u5747\u4e3a\u79c1\u6316\u4ea4\u6613\uff1b\u4ec56%\u7684\u4ea4\u6613\u51fa\u73b0Gas\u6d88\u8017\u504f\u5dee\uff0c98%\u7684\u533a\u5757\u91cd\u6392Gas\u6d88\u8017\u504f\u5dee\u4e0d\u8d85\u8fc710%\u3002", "conclusion": "\u4ece\u6280\u672f\u89d2\u5ea6\u770b\uff0c\u53ea\u8981\u8c28\u614e\u5904\u7406\u4ea4\u6613\u9009\u62e9\uff0c\u968f\u673a\u4ea4\u6613\u6392\u5e8f\u5728\u4ee5\u592a\u574a\u4e2d\u662f\u53ef\u884c\u7684\u3002"}}
{"id": "2509.25555", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.25555", "abs": "https://arxiv.org/abs/2509.25555", "authors": ["Amirreza Sokhankhosh", "Khalid Hassan", "Sara Rouhani"], "title": "Enhancing Split Learning with Sharded and Blockchain-Enabled SplitFed Approaches", "comment": "Accepted by the 2025 IEEE International Conference on Blockchain\n  (Blockchain)", "summary": "Collaborative and distributed learning techniques, such as Federated Learning\n(FL) and Split Learning (SL), hold significant promise for leveraging sensitive\ndata in privacy-critical domains. However, FL and SL suffer from key\nlimitations -- FL imposes substantial computational demands on clients, while\nSL leads to prolonged training times. To overcome these challenges, SplitFed\nLearning (SFL) was introduced as a hybrid approach that combines the strengths\nof FL and SL. Despite its advantages, SFL inherits scalability, performance,\nand security issues from SL. In this paper, we propose two novel frameworks:\nSharded SplitFed Learning (SSFL) and Blockchain-enabled SplitFed Learning\n(BSFL). SSFL addresses the scalability and performance constraints of SFL by\ndistributing the workload and communication overhead of the SL server across\nmultiple parallel shards. Building upon SSFL, BSFL replaces the centralized\nserver with a blockchain-based architecture that employs a committee-driven\nconsensus mechanism to enhance fairness and security. BSFL incorporates an\nevaluation mechanism to exclude poisoned or tampered model updates, thereby\nmitigating data poisoning and model integrity attacks. Experimental evaluations\nagainst baseline SL and SFL approaches show that SSFL improves performance and\nscalability by 31.2% and 85.2%, respectively. Furthermore, BSFL increases\nresilience to data poisoning attacks by 62.7% while maintaining superior\nperformance under normal operating conditions. To the best of our knowledge,\nBSFL is the first blockchain-enabled framework to implement an end-to-end\ndecentralized SplitFed Learning system.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e24\u79cd\u65b0\u6846\u67b6\uff1aSharded SplitFed Learning\uff08SSFL\uff09\u548cBlockchain-enabled SplitFed Learning\uff08BSFL\uff09\uff0c\u5206\u522b\u901a\u8fc7\u5206\u7247\u548c\u533a\u5757\u94fe\u6280\u672f\u89e3\u51b3SplitFed Learning\u5728\u53ef\u6269\u5c55\u6027\u3001\u6027\u80fd\u548c\u5b89\u5168\u6027\u65b9\u9762\u7684\u4e0d\u8db3\u3002\u5b9e\u9a8c\u8868\u660eSSFL\u663e\u8457\u63d0\u5347\u6027\u80fd\u4e0e\u53ef\u6269\u5c55\u6027\uff0cBSFL\u5219\u6709\u6548\u589e\u5f3a\u5bf9\u6570\u636e\u6295\u6bd2\u653b\u51fb\u7684\u9c81\u68d2\u6027\uff0c\u5e76\u9996\u6b21\u5b9e\u73b0\u7aef\u5230\u7aef\u53bb\u4e2d\u5fc3\u5316\u7684SplitFed\u7cfb\u7edf\u3002", "motivation": "SplitFed Learning\uff08SFL\uff09\u867d\u7ed3\u5408\u4e86\u8054\u90a6\u5b66\u4e60\uff08FL\uff09\u4e0e\u62c6\u5206\u5b66\u4e60\uff08SL\uff09\u7684\u4f18\u70b9\uff0c\u4f46\u4ecd\u7ee7\u627f\u4e86SL\u5728\u53ef\u6269\u5c55\u6027\u3001\u6027\u80fd\u548c\u5b89\u5168\u6027\u65b9\u9762\u7684\u7f3a\u9677\uff0c\u4e9f\u9700\u6539\u8fdb\u3002", "method": "\u63d0\u51faSSFL\u6846\u67b6\uff0c\u901a\u8fc7\u5c06SL\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u548c\u901a\u4fe1\u5f00\u9500\u5206\u5e03\u5230\u591a\u4e2a\u5e76\u884c\u5206\u7247\u4e0a\uff0c\u63d0\u5347\u53ef\u6269\u5c55\u6027\u4e0e\u6027\u80fd\uff1b\u5728\u6b64\u57fa\u7840\u4e0a\u6784\u5efaBSFL\u6846\u67b6\uff0c\u7528\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u67b6\u6784\u66ff\u4ee3\u4e2d\u5fc3\u5316\u670d\u52a1\u5668\uff0c\u91c7\u7528\u59d4\u5458\u4f1a\u5171\u8bc6\u673a\u5236\u589e\u5f3a\u516c\u5e73\u6027\u4e0e\u5b89\u5168\u6027\uff0c\u5e76\u5f15\u5165\u8bc4\u4f30\u673a\u5236\u5254\u9664\u88ab\u6c61\u67d3\u6216\u7be1\u6539\u7684\u6a21\u578b\u66f4\u65b0\u3002", "result": "\u5b9e\u9a8c\u663e\u793a\uff0c\u76f8\u6bd4\u57fa\u7ebfSL\u548cSFL\u65b9\u6cd5\uff0cSSFL\u5728\u6027\u80fd\u548c\u53ef\u6269\u5c55\u6027\u4e0a\u5206\u522b\u63d0\u534731.2%\u548c85.2%\uff1bBSFL\u5728\u6b63\u5e38\u6761\u4ef6\u4e0b\u4fdd\u6301\u4f18\u8d8a\u6027\u80fd\uff0c\u540c\u65f6\u5bf9\u6570\u636e\u6295\u6bd2\u653b\u51fb\u7684\u62b5\u5fa1\u80fd\u529b\u63d0\u534762.7%\u3002", "conclusion": "\u6240\u63d0\u51fa\u7684SSFL\u548cBSFL\u6846\u67b6\u6709\u6548\u514b\u670d\u4e86SplitFed Learning\u7684\u5173\u952e\u5c40\u9650\uff0c\u5176\u4e2dBSFL\u662f\u9996\u4e2a\u5b9e\u73b0\u7aef\u5230\u7aef\u53bb\u4e2d\u5fc3\u5316SplitFed\u5b66\u4e60\u7684\u533a\u5757\u94fe\u8d4b\u80fd\u6846\u67b6\uff0c\u5728\u6027\u80fd\u3001\u53ef\u6269\u5c55\u6027\u548c\u5b89\u5168\u6027\u65b9\u9762\u5747\u53d6\u5f97\u663e\u8457\u8fdb\u5c55\u3002"}}
{"id": "2509.25605", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.25605", "abs": "https://arxiv.org/abs/2509.25605", "authors": ["Brian Kelley", "Sivasankaran Rajamanickam"], "title": "LAPIS: A Performance Portable, High Productivity Compiler Framework", "comment": "14 pages (10 excluding references and appendices). 5 figures", "summary": "Portability, performance, and productivity are three critical dimensions for\nevaluating a programming model or compiler infrastructure. Several modern\nprogramming models for computational science focus on performance and\nportability. On the other end, several machine learning focused programming\nmodels focus on portability and productivity. A clear solution that is strong\nin all three dimensions has yet to emerge. A second related problem arises when\nuse cases from computational science converge with machine learning. The\ndisparate popular frameworks of these fields require programmers to manually\nintegrate codes written in different frameworks. Finally, several programming\nframeworks lack easy options for extensibility as any new computer architecture\nchange require complex changes to the programming models. We present LAPIS, an\nMLIR-based compiler that addresses all three of these challenges. We\ndemonstrate that LAPIS can automatically lower sparse and dense linear algebra\nkernels from computational science and artificial intelligence use cases. We\nalso show how LAPIS facilitates the integration of codes between PyTorch and\nKokkos. We compare kernel performance with the default MLIR implementations on\ndiverse architectures to demonstrate portability. By developing a dialect that\nis built on the principles of the Kokkos ecosystem, LAPIS also allows\nextensibility of the framework to new architectures.", "AI": {"tldr": "LAPIS \u662f\u4e00\u4e2a\u57fa\u4e8e MLIR \u7684\u7f16\u8bd1\u5668\uff0c\u65e8\u5728\u540c\u65f6\u63d0\u5347\u7f16\u7a0b\u6a21\u578b\u5728\u53ef\u79fb\u690d\u6027\u3001\u6027\u80fd\u548c\u751f\u4ea7\u529b\u4e09\u65b9\u9762\u7684\u8868\u73b0\uff0c\u652f\u6301\u81ea\u52a8\u964d\u4f4e\u7a00\u758f\u4e0e\u7a20\u5bc6\u7ebf\u6027\u4ee3\u6570\u6838\uff0c\u5e76\u5b9e\u73b0 PyTorch \u4e0e Kokkos \u4ee3\u7801\u7684\u96c6\u6210\uff0c\u540c\u65f6\u5177\u5907\u826f\u597d\u7684\u67b6\u6784\u53ef\u6269\u5c55\u6027\u3002", "motivation": "\u5f53\u524d\u7f16\u7a0b\u6a21\u578b\u5728\u53ef\u79fb\u690d\u6027\u3001\u6027\u80fd\u548c\u751f\u4ea7\u529b\u4e09\u8005\u4e4b\u95f4\u96be\u4ee5\u517c\u987e\uff1a\u79d1\u5b66\u8ba1\u7b97\u6a21\u578b\u504f\u91cd\u6027\u80fd\u4e0e\u53ef\u79fb\u690d\u6027\uff0c\u800c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u504f\u91cd\u53ef\u79fb\u690d\u6027\u4e0e\u751f\u4ea7\u529b\uff1b\u6b64\u5916\uff0c\u79d1\u5b66\u8ba1\u7b97\u4e0e\u673a\u5668\u5b66\u4e60\u6846\u67b6\u4e4b\u95f4\u7f3a\u4e4f\u4e92\u64cd\u4f5c\u6027\uff0c\u4e14\u591a\u6570\u6846\u67b6\u96be\u4ee5\u9002\u5e94\u65b0\u786c\u4ef6\u67b6\u6784\u3002", "method": "\u63d0\u51fa LAPIS \u7f16\u8bd1\u5668\uff0c\u57fa\u4e8e MLIR \u6784\u5efa\uff0c\u8bbe\u8ba1\u878d\u5408 Kokkos \u751f\u6001\u539f\u5219\u7684\u65b0\u65b9\u8a00\uff0c\u5b9e\u73b0\u5bf9\u7a00\u758f/\u7a20\u5bc6\u7ebf\u6027\u4ee3\u6570\u6838\u7684\u81ea\u52a8\u964d\u7ea7\uff0c\u5e76\u652f\u6301 PyTorch \u4e0e Kokkos \u4ee3\u7801\u7684\u81ea\u52a8\u96c6\u6210\u3002", "result": "LAPIS \u5728\u591a\u79cd\u67b6\u6784\u4e0a\u5c55\u73b0\u51fa\u826f\u597d\u7684\u53ef\u79fb\u690d\u6027\uff0c\u6027\u80fd\u4f18\u4e8e\u9ed8\u8ba4 MLIR \u5b9e\u73b0\uff0c\u5e76\u6210\u529f\u5b9e\u73b0\u8de8\u6846\u67b6\uff08PyTorch/Kokkos\uff09\u4ee3\u7801\u96c6\u6210\uff0c\u540c\u65f6\u652f\u6301\u901a\u8fc7\u65b0\u65b9\u8a00\u6269\u5c55\u81f3\u65b0\u786c\u4ef6\u67b6\u6784\u3002", "conclusion": "LAPIS \u6709\u6548\u89e3\u51b3\u4e86\u7f16\u7a0b\u6a21\u578b\u5728\u53ef\u79fb\u690d\u6027\u3001\u6027\u80fd\u548c\u751f\u4ea7\u529b\u4e09\u8005\u96be\u4ee5\u517c\u987e\u7684\u95ee\u9898\uff0c\u4e3a\u79d1\u5b66\u8ba1\u7b97\u4e0e\u673a\u5668\u5b66\u4e60\u878d\u5408\u573a\u666f\u63d0\u4f9b\u4e86\u7edf\u4e00\u3001\u53ef\u6269\u5c55\u4e14\u9ad8\u6548\u7684\u7f16\u8bd1\u57fa\u7840\u8bbe\u65bd\u3002"}}
{"id": "2509.25700", "categories": ["cs.DC", "cs.GT", "cs.NI"], "pdf": "https://arxiv.org/pdf/2509.25700", "abs": "https://arxiv.org/abs/2509.25700", "authors": ["Houyi Qi", "Minghui Liwang", "Liqun Fu", "Sai Zou", "Xinlei Yi", "Wei Ni", "Huaiyu Dai"], "title": "PAST: Pilot and Adaptive Orchestration for Timely and Resilient Service Delivery in Edge-Assisted UAV Networks under Spatio-Temporal Dynamics", "comment": null, "summary": "Incentive-driven resource trading is essential for UAV applications with\nintensive, time-sensitive computing demands. Traditional spot trading suffers\nfrom negotiation delays and high energy costs, while conventional futures\ntrading struggles to adapt to the dynamic, uncertain UAV-edge environment. To\naddress these challenges, we propose PAST (pilot-and-adaptive stable trading),\na novel framework for edge-assisted UAV networks with spatio-temporal dynamism.\nPAST integrates two complementary mechanisms: PilotAO (pilot trading agreements\nwith overbooking), a risk-aware, overbooking-enabled early-stage\ndecision-making module that establishes long-term, mutually beneficial\nagreements and boosts resource utilization; and AdaptAO (adaptive trading\nagreements with overbooking rate update), an intelligent adaptation module that\ndynamically updates agreements and overbooking rates based on UAV mobility,\nsupply-demand variations, and agreement performance. Together, these mechanisms\nenable both stability and flexibility, guaranteeing individual rationality,\nstrong stability, competitive equilibrium, and weak Pareto optimality.\nExtensive experiments on real-world datasets show that PAST consistently\noutperforms benchmark methods in decision-making overhead, task completion\nlatency, resource utilization, and social welfare. By combining predictive\nplanning with real-time adjustments, PAST offers a valuable reference on robust\nand adaptive practice for improving low-altitude mission performance.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faPAST\u6846\u67b6\uff0c\u7ed3\u5408PilotAO\u548cAdaptAO\u4e24\u79cd\u673a\u5236\uff0c\u5728\u65e0\u4eba\u673a\u4e0e\u8fb9\u7f18\u7f51\u7edc\u95f4\u5b9e\u73b0\u517c\u987e\u7a33\u5b9a\u6027\u4e0e\u7075\u6d3b\u6027\u7684\u6fc0\u52b1\u578b\u8d44\u6e90\u4ea4\u6613\uff0c\u663e\u8457\u63d0\u5347\u4efb\u52a1\u5b8c\u6210\u6548\u7387\u3001\u8d44\u6e90\u5229\u7528\u7387\u548c\u793e\u4f1a\u798f\u5229\u3002", "motivation": "\u4f20\u7edf\u73b0\u8d27\u4ea4\u6613\u5b58\u5728\u534f\u5546\u5ef6\u8fdf\u548c\u9ad8\u80fd\u8017\u95ee\u9898\uff0c\u800c\u4f20\u7edf\u671f\u8d27\u4ea4\u6613\u96be\u4ee5\u9002\u5e94\u65e0\u4eba\u673a-\u8fb9\u7f18\u73af\u5883\u4e2d\u52a8\u6001\u4e0d\u786e\u5b9a\u7684\u7279\u6027\uff0c\u4e9f\u9700\u4e00\u79cd\u517c\u987e\u7a33\u5b9a\u6027\u4e0e\u9002\u5e94\u6027\u7684\u8d44\u6e90\u4ea4\u6613\u673a\u5236\u3002", "method": "\u63d0\u51faPAST\u6846\u67b6\uff0c\u5305\u542b\u4e24\u4e2a\u4e92\u8865\u673a\u5236\uff1aPilotAO\u901a\u8fc7\u5e26\u8d85\u8ba2\u7684\u8bd5\u70b9\u4ea4\u6613\u534f\u8bae\u8fdb\u884c\u98ce\u9669\u611f\u77e5\u7684\u65e9\u671f\u51b3\u7b56\uff0c\u5efa\u7acb\u957f\u671f\u4e92\u60e0\u534f\u8bae\uff1bAdaptAO\u5219\u6839\u636e\u65e0\u4eba\u673a\u79fb\u52a8\u6027\u3001\u4f9b\u9700\u53d8\u5316\u548c\u534f\u8bae\u8868\u73b0\u52a8\u6001\u8c03\u6574\u534f\u8bae\u4e0e\u8d85\u8ba2\u7387\u3002", "result": "\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0cPAST\u5728\u51b3\u7b56\u5f00\u9500\u3001\u4efb\u52a1\u5b8c\u6210\u5ef6\u8fdf\u3001\u8d44\u6e90\u5229\u7528\u7387\u548c\u793e\u4f1a\u798f\u5229\u65b9\u9762\u5747\u4f18\u4e8e\u73b0\u6709\u57fa\u51c6\u65b9\u6cd5\u3002", "conclusion": "PAST\u901a\u8fc7\u7ed3\u5408\u9884\u6d4b\u6027\u89c4\u5212\u4e0e\u5b9e\u65f6\u8c03\u6574\uff0c\u4e3a\u63d0\u5347\u4f4e\u7a7a\u4efb\u52a1\u6027\u80fd\u63d0\u4f9b\u4e86\u4e00\u79cd\u9c81\u68d2\u4e14\u81ea\u9002\u5e94\u7684\u8d44\u6e90\u4ea4\u6613\u5b9e\u8df5\u8303\u5f0f\u3002"}}
{"id": "2509.26120", "categories": ["cs.DC", "cs.AI", "cs.PF"], "pdf": "https://arxiv.org/pdf/2509.26120", "abs": "https://arxiv.org/abs/2509.26120", "authors": ["Leszek Sliwko", "Vladimir Getov"], "title": "AGOCS -- Accurate Google Cloud Simulator Framework", "comment": "This is the accepted author's version of the paper. The final\n  published version is available in the Proceedings of the 2016 IEEE\n  International Conferences on Ubiquitous Intelligence and Computing (UIC),\n  Advanced and Trusted Computing (ATC), Scalable Computing and Communications\n  (ScalCom), Cloud and Big Data Computing (CBDCom), Internet of People (IoP),\n  and Smart World Congress (SmartWorld)", "summary": "This paper presents the Accurate Google Cloud Simulator (AGOCS) - a novel\nhigh-fidelity Cloud workload simulator based on parsing real workload traces,\nwhich can be conveniently used on a desktop machine for day-to-day research.\nOur simulation is based on real-world workload traces from a Google Cluster\nwith 12.5K nodes, over a period of a calendar month. The framework is able to\nreveal very precise and detailed parameters of the executed jobs, tasks and\nnodes as well as to provide actual resource usage statistics. The system has\nbeen implemented in Scala language with focus on parallel execution and an\neasy-to-extend design concept. The paper presents the detailed structural\nframework for AGOCS and discusses our main design decisions, whilst also\nsuggesting alternative and possibly performance enhancing future approaches.\nThe framework is available via the Open Source GitHub repository.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86AGOCS\uff0c\u4e00\u4e2a\u57fa\u4e8e\u771f\u5b9eGoogle\u96c6\u7fa4\u5de5\u4f5c\u8d1f\u8f7d\u8f68\u8ff9\u7684\u9ad8\u4fdd\u771f\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u6a21\u62df\u5668\uff0c\u53ef\u5728\u684c\u9762\u73af\u5883\u4e2d\u7528\u4e8e\u65e5\u5e38\u7814\u7a76\uff0c\u5e76\u5f00\u6e90\u53d1\u5e03\u3002", "motivation": "\u73b0\u6709\u4e91\u6a21\u62df\u5de5\u5177\u7f3a\u4e4f\u5bf9\u771f\u5b9e\u5927\u89c4\u6a21\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9ad8\u4fdd\u771f\u6a21\u62df\u80fd\u529b\uff0c\u96be\u4ee5\u5728\u666e\u901a\u684c\u9762\u73af\u5883\u4e2d\u9ad8\u6548\u8fd0\u884c\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u51c6\u786e\u3001\u6613\u7528\u4e14\u53ef\u6269\u5c55\u7684\u6a21\u62df\u6846\u67b6\u3002", "method": "\u57fa\u4e8eGoogle\u96c6\u7fa412.5K\u8282\u70b9\u4e00\u4e2a\u6708\u7684\u771f\u5b9e\u5de5\u4f5c\u8d1f\u8f7d\u8f68\u8ff9\uff0c\u4f7f\u7528Scala\u8bed\u8a00\u5f00\u53d1\u4e86\u4e00\u4e2a\u652f\u6301\u5e76\u884c\u6267\u884c\u3001\u6613\u4e8e\u6269\u5c55\u7684\u9ad8\u4fdd\u771f\u6a21\u62df\u5668AGOCS\u3002", "result": "AGOCS\u80fd\u591f\u7cbe\u786e\u8fd8\u539f\u4f5c\u4e1a\u3001\u4efb\u52a1\u548c\u8282\u70b9\u7684\u8be6\u7ec6\u53c2\u6570\uff0c\u5e76\u63d0\u4f9b\u771f\u5b9e\u7684\u8d44\u6e90\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f\uff0c\u4e14\u5df2\u5728GitHub\u4e0a\u5f00\u6e90\u3002", "conclusion": "AGOCS\u4e3a\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u7814\u7a76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u4fdd\u771f\u3001\u6613\u7528\u4e14\u53ef\u6269\u5c55\u7684\u684c\u9762\u7ea7\u6a21\u62df\u5e73\u53f0\uff0c\u672a\u6765\u53ef\u901a\u8fc7\u66ff\u4ee3\u8bbe\u8ba1\u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd\u3002"}}
{"id": "2509.25391", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.25391", "abs": "https://arxiv.org/abs/2509.25391", "authors": ["Fernanda Zapata Bascu\u00f1\u00e1n", "Alan Ezequiel Fuster"], "title": "smallNet: Implementation of a convolutional layer in tiny FPGAs", "comment": null, "summary": "Since current neural network development systems in Xilinx and VLSI require\ncodevelopment with Python libraries, the first stage of a convolutional network\nhas been implemented by developing a convolutional layer entirely in Verilog.\nThis handcoded design, free of IP cores and based on a filter polynomial like\nstructure, enables straightforward deployment not only on low cost FPGAs but\nalso on SoMs, SoCs, and ASICs. We analyze the limitations of numerical\nrepresentations and compare our implemented architecture, smallNet, with its\ncomputer based counterpart, demonstrating a 5.1x speedup, over 81%\nclassification accuracy, and a total power consumption of just 1.5 W. The\nalgorithm is validated on a single-core Cora Z7, demonstrating its feasibility\nfor real time, resource-constrained embedded applications.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5b8c\u5168\u7528Verilog\u5b9e\u73b0\u7684\u5377\u79ef\u5c42\u8bbe\u8ba1\uff08smallNet\uff09\uff0c\u65e0\u9700\u4f9d\u8d56IP\u6838\uff0c\u9002\u7528\u4e8e\u4f4e\u6210\u672cFPGA\u3001SoM\u3001SoC\u548cASIC\uff0c\u5e76\u5728Cora Z7\u5355\u6838\u5e73\u53f0\u4e0a\u9a8c\u8bc1\u4e86\u5176\u5728\u8d44\u6e90\u53d7\u9650\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u5b9e\u65f6\u5e94\u7528\u7684\u53ef\u884c\u6027\u3002", "motivation": "\u5f53\u524dXilinx\u548cVLSI\u4e2d\u7684\u795e\u7ecf\u7f51\u7edc\u5f00\u53d1\u7cfb\u7edf\u9700\u4e0ePython\u5e93\u534f\u540c\u5f00\u53d1\uff0c\u9650\u5236\u4e86\u5728\u8d44\u6e90\u53d7\u9650\u786c\u4ef6\u4e0a\u7684\u90e8\u7f72\u7075\u6d3b\u6027\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u4e0d\u4f9d\u8d56IP\u6838\u3001\u53ef\u76f4\u63a5\u90e8\u7f72\u7684\u786c\u4ef6\u539f\u751f\u5b9e\u73b0\u65b9\u6848\u3002", "method": "\u901a\u8fc7\u624b\u5199Verilog\u4ee3\u7801\u5b9e\u73b0\u4e00\u4e2a\u57fa\u4e8e\u6ee4\u6ce2\u5668\u591a\u9879\u5f0f\u7ed3\u6784\u7684\u5377\u79ef\u5c42\uff08smallNet\uff09\uff0c\u4e0d\u4f7f\u7528\u4efb\u4f55IP\u6838\uff0c\u5e76\u5728Cora Z7\u5355\u6838\u5e73\u53f0\u4e0a\u8fdb\u884c\u90e8\u7f72\u4e0e\u9a8c\u8bc1\u3002", "result": "\u8be5\u8bbe\u8ba1\u5b9e\u73b0\u4e865.1\u500d\u7684\u901f\u5ea6\u63d0\u5347\uff0c\u5206\u7c7b\u51c6\u786e\u7387\u8d85\u8fc781%\uff0c\u603b\u529f\u8017\u4ec5\u4e3a1.5W\uff0c\u9a8c\u8bc1\u4e86\u5176\u5728\u5d4c\u5165\u5f0f\u5b9e\u65f6\u5e94\u7528\u4e2d\u7684\u9ad8\u6548\u6027\u4e0e\u53ef\u884c\u6027\u3002", "conclusion": "\u6240\u63d0\u51fa\u7684Verilog\u539f\u751f\u5377\u79ef\u5c42\u8bbe\u8ba1\u4e3a\u8d44\u6e90\u53d7\u9650\u7684\u5d4c\u5165\u5f0f\u5e73\u53f0\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u3001\u4f4e\u529f\u8017\u4e14\u65e0\u9700\u4f9d\u8d56\u8f6f\u4ef6\u5e93\u7684\u795e\u7ecf\u7f51\u7edc\u90e8\u7f72\u65b9\u6848\u3002"}}
{"id": "2509.25683", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2509.25683", "abs": "https://arxiv.org/abs/2509.25683", "authors": ["Houyi Qi", "Minghui Liwang", "Liqun Fu", "Xianbin Wang", "Huaiyu Dai", "Xiaoyu Xia"], "title": "Oh-Trust: Overbooking and Hybrid Trading-empowered Resource Scheduling with Smart Reputation Update over Dynamic Edge Networks", "comment": null, "summary": "Incentive-driven computing resource sharing is crucial for meeting the\never-growing demands of emerging mobile applications. Although conventional\nspot trading offers a solution, it frequently leads to excessive overhead due\nto the need for real-time trading related interactions. Likewise, traditional\nfutures trading, which depends on historical data, is susceptible to risks from\nnetwork dynamics. This paper explores a dynamic and uncertain edge network\ncomprising a computing platform, e.g., an edge server, that offers computing\nservices as resource seller, and various types of mobile users with diverse\nresource demands as buyers, including fixed buyers (FBs) and uncertain\noccasional buyers (OBs) with fluctuating needs. To facilitate efficient and\ntimely computing services, we propose an overbooking- and hybrid\ntrading-empowered resource scheduling mechanism with reputation update, termed\nOh-Trust. Particularly, our Oh-Trust incentivizes FBs to enter futures trading\nby signing long-term contracts with the seller, while simultaneously attracting\nOBs to spot trading, enhancing resource utilization and profitability for both\nparties. Crucially, to adapt to market fluctuations, a smart reputation\nupdating mechanism is integrated, allowing for the timely renewal of long-term\ncontracts to optimize trading performance. Extensive simulations using\nreal-world datasets demonstrate the effectiveness of Oh-Trust across multiple\nevaluation metrics.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u8d85\u552e\u4e0e\u6df7\u5408\u4ea4\u6613\u7684\u8fb9\u7f18\u8ba1\u7b97\u8d44\u6e90\u8c03\u5ea6\u673a\u5236Oh-Trust\uff0c\u901a\u8fc7\u6fc0\u52b1\u56fa\u5b9a\u4e70\u5bb6\u7b7e\u8ba2\u957f\u671f\u5408\u7ea6\u3001\u5438\u5f15\u4e34\u65f6\u4e70\u5bb6\u53c2\u4e0e\u73b0\u8d27\u4ea4\u6613\uff0c\u5e76\u5f15\u5165\u52a8\u6001\u4fe1\u8a89\u66f4\u65b0\u673a\u5236\uff0c\u4ee5\u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387\u548c\u4ea4\u6613\u6548\u7387\u3002", "motivation": "\u73b0\u6709\u73b0\u8d27\u4ea4\u6613\u56e0\u9700\u5b9e\u65f6\u4ea4\u4e92\u5e26\u6765\u8fc7\u9ad8\u5f00\u9500\uff0c\u800c\u4f20\u7edf\u671f\u8d27\u4ea4\u6613\u4f9d\u8d56\u5386\u53f2\u6570\u636e\uff0c\u96be\u4ee5\u5e94\u5bf9\u8fb9\u7f18\u7f51\u7edc\u52a8\u6001\u53d8\u5316\u5e26\u6765\u7684\u98ce\u9669\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u517c\u987e\u6548\u7387\u3001\u9002\u5e94\u6027\u548c\u6fc0\u52b1\u673a\u5236\u7684\u65b0\u578b\u8d44\u6e90\u8c03\u5ea6\u65b9\u6cd5\u3002", "method": "\u63d0\u51faOh-Trust\u673a\u5236\uff0c\u7ed3\u5408\u8d85\u552e\u7b56\u7565\u4e0e\u6df7\u5408\u4ea4\u6613\u6a21\u5f0f\uff08\u957f\u671f\u671f\u8d27+\u73b0\u8d27\uff09\uff0c\u5e76\u96c6\u6210\u52a8\u6001\u4fe1\u8a89\u66f4\u65b0\u673a\u5236\uff0c\u4ee5\u4f18\u5316\u957f\u671f\u5408\u7ea6\u7684\u7eed\u7b7e\u4e0e\u8d44\u6e90\u5206\u914d\u3002", "result": "\u57fa\u4e8e\u771f\u5b9e\u6570\u636e\u96c6\u7684\u4eff\u771f\u5b9e\u9a8c\u8868\u660e\uff0cOh-Trust\u5728\u591a\u4e2a\u8bc4\u4f30\u6307\u6807\u4e0a\u8868\u73b0\u4f18\u5f02\uff0c\u6709\u6548\u63d0\u5347\u4e86\u8d44\u6e90\u5229\u7528\u7387\u548c\u4ea4\u6613\u53cc\u65b9\u7684\u6536\u76ca\u3002", "conclusion": "Oh-Trust\u901a\u8fc7\u878d\u5408\u671f\u8d27\u4e0e\u73b0\u8d27\u4ea4\u6613\u3001\u5f15\u5165\u4fe1\u8a89\u673a\u5236\uff0c\u6709\u6548\u5e94\u5bf9\u8fb9\u7f18\u7f51\u7edc\u7684\u52a8\u6001\u6027\u548c\u4e0d\u786e\u5b9a\u6027\uff0c\u4e3a\u6fc0\u52b1\u9a71\u52a8\u7684\u8ba1\u7b97\u8d44\u6e90\u5171\u4eab\u63d0\u4f9b\u4e86\u9ad8\u6548\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.26496", "categories": ["cs.MA", "I.2.11; I.6.3; I.6.4"], "pdf": "https://arxiv.org/pdf/2509.26496", "abs": "https://arxiv.org/abs/2509.26496", "authors": ["Roberto garrone"], "title": "An Agent-Based Simulation of Ageing Societies: Accessibility and Care Dynamics in Remote Areas", "comment": "Comments: 9 pages, 2 figures, 6 tables; appendix included. Code and\n  processed inputs available on request from the corresponding author", "summary": "This paper presents an agent-based simulation of accessibility and care\ndynamics in ageing societies, applied to the Italian inner area of Premeno\n(VB). The model integrates census and municipal data, drone-derived elevation\nmodels, GIS road networks, and survey-based caregiving information to generate\nsynthetic populations of older adults and their caregivers. Agents are\norganized into dyads with socio-economic and mobility attributes, enabling the\nsimulation of both micro-scale accessibility and meso-scale caregiving\noutcomes. Two scenarios are compared: a baseline and an alternative involving\nthe relocation of healthcare services. Key indicators include caregiver effort,\noverwhelmed caregivers, walkability, and unmet hours of care. Findings show\nthat while relocation improves walkability locally, it increases unmet care\nhours due to detours and reduced proximity. Household income emerges as the\nprimary driver of caregiver burden, with accessibility shaped by interactions\nbetween financial and mobility resources. Results highlight the need for\ninterventions tailored to context-specific constraints in remote ageing\ncommunities.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u57fa\u4e8e\u4ee3\u7406\u7684\u6a21\u62df\uff0c\u7814\u7a76\u610f\u5927\u5229\u504f\u8fdc\u8001\u9f84\u5316\u793e\u533aPremeno\u5728\u533b\u7597\u8bbe\u65bd\u642c\u8fc1\u524d\u540e\u8001\u5e74\u4eba\u53ca\u5176\u7167\u62a4\u8005\u7684\u53ef\u8fbe\u6027\u4e0e\u7167\u62a4\u52a8\u6001\u53d8\u5316\uff0c\u53d1\u73b0\u642c\u8fc1\u867d\u63d0\u5347\u5c40\u90e8\u6b65\u884c\u6027\uff0c\u5374\u56e0\u7ed5\u884c\u548c\u8ddd\u79bb\u589e\u52a0\u5bfc\u81f4\u672a\u6ee1\u8db3\u7167\u62a4\u9700\u6c42\u4e0a\u5347\uff0c\u4e14\u5bb6\u5ead\u6536\u5165\u662f\u7167\u62a4\u8d1f\u62c5\u7684\u4e3b\u8981\u9a71\u52a8\u56e0\u7d20\u3002", "motivation": "\u8001\u9f84\u5316\u793e\u4f1a\u4e2d\uff0c\u504f\u8fdc\u5730\u533a\u533b\u7597\u4e0e\u7167\u62a4\u8d44\u6e90\u7684\u53ef\u8fbe\u6027\u9762\u4e34\u6311\u6218\uff0c\u9700\u7406\u89e3\u670d\u52a1\u5e03\u5c40\u53d8\u5316\u5bf9\u8001\u5e74\u4eba\u53ca\u5176\u7167\u62a4\u8005\u7684\u5f71\u54cd\uff0c\u4ee5\u5236\u5b9a\u56e0\u5730\u5236\u5b9c\u7684\u5e72\u9884\u7b56\u7565\u3002", "method": "\u6784\u5efa\u57fa\u4e8e\u4ee3\u7406\u7684\u6a21\u578b\uff0c\u6574\u5408\u4eba\u53e3\u666e\u67e5\u3001\u5e02\u653f\u6570\u636e\u3001\u65e0\u4eba\u673a\u9ad8\u7a0b\u6a21\u578b\u3001GIS\u8def\u7f51\u548c\u95ee\u5377\u7167\u62a4\u4fe1\u606f\uff0c\u751f\u6210\u5177\u6709\u793e\u4f1a\u7ecf\u6d4e\u4e0e\u79fb\u52a8\u5c5e\u6027\u7684\u8001\u5e74-\u7167\u62a4\u8005\u914d\u5bf9\u7fa4\u4f53\uff0c\u6a21\u62df\u5fae\u5c3a\u5ea6\u53ef\u8fbe\u6027\u4e0e\u4e2d\u5c3a\u5ea6\u7167\u62a4\u7ed3\u679c\uff0c\u5e76\u6bd4\u8f83\u57fa\u51c6\u4e0e\u533b\u7597\u8bbe\u65bd\u642c\u8fc1\u4e24\u79cd\u60c5\u666f\u3002", "result": "\u533b\u7597\u8bbe\u65bd\u642c\u8fc1\u867d\u5c40\u90e8\u6539\u5584\u6b65\u884c\u6027\uff0c\u4f46\u5bfc\u81f4\u672a\u6ee1\u8db3\u7167\u62a4\u65f6\u957f\u589e\u52a0\uff1b\u5bb6\u5ead\u6536\u5165\u662f\u7167\u62a4\u8d1f\u62c5\u7684\u4e3b\u56e0\uff0c\u53ef\u8fbe\u6027\u53d7\u7ecf\u6d4e\u4e0e\u79fb\u52a8\u8d44\u6e90\u4ea4\u4e92\u5f71\u54cd\u3002", "conclusion": "\u5728\u504f\u8fdc\u8001\u9f84\u5316\u793e\u533a\uff0c\u5e72\u9884\u63aa\u65bd\u9700\u8003\u8651\u672c\u5730\u5177\u4f53\u7ea6\u675f\uff0c\u5e73\u8861\u670d\u52a1\u53ef\u8fbe\u6027\u4e0e\u7167\u62a4\u8d1f\u62c5\uff0c\u907f\u514d\u5355\u7eaf\u4f18\u5316\u7a7a\u95f4\u5e03\u5c40\u800c\u5ffd\u89c6\u793e\u4f1a\u7ecf\u6d4e\u56e0\u7d20\u3002"}}
{"id": "2509.25192", "categories": ["cs.SE", "68T07"], "pdf": "https://arxiv.org/pdf/2509.25192", "abs": "https://arxiv.org/abs/2509.25192", "authors": ["Anderson de Lima Luiz"], "title": "WARP -- Web-Augmented Real-time Program Repairer: A Real-Time Compilation Error Resolution using LLMs and Web-Augmented Synthesis", "comment": "5 pages, 2 figures", "summary": "Compilation errors represent a significant bottleneck in software development\nproductivity. This paper introduces WARP (Web-Augmented Real-time Program\nRepairer), a novel system that leverages Large Language Models (LLMs) and\ndynamic web-augmented synthesis for real-time resolution of these errors. WARP\nactively monitors developer terminals, intelligently detects compilation\nerrors, and synergistically combines the understanding of a fine-tuned Code-LLM\nwith relevant solutions, explanations, and code snippets retrieved from\nup-to-date web sources like developer forums and official documentation.\nExperimental results on our curated benchmark, CGP (featuring C/C++, Python,\nand Go errors), demonstrate WARP achieves a superior fix rate (72.5 % Compiles\ncorrectly) and higher semantic correctness compared to baseline LLM-only\napproaches and traditional IDE quick-fixes. Key technical challenges in\nachieving high-accuracy synthesis from noisy web data.", "AI": {"tldr": "WARP \u662f\u4e00\u4e2a\u7ed3\u5408\u5927\u8bed\u8a00\u6a21\u578b\u4e0e\u5b9e\u65f6\u7f51\u7edc\u589e\u5f3a\u5408\u6210\u6280\u672f\u7684\u7cfb\u7edf\uff0c\u7528\u4e8e\u81ea\u52a8\u4fee\u590d\u7f16\u8bd1\u9519\u8bef\uff0c\u5728 CGP \u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8868\u73b0\u51fa\u4f18\u4e8e\u4f20\u7edf\u65b9\u6cd5\u7684\u4fee\u590d\u7387\u548c\u8bed\u4e49\u6b63\u786e\u6027\u3002", "motivation": "\u7f16\u8bd1\u9519\u8bef\u4e25\u91cd\u5f71\u54cd\u8f6f\u4ef6\u5f00\u53d1\u6548\u7387\uff0c\u73b0\u6709 IDE \u5feb\u901f\u4fee\u590d\u548c\u7eaf LLM \u65b9\u6cd5\u5728\u51c6\u786e\u6027\u548c\u8bed\u4e49\u6b63\u786e\u6027\u65b9\u9762\u5b58\u5728\u4e0d\u8db3\u3002", "method": "WARP \u7cfb\u7edf\u901a\u8fc7\u76d1\u63a7\u5f00\u53d1\u8005\u7ec8\u7aef\uff0c\u68c0\u6d4b\u7f16\u8bd1\u9519\u8bef\uff0c\u5e76\u7ed3\u5408\u5fae\u8c03\u540e\u7684 Code-LLM \u4e0e\u4ece\u5f00\u53d1\u8005\u8bba\u575b\u3001\u5b98\u65b9\u6587\u6863\u7b49\u7f51\u7edc\u6765\u6e90\u68c0\u7d22\u5230\u7684\u6700\u65b0\u89e3\u51b3\u65b9\u6848\u3001\u89e3\u91ca\u548c\u4ee3\u7801\u7247\u6bb5\uff0c\u8fdb\u884c\u52a8\u6001\u5408\u6210\u4fee\u590d\u3002", "result": "\u5728\u5305\u542b C/C++\u3001Python \u548c Go \u7684 CGP \u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cWARP \u5b9e\u73b0\u4e86 72.5% \u7684\u6b63\u786e\u7f16\u8bd1\u4fee\u590d\u7387\uff0c\u5e76\u5728\u8bed\u4e49\u6b63\u786e\u6027\u4e0a\u4f18\u4e8e\u57fa\u7ebf\u65b9\u6cd5\u3002", "conclusion": "\u7ed3\u5408\u5927\u8bed\u8a00\u6a21\u578b\u4e0e\u5b9e\u65f6\u7f51\u7edc\u589e\u5f3a\u4fe1\u606f\u80fd\u6709\u6548\u63d0\u5347\u7f16\u8bd1\u9519\u8bef\u81ea\u52a8\u4fee\u590d\u7684\u6027\u80fd\uff0c\u4f46\u9700\u5e94\u5bf9\u4ece\u566a\u58f0\u7f51\u7edc\u6570\u636e\u4e2d\u9ad8\u7cbe\u5ea6\u5408\u6210\u4ee3\u7801\u7684\u6280\u672f\u6311\u6218\u3002"}}
{"id": "2509.25919", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25919", "abs": "https://arxiv.org/abs/2509.25919", "authors": ["Jay H. Park", "Youngju Cho", "Choungsol Lee", "Moonwook Oh", "Euiseong Seo"], "title": "Accelerating LLM Inference with Precomputed Query Storage", "comment": null, "summary": "Large language model (LLM) inference often suffers from high latency,\nparticularly in resource-constrained environments such as on-device or edge\ndeployments. To address this challenge, we present StorInfer, a novel\nstorage-assisted LLM inference system that accelerates response time by\nprecomputing and storing predictable query-response pairs offline. When a user\nquery semantically matches a precomputed query, StorInfer bypasses expensive\nGPU inference and instantly returns the stored response, significantly reducing\nlatency and compute costs. To maximize coverage and effectiveness, StorInfer\nemploys an LLM-driven generator that adaptively produces diverse and\ndeduplicated queries based on a given knowledge base. This is achieved via two\ntechniques: adaptive query masking, which prevents regeneration of similar\nqueries, and adaptive sampling, which dynamically tunes generation parameters\nto promote semantic diversity. The resulting query-response pairs are embedded\nand indexed using a disk-backed vector database to enable fast,\nsimilarity-based retrieval at runtime. Using this approach, we generated 150K\nunique precomputed pairs (taking up to 830 MB of storage space), achieving up\nto 17.3% latency reduction with no loss in response quality. Our evaluation\nacross multiple QA datasets demonstrates the practicality and scalability of\nstorage-assisted inference, especially in scenarios with predictable query\ndistributions. StorInfer highlights a promising direction in leveraging storage\nas a primary enabler for efficient, low-latency LLM deployment.", "AI": {"tldr": "StorInfer \u662f\u4e00\u79cd\u65b0\u578b\u5b58\u50a8\u8f85\u52a9\u7684 LLM \u63a8\u7406\u7cfb\u7edf\uff0c\u901a\u8fc7\u79bb\u7ebf\u9884\u8ba1\u7b97\u5e76\u5b58\u50a8\u53ef\u9884\u6d4b\u7684\u67e5\u8be2-\u54cd\u5e94\u5bf9\uff0c\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u8bed\u4e49\u5339\u914d\u5feb\u901f\u8fd4\u56de\u7ed3\u679c\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e\u5ef6\u8fdf\u548c\u8ba1\u7b97\u5f00\u9500\u3002", "motivation": "LLM \u63a8\u7406\u5728\u8d44\u6e90\u53d7\u9650\u73af\u5883\uff08\u5982\u7aef\u4fa7\u6216\u8fb9\u7f18\u90e8\u7f72\uff09\u4e2d\u5e38\u9762\u4e34\u9ad8\u5ef6\u8fdf\u95ee\u9898\uff0c\u4e9f\u9700\u9ad8\u6548\u3001\u4f4e\u5f00\u9500\u7684\u63a8\u7406\u52a0\u901f\u65b9\u6848\u3002", "method": "StorInfer \u5229\u7528 LLM \u9a71\u52a8\u751f\u6210\u5668\uff0c\u7ed3\u5408\u81ea\u9002\u5e94\u67e5\u8be2\u63a9\u7801\u548c\u81ea\u9002\u5e94\u91c7\u6837\u6280\u672f\uff0c\u4ece\u77e5\u8bc6\u5e93\u4e2d\u751f\u6210\u591a\u6837\u4e14\u53bb\u91cd\u7684\u67e5\u8be2\uff1b\u5c06\u751f\u6210\u7684\u67e5\u8be2-\u54cd\u5e94\u5bf9\u5d4c\u5165\u5e76\u5b58\u5165\u78c1\u76d8\u652f\u6301\u7684\u5411\u91cf\u6570\u636e\u5e93\uff0c\u5b9e\u73b0\u8fd0\u884c\u65f6\u7684\u5feb\u901f\u8bed\u4e49\u68c0\u7d22\u3002", "result": "\u5728\u591a\u4e2a\u95ee\u7b54\u6570\u636e\u96c6\u4e0a\uff0cStorInfer \u751f\u6210\u4e86 15 \u4e07\u6761\u552f\u4e00\u9884\u8ba1\u7b97\u5bf9\uff08\u5360\u7528\u6700\u591a 830 MB \u5b58\u50a8\uff09\uff0c\u5728\u4e0d\u635f\u5931\u54cd\u5e94\u8d28\u91cf\u7684\u524d\u63d0\u4e0b\uff0c\u6700\u9ad8\u5b9e\u73b0 17.3% \u7684\u5ef6\u8fdf\u964d\u4f4e\u3002", "conclusion": "StorInfer \u5c55\u793a\u4e86\u5229\u7528\u5b58\u50a8\u4f5c\u4e3a\u6838\u5fc3\u624b\u6bb5\u5b9e\u73b0\u9ad8\u6548\u3001\u4f4e\u5ef6\u8fdf LLM \u90e8\u7f72\u7684\u53ef\u884c\u6027\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u67e5\u8be2\u5206\u5e03\u53ef\u9884\u6d4b\u7684\u573a\u666f\u3002"}}
{"id": "2509.26253", "categories": ["cs.DC", "cs.PF", "C.4; I.m; I.2.8"], "pdf": "https://arxiv.org/pdf/2509.26253", "abs": "https://arxiv.org/abs/2509.26253", "authors": ["Floris-Jan Willemsen", "Rob V. van Nieuwpoort", "Ben van Werkhoven"], "title": "Efficient Construction of Large Search Spaces for Auto-Tuning", "comment": null, "summary": "Automatic performance tuning, or auto-tuning, accelerates high-performance\ncodes by exploring vast spaces of code variants. However, due to the large\nnumber of possible combinations and complex constraints, constructing these\nsearch spaces can be a major bottleneck. Real-world applications have been\nencountered where the search space construction takes minutes to hours or even\ndays. Current state-of-the-art techniques for search space construction, such\nas chain-of-trees, lack a formal foundation and only perform adequately on a\nspecific subset of search spaces.\n  We show that search space construction for constraint-based auto-tuning can\nbe reformulated as a Constraint Satisfaction Problem (CSP). Building on this\ninsight with a CSP solver, we develop a runtime parser that translates\nuser-defined constraint functions into solver-optimal expressions, optimize the\nsolver to exploit common structures in auto-tuning constraints, and integrate\nthese and other advances in open-source tools. These contributions\nsubstantially improve performance and accessibility while preserving\nflexibility.\n  We evaluate our approach using a diverse set of benchmarks, demonstrating\nthat our optimized solver reduces construction time by four orders of magnitude\nversus brute-force enumeration, three orders of magnitude versus an unoptimized\nCSP solver, and one to two orders of magnitude versus leading auto-tuning\nframeworks built on chain-of-trees. We thus eliminate a critical scalability\nbarrier for auto-tuning and provide a drop-in solution that enables the\nexploration of previously unattainable problem scales in auto-tuning and\nrelated domains.", "AI": {"tldr": "\u672c\u6587\u5c06\u81ea\u52a8\u8c03\u4f18\u4e2d\u7684\u641c\u7d22\u7a7a\u95f4\u6784\u5efa\u95ee\u9898\u5f62\u5f0f\u5316\u4e3a\u7ea6\u675f\u6ee1\u8db3\u95ee\u9898\uff08CSP\uff09\uff0c\u5e76\u57fa\u4e8eCSP\u6c42\u89e3\u5668\u5f00\u53d1\u4e86\u4e00\u5957\u9ad8\u6548\u3001\u7075\u6d3b\u4e14\u5f00\u6e90\u7684\u8fd0\u884c\u65f6\u89e3\u6790\u4e0e\u4f18\u5316\u5de5\u5177\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6784\u5efa\u901f\u5ea6\uff0c\u6d88\u9664\u4e86\u81ea\u52a8\u8c03\u4f18\u7684\u53ef\u6269\u5c55\u6027\u74f6\u9888\u3002", "motivation": "\u5f53\u524d\u81ea\u52a8\u8c03\u4f18\u4e2d\u641c\u7d22\u7a7a\u95f4\u6784\u5efa\u8017\u65f6\u4e25\u91cd\uff08\u53ef\u8fbe\u6570\u5206\u949f\u81f3\u6570\u5929\uff09\uff0c\u800c\u73b0\u6709\u65b9\u6cd5\uff08\u5982chain-of-trees\uff09\u7f3a\u4e4f\u5f62\u5f0f\u5316\u57fa\u7840\u4e14\u9002\u7528\u8303\u56f4\u6709\u9650\uff0c\u96be\u4ee5\u5e94\u5bf9\u590d\u6742\u7ea6\u675f\u548c\u5927\u89c4\u6a21\u7ec4\u5408\u7a7a\u95f4\u3002", "method": "\u5c06\u641c\u7d22\u7a7a\u95f4\u6784\u5efa\u95ee\u9898\u5efa\u6a21\u4e3a\u7ea6\u675f\u6ee1\u8db3\u95ee\u9898\uff08CSP\uff09\uff0c\u8bbe\u8ba1\u8fd0\u884c\u65f6\u89e3\u6790\u5668\u5c06\u7528\u6237\u5b9a\u4e49\u7684\u7ea6\u675f\u51fd\u6570\u8f6c\u6362\u4e3a\u6c42\u89e3\u5668\u53cb\u597d\u7684\u8868\u8fbe\u5f0f\uff0c\u4f18\u5316CSP\u6c42\u89e3\u5668\u4ee5\u5229\u7528\u81ea\u52a8\u8c03\u4f18\u7ea6\u675f\u4e2d\u7684\u5e38\u89c1\u7ed3\u6784\uff0c\u5e76\u96c6\u6210\u5230\u5f00\u6e90\u5de5\u5177\u4e2d\u3002", "result": "\u5728\u591a\u6837\u5316\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u4f18\u5316\u540e\u7684\u6c42\u89e3\u5668\u76f8\u6bd4\u66b4\u529b\u679a\u4e3e\u63d0\u901f\u56db\u4e2a\u6570\u91cf\u7ea7\uff0c\u76f8\u6bd4\u672a\u4f18\u5316CSP\u6c42\u89e3\u5668\u63d0\u901f\u4e09\u4e2a\u6570\u91cf\u7ea7\uff0c\u76f8\u6bd4\u4e3b\u6d41chain-of-trees\u6846\u67b6\u63d0\u901f\u4e00\u5230\u4e24\u4e2a\u6570\u91cf\u7ea7\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u81ea\u52a8\u8c03\u4f18\u4e2d\u641c\u7d22\u7a7a\u95f4\u6784\u5efa\u7684\u6027\u80fd\u74f6\u9888\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u5373\u63d2\u5373\u7528\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f7f\u63a2\u7d22\u6b64\u524d\u65e0\u6cd5\u5904\u7406\u7684\u5927\u89c4\u6a21\u95ee\u9898\u6210\u4e3a\u53ef\u80fd\u3002"}}
{"id": "2509.25626", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.25626", "abs": "https://arxiv.org/abs/2509.25626", "authors": ["Yi Hu", "Huiyang Zhou"], "title": "LLM-Powered Code Analysis and Optimization for Gaussian Splatting Kernels", "comment": null, "summary": "3D Gaussian splatting (3DGS) is a transformative technique with profound\nimplications on novel view synthesis and real-time rendering. Given its\nimportance, there have been many attempts to improve its performance. However,\nwith the increasing complexity of GPU architectures and the vast search space\nof performance-tuning parameters, it is a challenging task. Although manual\noptimizations have achieved remarkable speedups, they require domain expertise\nand the optimization process can be highly time consuming and error prone. In\nthis paper, we propose to exploit large language models (LLMs) to analyze and\noptimize Gaussian splatting kernels. To our knowledge, this is the first work\nto use LLMs to optimize highly specialized real-world GPU kernels. We reveal\nthe intricacies of using LLMs for code optimization and analyze the code\noptimization techniques from the LLMs. We also propose ways to collaborate with\nLLMs to further leverage their capabilities. For the original 3DGS code on the\nMipNeRF360 datasets, LLMs achieve significant speedups, 19% with Deepseek and\n24% with GPT-5, demonstrating the different capabilities of different LLMs. By\nfeeding additional information from performance profilers, the performance\nimprovement from LLM-optimized code is enhanced to up to 42% and 38% on\naverage. In comparison, our best-effort manually optimized version can achieve\na performance improvement up to 48% and 39% on average, showing that there are\nstill optimizations beyond the capabilities of current LLMs. On the other hand,\neven upon a newly proposed 3DGS framework with algorithmic optimizations,\nSeele, LLMs can still further enhance its performance by 6%, showing that there\nare optimization opportunities missed by domain experts. This highlights the\npotential of collaboration between domain experts and LLMs.", "AI": {"tldr": "\u672c\u6587\u9996\u6b21\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u4f18\u53163D\u9ad8\u65af\u6cfc\u6e85\uff083DGS\uff09\u7684GPU\u5185\u6838\u4ee3\u7801\uff0c\u5728\u591a\u4e2a\u6570\u636e\u96c6\u4e0a\u5b9e\u73b0\u6700\u9ad842%\u7684\u6027\u80fd\u63d0\u5347\uff0c\u5e76\u5c55\u793a\u4e86LLMs\u4e0e\u9886\u57df\u4e13\u5bb6\u534f\u4f5c\u4f18\u5316\u7684\u6f5c\u529b\u3002", "motivation": "3D\u9ad8\u65af\u6cfc\u6e85\uff083DGS\uff09\u5728\u65b0\u89c6\u89d2\u5408\u6210\u548c\u5b9e\u65f6\u6e32\u67d3\u4e2d\u5177\u6709\u91cd\u8981\u610f\u4e49\uff0c\u4f46\u5176\u6027\u80fd\u4f18\u5316\u9762\u4e34GPU\u67b6\u6784\u590d\u6742\u6027\u548c\u8c03\u53c2\u7a7a\u95f4\u5e9e\u5927\u7684\u6311\u6218\u3002\u624b\u52a8\u4f18\u5316\u867d\u6709\u6548\uff0c\u4f46\u8017\u65f6\u3001\u6613\u9519\u4e14\u4f9d\u8d56\u4e13\u4e1a\u77e5\u8bc6\uff0c\u56e0\u6b64\u4f5c\u8005\u63a2\u7d22\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u81ea\u52a8\u4f18\u53163DGS\u5185\u6838\u3002", "method": "\u4f5c\u8005\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\uff08\u5982Deepseek\u548cGPT-5\uff09\u5206\u6790\u5e76\u4f18\u53163DGS\u7684GPU\u5185\u6838\u4ee3\u7801\uff0c\u7ed3\u5408\u6027\u80fd\u5206\u6790\u5de5\u5177\u63d0\u4f9b\u7684\u989d\u5916\u4fe1\u606f\uff0c\u63a2\u7d22LLM\u5728\u771f\u5b9e\u4e16\u754c\u9ad8\u6027\u80fd\u8ba1\u7b97\u4efb\u52a1\u4e2d\u7684\u4f18\u5316\u80fd\u529b\uff0c\u5e76\u63d0\u51fa\u4e0eLLM\u534f\u4f5c\u4f18\u5316\u7684\u7b56\u7565\u3002", "result": "\u5728MipNeRF360\u6570\u636e\u96c6\u4e0a\uff0cLLM\u4f18\u5316\u4f7f\u539f\u59cb3DGS\u4ee3\u7801\u63d0\u901f19%\uff08Deepseek\uff09\u81f324%\uff08GPT-5\uff09\uff1b\u7ed3\u5408\u6027\u80fd\u5206\u6790\u4fe1\u606f\u540e\uff0c\u5e73\u5747\u63d0\u901f\u8fbe38%\uff0c\u6700\u9ad8\u8fbe42%\u3002\u5373\u4f7f\u5728\u5df2\u4f18\u5316\u7684\u65b0\u6846\u67b6Seele\u4e0a\uff0cLLM\u4ecd\u80fd\u5e26\u67656%\u7684\u989d\u5916\u63d0\u5347\u3002\u624b\u52a8\u4f18\u5316\u6700\u9ad8\u53ef\u8fbe48%\uff0c\u8868\u660e\u5f53\u524dLLM\u5c1a\u4e0d\u80fd\u8986\u76d6\u5168\u90e8\u4f18\u5316\u7a7a\u95f4\u3002", "conclusion": "\u5927\u8bed\u8a00\u6a21\u578b\u5728\u4f18\u5316\u9ad8\u5ea6\u4e13\u4e1a\u5316\u7684GPU\u5185\u6838\u65b9\u9762\u5c55\u73b0\u51fa\u663e\u8457\u6f5c\u529b\uff0c\u867d\u5c1a\u672a\u8d85\u8d8a\u9876\u5c16\u4eba\u5de5\u4f18\u5316\uff0c\u4f46\u80fd\u53d1\u73b0\u4e13\u5bb6\u9057\u6f0f\u7684\u4f18\u5316\u673a\u4f1a\uff0c\u51f8\u663e\u4e86\u4eba\u673a\u534f\u4f5c\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u4f18\u5316\u4e2d\u7684\u4ef7\u503c\u3002"}}
{"id": "2509.25828", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2509.25828", "abs": "https://arxiv.org/abs/2509.25828", "authors": ["Dusit Niyato", "Octavia A. Dobre", "Trung Q. Duong", "George K. Karagiannidis", "Robert Schober"], "title": "From Literature to Insights: Methodological Guidelines for Survey Writing in Communications Research", "comment": null, "summary": "The rapid growth of communications and networking research has created an\nunprecedented demand for high-quality survey and tutorial papers that can\nsynthesize vast bodies of literature into coherent understandings and\nactionable insights. However, writing impactful survey papers presents\nmultifaceted challenges that demand substantial effort beyond traditional\nresearch article composition. This article provides a systematic, practical\nroadmap for prospective authors in the communications research community,\ndrawing upon extensive editorial experience from premier venues such as the\nIEEE Communications Surveys & Tutorials. We present structured guidelines\ncovering seven essential aspects: strategic topic selection with novelty and\nimportance, systematic literature collection, effective structural\norganization, critical review writing, tutorial content development with\nemphasis on case studies, comprehensive illustration design that enhances\ncomprehension, and identification of future directions. Our goal is to enable\njunior researchers to craft exceptional survey and tutorial articles that\nenhance understanding and accelerate innovation within the communications and\nnetworking research ecosystem.", "AI": {"tldr": "\u672c\u6587\u4e3a\u901a\u4fe1\u4e0e\u7f51\u7edc\u9886\u57df\u7684\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u64b0\u5199\u9ad8\u8d28\u91cf\u7efc\u8ff0\u4e0e\u6559\u7a0b\u8bba\u6587\u7684\u7cfb\u7edf\u6027\u6307\u5357\uff0c\u6db5\u76d6\u9009\u9898\u3001\u6587\u732e\u6536\u96c6\u3001\u7ed3\u6784\u7ec4\u7ec7\u3001\u6279\u5224\u6027\u8bc4\u8ff0\u3001\u6848\u4f8b\u6559\u5b66\u3001\u56fe\u793a\u8bbe\u8ba1\u548c\u672a\u6765\u65b9\u5411\u7b49\u4e03\u4e2a\u5173\u952e\u65b9\u9762\u3002", "motivation": "\u901a\u4fe1\u4e0e\u7f51\u7edc\u7814\u7a76\u7684\u5feb\u901f\u53d1\u5c55\u50ac\u751f\u4e86\u5bf9\u9ad8\u8d28\u91cf\u7efc\u8ff0\u4e0e\u6559\u7a0b\u8bba\u6587\u7684\u8feb\u5207\u9700\u6c42\uff0c\u4f46\u64b0\u5199\u6b64\u7c7b\u8bba\u6587\u9762\u4e34\u8bf8\u591a\u6311\u6218\uff0c\u8fdc\u8d85\u4f20\u7edf\u7814\u7a76\u8bba\u6587\u7684\u5199\u4f5c\u590d\u6742\u5ea6\u3002", "method": "\u57fa\u4e8eIEEE Communications Surveys & Tutorials\u7b49\u9876\u7ea7\u671f\u520a\u7684\u4e30\u5bcc\u7f16\u8f91\u7ecf\u9a8c\uff0c\u63d0\u51fa\u4e00\u5957\u7ed3\u6784\u5316\u3001\u5b9e\u7528\u7684\u7efc\u8ff0\u8bba\u6587\u64b0\u5199\u8def\u7ebf\u56fe\u3002", "result": "\u4e3a\u521d\u7ea7\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u6e05\u6670\u53ef\u884c\u7684\u4e03\u6b65\u6307\u5357\uff0c\u5e2e\u52a9\u5176\u64b0\u5199\u5177\u6709\u5f71\u54cd\u529b\u3001\u80fd\u4fc3\u8fdb\u9886\u57df\u7406\u89e3\u4e0e\u521b\u65b0\u7684\u7efc\u8ff0\u4e0e\u6559\u7a0b\u6587\u7ae0\u3002", "conclusion": "\u901a\u8fc7\u7cfb\u7edf\u5316\u7684\u65b9\u6cd5\u548c\u5b9e\u8df5\u5efa\u8bae\uff0c\u672c\u6587\u65e8\u5728\u63d0\u5347\u901a\u4fe1\u9886\u57df\u7efc\u8ff0\u8bba\u6587\u7684\u8d28\u91cf\uff0c\u4ece\u800c\u63a8\u52a8\u6574\u4e2a\u7814\u7a76\u751f\u6001\u7684\u7406\u89e3\u6df1\u5316\u4e0e\u6280\u672f\u8fdb\u6b65\u3002"}}
{"id": "2509.25974", "categories": ["cs.NI", "cs.MA"], "pdf": "https://arxiv.org/pdf/2509.25974", "abs": "https://arxiv.org/abs/2509.25974", "authors": ["Subramanya Nagabhushanaradhya"], "title": "OpenID Connect for Agents (OIDC-A) 1.0: A Standard Extension for LLM-Based Agent Identity and Authorization", "comment": "10 pages, 5 tables, 2 code listings. Specification proposal available\n  at https://github.com/subramanya1997/oidc-a/", "summary": "OpenID Connect for Agents (OIDC-A) 1.0 is an extension to OpenID Connect Core\n1.0 that provides a comprehensive framework for representing, authenticating,\nand authorizing LLM-based agents within the OAuth 2.0 ecosystem. As autonomous\nAI agents become increasingly prevalent in digital systems, there is a critical\nneed for standardized protocols to establish agent identity, verify agent\nattestation, represent delegation chains, and enable fine-grained authorization\nbased on agent attributes. This specification defines standard claims,\nendpoints, and protocols that address these requirements while maintaining\ncompatibility with existing OAuth 2.0 and OpenID Connect infrastructure. The\nproposed framework introduces mechanisms for agent identity representation,\ndelegation chain validation, attestation verification, and capability-based\nauthorization, providing a foundation for secure and trustworthy\nagent-to-service interactions in modern distributed systems.", "AI": {"tldr": "OIDC-A 1.0 \u6269\u5c55\u4e86 OpenID Connect\uff0c\u4e3a LLM \u4ee3\u7406\u5728 OAuth 2.0 \u751f\u6001\u4e2d\u63d0\u4f9b\u8eab\u4efd\u8868\u793a\u3001\u8ba4\u8bc1\u4e0e\u7ec6\u7c92\u5ea6\u6388\u6743\u7684\u6807\u51c6\u6846\u67b6\u3002", "motivation": "\u968f\u7740\u81ea\u4e3b AI \u4ee3\u7406\u5728\u6570\u5b57\u7cfb\u7edf\u4e2d\u65e5\u76ca\u666e\u53ca\uff0c\u4e9f\u9700\u6807\u51c6\u5316\u534f\u8bae\u6765\u5efa\u7acb\u4ee3\u7406\u8eab\u4efd\u3001\u9a8c\u8bc1\u4ee3\u7406\u8bc1\u660e\u3001\u8868\u793a\u59d4\u6258\u94fe\uff0c\u5e76\u57fa\u4e8e\u4ee3\u7406\u5c5e\u6027\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u6388\u6743\u3002", "method": "\u5b9a\u4e49\u6807\u51c6\u58f0\u660e\u3001\u7aef\u70b9\u548c\u534f\u8bae\uff0c\u5f15\u5165\u4ee3\u7406\u8eab\u4efd\u8868\u793a\u3001\u59d4\u6258\u94fe\u9a8c\u8bc1\u3001\u8bc1\u660e\u9a8c\u8bc1\u548c\u57fa\u4e8e\u80fd\u529b\u7684\u6388\u6743\u673a\u5236\uff0c\u540c\u65f6\u517c\u5bb9\u73b0\u6709 OAuth 2.0 \u4e0e OpenID Connect \u57fa\u7840\u8bbe\u65bd\u3002", "result": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u652f\u6301\u5b89\u5168\u53ef\u4fe1\u7684\u4ee3\u7406-\u670d\u52a1\u4ea4\u4e92\u7684\u6807\u51c6\u5316\u6846\u67b6\u3002", "conclusion": "OIDC-A 1.0 \u4e3a\u73b0\u4ee3\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d LLM \u4ee3\u7406\u7684\u8eab\u4efd\u4e0e\u6388\u6743\u7ba1\u7406\u63d0\u4f9b\u4e86\u517c\u5bb9\u4e14\u53ef\u6269\u5c55\u7684\u57fa\u7840\u3002"}}
{"id": "2509.25193", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25193", "abs": "https://arxiv.org/abs/2509.25193", "authors": ["Abhinav Rastogi", "Adam Yang", "Albert Q. Jiang", "Alexander H. Liu", "Alexandre Sablayrolles", "Am\u00e9lie H\u00e9liou", "Am\u00e9lie Martin", "Anmol Agarwal", "Andy Ehrenberg", "Andy Lo", "Antoine Roux", "Arthur Darcet", "Arthur Mensch", "Baptiste Bout", "Baptiste Rozi\u00e8re", "Baudouin De Monicault", "Chris Bamford", "Christian Wallenwein", "Christophe Renaudin", "Cl\u00e9mence Lanfranchi", "Cl\u00e9ment Denoix", "Corentin Barreau", "Darius Dabert Devon Mizelle", "Diego de las Casas", "Elliot Chane-Sane", "Emilien Fugier", "Emma Bou Hanna", "Gabrielle Berrada", "Gauthier Delerce", "Gauthier Guinet", "Georgii Novikov", "Graham Neubig", "Guillaume Lample", "Guillaume Martin", "Himanshu Jaju", "Jan Ludziejewski", "Jason Rute", "Jean-Malo Delignon", "JeanHadrien Chabran", "Joachim Studnia", "Joep Barmentlo", "Jonas Amar", "Josselin Somerville Roberts", "Julien Denize", "Karan Saxena", "Karmesh Yadav", "Kartik Khandelwal", "Khyathi Raghavi Chandu", "Kush Jain", "L\u00e9lio Renard Lavaud", "L\u00e9onard Blier", "Lingxiao Zhao", "Louis Martin", "Lucile Saulnier", "Luyu Gao", "Marie Pellat", "Mathilde Guillaumin", "Mathis Felardos", "Matthieu Dinot", "Maxime Darrin", "Maximilian Augustin", "Micka\u00ebl Seznec", "Neha Gupta", "Nikhil Raghuraman", "Olivier Duchenne", "Patricia Wang", "Patrick von Platen", "Patryk Saffer", "Paul Jacob", "Paul Wambergue", "Paula Kurylowicz", "Philom\u00e8ne Chagniot", "Pierre Stock", "Pravesh Agrawal", "R\u00e9mi Delacourt", "Roman Soletskyi", "Romain Sauvestre", "Sagar Vaze", "Sanchit Gandhi", "Sandeep Subramanian", "Shashwat Dalal", "Siddharth Gandhi", "Soham Ghosh", "Srijan Mishra", "Sumukh Aithal", "Szymon Antoniak", "Teven Le Scao", "Thibaut Lavril", "Thibault Schueller", "Thomas Foubert", "Thomas Robert", "Thomas Wang", "Timoth\u00e9e Lacroix", "Tom Bewley", "Valeriia Nemychnikova", "Victor Paltz", "Virgile Richard", "Wen-Ding Li", "William Marshall", "Xingyao Wang", "Xuanyu Zhang", "Yihan Wan", "Yunhao Tang"], "title": "Devstral: Fine-tuning Language Models for Coding Agent Applications", "comment": null, "summary": "We introduce Devstral-Small, a lightweight open source model for code agents\nwith the best performance among models below 100B size. In this technical\nreport, we give an overview of how we design and develop a model and craft\nspecializations in agentic software development. The resulting model,\nDevstral-Small is a small 24B model, fast and easy to serve. Despite its size,\nDevstral-Small still attains competitive performance compared to models more\nthan an order of magnitude larger.", "AI": {"tldr": "\u63d0\u51fa\u4e86 Devstral-Small\uff0c\u4e00\u4e2a24B\u53c2\u6570\u7684\u8f7b\u91cf\u7ea7\u5f00\u6e90\u4ee3\u7801\u667a\u80fd\u4f53\u6a21\u578b\uff0c\u5728\u5c0f\u4e8e100B\u7684\u6a21\u578b\u4e2d\u6027\u80fd\u6700\u4f73\uff0c\u517c\u5177\u9ad8\u6548\u90e8\u7f72\u4e0e\u5f3a\u5927\u6027\u80fd\u3002", "motivation": "\u5f00\u53d1\u4e00\u4e2a\u8f7b\u91cf\u3001\u9ad8\u6548\u4e14\u6027\u80fd\u4f18\u8d8a\u7684\u5f00\u6e90\u4ee3\u7801\u667a\u80fd\u4f53\u6a21\u578b\uff0c\u4ee5\u6ee1\u8db3\u5728\u8d44\u6e90\u53d7\u9650\u73af\u5883\u4e0b\u5bf9\u9ad8\u6027\u80fd\u4ee3\u7801\u751f\u6210\u6a21\u578b\u7684\u9700\u6c42\u3002", "method": "\u8bbe\u8ba1\u5e76\u5f00\u53d1\u4e86\u4e00\u4e2a24B\u53c2\u6570\u7684\u5c0f\u578b\u6a21\u578b Devstral-Small\uff0c\u5e76\u5728\u667a\u80fd\u4f53\u8f6f\u4ef6\u5f00\u53d1\u4efb\u52a1\u4e2d\u8fdb\u884c\u4e86\u4e13\u95e8\u4f18\u5316\u3002", "result": "Devstral-Small \u5728\u5c0f\u4e8e100B\u53c2\u6570\u7684\u6a21\u578b\u4e2d\u5b9e\u73b0\u4e86\u6700\u4f73\u6027\u80fd\uff0c\u4e14\u6027\u80fd\u53ef\u4e0e\u5927\u4e00\u4e2a\u6570\u91cf\u7ea7\u4ee5\u4e0a\u7684\u5927\u6a21\u578b\u76f8\u5ab2\u7f8e\u3002", "conclusion": "Devstral-Small \u8bc1\u660e\u4e86\u5c0f\u578b\u6a21\u578b\u901a\u8fc7\u9488\u5bf9\u6027\u8bbe\u8ba1\u548c\u4f18\u5316\uff0c\u4e5f\u80fd\u5728\u4ee3\u7801\u667a\u80fd\u4f53\u4efb\u52a1\u4e2d\u5b9e\u73b0\u4e0e\u5927\u578b\u6a21\u578b\u76f8\u5f53\u7684\u7ade\u4e89\u529b\uff0c\u540c\u65f6\u5177\u5907\u90e8\u7f72\u4fbf\u6377\u548c\u63a8\u7406\u9ad8\u6548\u7684\u4f18\u52bf\u3002"}}
{"id": "2509.26043", "categories": ["cs.DC", "cs.AR"], "pdf": "https://arxiv.org/pdf/2509.26043", "abs": "https://arxiv.org/abs/2509.26043", "authors": ["Alberto Scionti", "Paolo Savio", "Francesco Lubrano", "Federico Stirano", "Antonino Nespola", "Olivier Terzo", "Corrado De Sio", "Luca Sterpone"], "title": "Enabling Time-Aware Priority Traffic Management over Distributed FPGA Nodes", "comment": null, "summary": "Network Interface Cards (NICs) greatly evolved from simple basic devices\nmoving traffic in and out of the network to complex heterogeneous systems\noffloading host CPUs from performing complex tasks on in-transit packets. These\nlatter comprise different types of devices, ranging from NICs accelerating\nfixed specific functions (e.g., on-the-fly data compression/decompression,\nchecksum computation, data encryption, etc.) to complex Systems-on-Chip (SoC)\nequipped with both general purpose processors and specialized engines\n(Smart-NICs). Similarly, Field Programmable Gate Arrays (FPGAs) moved from pure\nreprogrammable devices to modern heterogeneous systems comprising\ngeneral-purpose processors, real-time cores and even AI-oriented engines.\nFurthermore, the availability of high-speed network interfaces (e.g., SFPs)\nmakes modern FPGAs a good choice for implementing Smart-NICs. In this work, we\nextended the functionalities offered by an open-source NIC implementation\n(Corundum) by enabling time-aware traffic management in hardware, and using\nthis feature to control the bandwidth associated with different traffic\nclasses. By exposing dedicated control registers on the AXI bus, the driver of\nthe NIC can easily configure the transmission bandwidth of different\nprioritized queues. Basically, each control register is associated with a\nspecific transmission queue (Corundum can expose up to thousands of\ntransmission and receiving queues), and sets up the fraction of time in a\ntransmission window which the queue is supposed to get access the output port\nand transmit the packets. Queues are then prioritized and associated to\ndifferent traffic classes through the Linux QDISC mechanism. Experimental\nevaluation demonstrates that the approach allows to properly manage the\nbandwidth reserved to the different transmission flows.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u5728\u5f00\u6e90NIC\u5b9e\u73b0Corundum\u4e2d\u5f15\u5165\u786c\u4ef6\u7ea7\u65f6\u95f4\u611f\u77e5\u6d41\u91cf\u7ba1\u7406\u529f\u80fd\uff0c\u5b9e\u73b0\u4e86\u5bf9\u4e0d\u540c\u4f18\u5148\u7ea7\u961f\u5217\u4f20\u8f93\u5e26\u5bbd\u7684\u7cbe\u786e\u63a7\u5236\uff0c\u5e76\u901a\u8fc7Linux QDISC\u673a\u5236\u652f\u6301\u591a\u7c7b\u6d41\u91cf\u7684\u5e26\u5bbd\u9884\u7559\u3002", "motivation": "\u968f\u7740NIC\u548cFPGA\u5411\u5f02\u6784\u667a\u80fd\u7cfb\u7edf\u6f14\u8fdb\uff0c\u6709\u5fc5\u8981\u5728\u786c\u4ef6\u5c42\u9762\u5b9e\u73b0\u66f4\u7cbe\u7ec6\u7684\u6d41\u91cf\u63a7\u5236\u673a\u5236\uff0c\u4ee5\u652f\u6301\u4e0d\u540c\u6d41\u91cf\u7c7b\u522b\u7684\u670d\u52a1\u8d28\u91cf\uff08QoS\uff09\u9700\u6c42\u3002", "method": "\u5728Corundum\u5f00\u6e90NIC\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7AXI\u603b\u7ebf\u6dfb\u52a0\u4e13\u7528\u63a7\u5236\u5bc4\u5b58\u5668\uff0c\u4e3a\u6bcf\u4e2a\u4f20\u8f93\u961f\u5217\u914d\u7f6e\u5176\u5728\u4f20\u8f93\u7a97\u53e3\u4e2d\u5360\u7528\u8f93\u51fa\u7aef\u53e3\u7684\u65f6\u95f4\u6bd4\u4f8b\uff0c\u7ed3\u5408Linux QDISC\u673a\u5236\u5bf9\u961f\u5217\u8fdb\u884c\u4f18\u5148\u7ea7\u5212\u5206\u548c\u6d41\u91cf\u5206\u7c7b\u3002", "result": "\u5b9e\u9a8c\u9a8c\u8bc1\u4e86\u8be5\u65b9\u6cd5\u80fd\u6709\u6548\u7ba1\u7406\u5206\u914d\u7ed9\u4e0d\u540c\u4f20\u8f93\u6d41\u7684\u5e26\u5bbd\uff0c\u5b9e\u73b0\u5bf9\u591a\u7c7b\u6d41\u91cf\u7684\u7cbe\u786e\u5e26\u5bbd\u63a7\u5236\u3002", "conclusion": "\u901a\u8fc7\u5728\u786c\u4ef6\u4e2d\u5b9e\u73b0\u65f6\u95f4\u611f\u77e5\u7684\u6d41\u91cf\u8c03\u5ea6\u673a\u5236\uff0c\u53ef\u4ee5\u9ad8\u6548\u652f\u6301\u591a\u7c7b\u6d41\u91cf\u7684\u5e26\u5bbd\u9884\u7559\uff0c\u63d0\u5347Smart-NIC\u5728\u590d\u6742\u7f51\u7edc\u73af\u5883\u4e2d\u7684\u670d\u52a1\u8d28\u91cf\u4fdd\u969c\u80fd\u529b\u3002"}}
{"id": "2509.25853", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.25853", "abs": "https://arxiv.org/abs/2509.25853", "authors": ["Jingyao Zhang", "Jaewoo Park", "Jongeun Lee", "Elaheh Sadredini"], "title": "SAIL: SRAM-Accelerated LLM Inference System with Lookup-Table-based GEMV", "comment": null, "summary": "Large Language Model (LLM) inference requires substantial computational\nresources, yet CPU-based inference remains essential for democratizing AI due\nto the widespread availability of CPUs compared to specialized accelerators.\nHowever, efficient LLM inference on CPUs faces two fundamental challenges: (1)\nexisting CPU architectures struggle with low-precision arithmetic required by\nquantized models, where optimal bit precision varies across models and layers;\nand (2) the memory-bound nature of the token generation phase creates severe\nperformance bottlenecks. To address these challenges, we propose SAIL\n(SRAM-Accelerated Inference of LLMs), a CPU-based inference solution that\nefficiently supports arbitrary bit precisions with minimal overhead. SAIL\nintegrates three key innovations: First, we introduce Batched LUT-based General\nMatrix-Vector Multiplication (LUT-GEMV) with SRAM-based processing-in-memory,\nenabling high data reuse through lookup tables and reducing memory movement.\nSecond, our Pattern-Aware LUT optimization identifies and exploits redundancy\nin input activation patterns, reducing computation cycles by 13.8\\%. Third, we\ndevelop an in-memory type conversion algorithm that leverages PIM's parallelism\nfor efficient de-/quantization operations, alleviating pressure on CPU's vector\nunits. Our architecture requires only 2\\% hardware overhead and a single new\ninstruction, while maintaining dual functionality as both compute and storage\nunits. Experimental evaluations using a modified gem5 simulator demonstrate\nthat SAIL achieves up to 10.7x speedup and 19.9x higher tokens per dollar\ncompared to ARM Neoverse-N1 CPU baselines, and up to 7.04x better cost\nefficiency than NVIDIA V100 GPUs, establishing a practical path for efficient\nCPU-based LLM inference.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faSAIL\uff0c\u4e00\u79cd\u57fa\u4e8eCPU\u7684\u9ad8\u6548\u5927\u8bed\u8a00\u6a21\u578b\u63a8\u7406\u65b9\u6848\uff0c\u901a\u8fc7SRAM\u5b58\u5185\u8ba1\u7b97\u652f\u6301\u4efb\u610f\u6bd4\u7279\u7cbe\u5ea6\uff0c\u663e\u8457\u63d0\u5347\u63a8\u7406\u901f\u5ea6\u4e0e\u6210\u672c\u6548\u76ca\u3002", "motivation": "CPU\u5728\u5927\u8bed\u8a00\u6a21\u578b\u63a8\u7406\u4e2d\u5177\u6709\u666e\u53ca\u6027\u4f18\u52bf\uff0c\u4f46\u9762\u4e34\u4f4e\u7cbe\u5ea6\u8ba1\u7b97\u652f\u6301\u4e0d\u8db3\u548c\u751f\u6210\u9636\u6bb5\u5185\u5b58\u74f6\u9888\u4e24\u5927\u6311\u6218\u3002", "method": "SAIL\u7ed3\u5408\u4e09\u9879\u521b\u65b0\uff1a\u57fa\u4e8eSRAM\u7684\u67e5\u8868\u6cd5\u901a\u7528\u77e9\u9635-\u5411\u91cf\u4e58\uff08LUT-GEMV\uff09\u3001\u611f\u77e5\u8f93\u5165\u6fc0\u6d3b\u6a21\u5f0f\u5197\u4f59\u7684LUT\u4f18\u5316\uff0c\u4ee5\u53ca\u5229\u7528\u5b58\u5185\u8ba1\u7b97\u5e76\u884c\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u7b97\u6cd5\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0cSAIL\u76f8\u6bd4ARM Neoverse-N1 CPU\u57fa\u7ebf\u6700\u9ad8\u5b9e\u73b010.7\u500d\u52a0\u901f\u548c19.9\u500d\u6bcf\u7f8e\u5143\u751f\u6210token\u6570\u63d0\u5347\uff0c\u6210\u672c\u6548\u7387\u4f18\u4e8eNVIDIA V100 GPU\u8fbe7.04\u500d\u3002", "conclusion": "SAIL\u4ee5\u6781\u4f4e\u786c\u4ef6\u5f00\u9500\uff08\u4ec52%\uff09\u548c\u5355\u4e00\u65b0\u6307\u4ee4\uff0c\u4e3a\u9ad8\u6548CPU\u5927\u8bed\u8a00\u6a21\u578b\u63a8\u7406\u63d0\u4f9b\u4e86\u53ef\u884c\u8def\u5f84\u3002"}}
{"id": "2509.25855", "categories": ["cs.NI", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2509.25855", "abs": "https://arxiv.org/abs/2509.25855", "authors": ["Peini Yi", "Wenchi Cheng", "Jingqing Wang", "Jinzhe Pan", "Yuehui Ouyang", "Wei Zhang"], "title": "Intelligent Multi-link EDCA Optimization for Delay-Bounded QoS in Wi-Fi 7", "comment": null, "summary": "IEEE 802.11be (Wi-Fi 7) introduces Multi-Link Operation (MLO) as a While MLO\noffers significant parallelism and capacity, realizing its full potential in\nguaranteeing strict delay bounds and optimizing Quality of Service (QoS) for\ndiverse, heterogeneous traffic streams in complex multi-link scenarios remain a\nsignificant challenge. This is largely due to the limitations of static\nEnhanced Distributed Channel Access (EDCA) parameters and the complexity\ninherent in cross-link traffic management. To address this, this paper\ninvestigates the correlation between overall MLO QoS indicators and the\nconfiguration of EDCA parameters and Acess Catagory (AC) traffic allocation\namong links. Based on this analysis, we formulate a constrained optimization\nproblem aiming to minimize the sum of overall packet loss rates for all access\ncategories while satisfying their respective overall delay violation\nprobability constraints. A Genetic Algorithm (GA)-based MLO EDCA QoS\noptimization algorithm is designed to efficiently search the complex\nconfiguration space of AC assignments and EDCA parameters. Experimental results\ndemonstrate that the proposed approach's efficacy in generating adaptive MLO\nconfiguration strategies that align with diverse service requirements. The\nproposed solution significantly improves delay distribution characteristics,\nand enhance QoS robustness and resource utilization efficiency in high-load MLO\nenvironments.", "AI": {"tldr": "\u672c\u6587\u9488\u5bf9Wi-Fi 7\u591a\u94fe\u8def\u64cd\u4f5c\uff08MLO\uff09\u4e2d\u9759\u6001EDCA\u53c2\u6570\u548c\u8de8\u94fe\u8def\u6d41\u91cf\u7ba1\u7406\u96be\u4ee5\u6ee1\u8db3\u4e25\u683c\u65f6\u5ef6\u548c\u591a\u6837\u5316QoS\u9700\u6c42\u7684\u95ee\u9898\uff0c\u63d0\u51fa\u4e00\u79cd\u57fa\u4e8e\u9057\u4f20\u7b97\u6cd5\u7684MLO EDCA\u53c2\u6570\u4e0e\u63a5\u5165\u7c7b\u522b\uff08AC\uff09\u6d41\u91cf\u5206\u914d\u8054\u5408\u4f18\u5316\u65b9\u6cd5\uff0c\u4ee5\u6700\u5c0f\u5316\u603b\u4e22\u5305\u7387\u5e76\u6ee1\u8db3\u5404AC\u7684\u65f6\u5ef6\u8fdd\u89c4\u6982\u7387\u7ea6\u675f\uff0c\u5b9e\u9a8c\u8868\u660e\u8be5\u65b9\u6cd5\u80fd\u6709\u6548\u63d0\u5347\u9ad8\u8d1f\u8f7d\u4e0bMLO\u7684QoS\u9c81\u68d2\u6027\u548c\u8d44\u6e90\u5229\u7528\u6548\u7387\u3002", "motivation": "Wi-Fi 7\u7684MLO\u867d\u63d0\u4f9b\u5e76\u884c\u4f20\u8f93\u80fd\u529b\uff0c\u4f46\u73b0\u6709\u9759\u6001EDCA\u53c2\u6570\u548c\u590d\u6742\u7684\u8de8\u94fe\u8def\u6d41\u91cf\u7ba1\u7406\u96be\u4ee5\u5728\u591a\u94fe\u8def\u5f02\u6784\u6d41\u91cf\u573a\u666f\u4e0b\u4fdd\u969c\u4e25\u683c\u7684\u65f6\u5ef6\u754c\u9650\u5e76\u4f18\u5316QoS\u3002", "method": "\u5206\u6790MLO\u6574\u4f53QoS\u6307\u6807\u4e0eEDCA\u53c2\u6570\u53caAC\u6d41\u91cf\u5206\u914d\u4e4b\u95f4\u7684\u5173\u8054\uff0c\u6784\u5efa\u4ee5\u6700\u5c0f\u5316\u6240\u6709AC\u603b\u4e22\u5305\u7387\u4e3a\u76ee\u6807\u3001\u6ee1\u8db3\u5404\u81ea\u65f6\u5ef6\u8fdd\u89c4\u6982\u7387\u7ea6\u675f\u7684\u4f18\u5316\u95ee\u9898\uff0c\u5e76\u8bbe\u8ba1\u57fa\u4e8e\u9057\u4f20\u7b97\u6cd5\uff08GA\uff09\u7684MLO EDCA QoS\u4f18\u5316\u7b97\u6cd5\uff0c\u5728\u590d\u6742\u7684AC\u5206\u914d\u4e0eEDCA\u53c2\u6570\u914d\u7f6e\u7a7a\u95f4\u4e2d\u9ad8\u6548\u641c\u7d22\u6700\u4f18\u89e3\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u6240\u63d0\u65b9\u6cd5\u80fd\u751f\u6210\u9002\u5e94\u4e0d\u540c\u4e1a\u52a1\u9700\u6c42\u7684\u81ea\u9002\u5e94MLO\u914d\u7f6e\u7b56\u7565\uff0c\u663e\u8457\u6539\u5584\u65f6\u5ef6\u5206\u5e03\u7279\u6027\uff0c\u63d0\u5347\u9ad8\u8d1f\u8f7d\u73af\u5883\u4e0bMLO\u7684QoS\u9c81\u68d2\u6027\u548c\u8d44\u6e90\u5229\u7528\u6548\u7387\u3002", "conclusion": "\u901a\u8fc7\u8054\u5408\u4f18\u5316EDCA\u53c2\u6570\u4e0eAC\u6d41\u91cf\u5728\u591a\u94fe\u8def\u4e0a\u7684\u5206\u914d\uff0c\u6240\u63d0\u51fa\u7684GA-based\u65b9\u6cd5\u6709\u6548\u514b\u670d\u4e86\u9759\u6001EDCA\u5728MLO\u573a\u666f\u4e0b\u7684\u5c40\u9650\u6027\uff0c\u4e3aWi-Fi 7\u5b9e\u73b0\u9ad8\u53ef\u9760\u3001\u4f4e\u65f6\u5ef6\u7684QoS\u4fdd\u969c\u63d0\u4f9b\u4e86\u53ef\u884c\u65b9\u6848\u3002"}}
{"id": "2509.25194", "categories": ["cs.SE", "physics.comp-ph"], "pdf": "https://arxiv.org/pdf/2509.25194", "abs": "https://arxiv.org/abs/2509.25194", "authors": ["Haoyang Wu", "Xinxin Zhang", "Lailai Zhu"], "title": "Automated Code Development for PDE Solvers Using Large Language Models", "comment": null, "summary": "Foundation models -- large language models (LLMs) in particular -- have\nbecome ubiquitous, shaping daily life and driving breakthroughs across science,\nengineering, and technology. Harnessing their broad cross-domain knowledge,\ntext-processing, and reasoning abilities for software development, e.g.,\nnumerical libraries for solving partial differential equations (PDEs), is\ntherefore attracting growing interest. Yet existing studies mainly automate\ncase setup and execution for end users. We introduce LLM-PDEveloper, a\nzero-shot, multi-agent LLM framework that automates code development for PDE\nlibraries, specifically targeting secondary developers. By translating\nmathematical and algorithmic descriptions directly into source code,\nLLM-PDEveloper generates new solvers/modules and adapts existing ones. This\nend-to-end math-to-code approach enables a self-augmenting pipeline that\ncontinuously expands the codebase of a library, extends its capacities, and\nbroadens its scope. We demonstrate LLM-PDEveloper on three tasks: 1) build a\nsolver for a new PDE, 2) implement new BCs for a given PDE, and 3) modify an\nexisting solver to incorporate additional terms, achieving moderate success\nrates. Failures due to syntactic errors made by LLMs are analyzed and we\npropose effective fixes. We also identify the mechanisms underlying certain\nsemantic errors, guiding future research.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faLLM-PDEveloper\uff0c\u4e00\u4e2a\u96f6\u6837\u672c\u3001\u591a\u667a\u80fd\u4f53\u7684\u5927\u8bed\u8a00\u6a21\u578b\u6846\u67b6\uff0c\u7528\u4e8e\u81ea\u52a8\u5316\u751f\u6210\u548c\u4fee\u6539\u504f\u5fae\u5206\u65b9\u7a0b\uff08PDE\uff09\u6570\u503c\u6c42\u89e3\u5e93\u7684\u4ee3\u7801\uff0c\u5b9e\u73b0\u4ece\u6570\u5b66\u63cf\u8ff0\u5230\u6e90\u4ee3\u7801\u7684\u7aef\u5230\u7aef\u8f6c\u6362\uff0c\u652f\u6301\u5e93\u7684\u81ea\u6211\u589e\u5f3a\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u4e3a\u7ec8\u7aef\u7528\u6237\u81ea\u52a8\u5316PDE\u6c42\u89e3\u7684\u6848\u4f8b\u8bbe\u7f6e\u4e0e\u6267\u884c\uff0c\u7f3a\u4e4f\u9762\u5411\u4e8c\u6b21\u5f00\u53d1\u8005\u7684\u4ee3\u7801\u5f00\u53d1\u81ea\u52a8\u5316\u5de5\u5177\uff1b\u800c\u5927\u8bed\u8a00\u6a21\u578b\u5177\u5907\u8de8\u9886\u57df\u77e5\u8bc6\u548c\u63a8\u7406\u80fd\u529b\uff0c\u6709\u671b\u7528\u4e8ePDE\u6570\u503c\u5e93\u7684\u5f00\u53d1\u3002", "method": "\u63d0\u51faLLM-PDEveloper\u6846\u67b6\uff0c\u5229\u7528\u591a\u667a\u80fd\u4f53\u5927\u8bed\u8a00\u6a21\u578b\uff0c\u5c06\u6570\u5b66\u548c\u7b97\u6cd5\u63cf\u8ff0\u76f4\u63a5\u7ffb\u8bd1\u4e3a\u6e90\u4ee3\u7801\uff0c\u5b9e\u73b0\u65b0\u6c42\u89e3\u5668/\u6a21\u5757\u7684\u751f\u6210\u53ca\u73b0\u6709\u6a21\u5757\u7684\u4fee\u6539\uff0c\u6784\u5efa\u7aef\u5230\u7aef\u7684\u201c\u6570\u5b66\u5230\u4ee3\u7801\u201d\u81ea\u589e\u5f3a\u6d41\u6c34\u7ebf\u3002", "result": "\u5728\u4e09\u9879\u4efb\u52a1\u4e0a\u9a8c\u8bc1\u4e86\u8be5\u6846\u67b6\uff1a1\uff09\u4e3a\u65b0PDE\u6784\u5efa\u6c42\u89e3\u5668\uff0c2\uff09\u4e3a\u5df2\u6709PDE\u5b9e\u73b0\u65b0\u8fb9\u754c\u6761\u4ef6\uff0c3\uff09\u4fee\u6539\u73b0\u6709\u6c42\u89e3\u5668\u4ee5\u52a0\u5165\u65b0\u9879\uff0c\u53d6\u5f97\u4e86\u4e2d\u7b49\u6210\u529f\u7387\uff1b\u540c\u65f6\u5206\u6790\u4e86LLM\u4ea7\u751f\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u9519\u8bef\uff0c\u5e76\u63d0\u51fa\u6709\u6548\u4fee\u590d\u7b56\u7565\u3002", "conclusion": "LLM-PDEveloper\u5c55\u793a\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5728\u79d1\u5b66\u8ba1\u7b97\u5e93\u5f00\u53d1\u4e2d\u7684\u6f5c\u529b\uff0c\u4e3aPDE\u6570\u503c\u5e93\u7684\u6301\u7eed\u6269\u5c55\u548c\u81ea\u52a8\u5316\u5f00\u53d1\u63d0\u4f9b\u4e86\u53ef\u884c\u8def\u5f84\uff0c\u5e76\u4e3a\u672a\u6765\u6539\u8fdbLLM\u5728\u4ee3\u7801\u751f\u6210\u4e2d\u7684\u8bed\u4e49\u51c6\u786e\u6027\u6307\u660e\u65b9\u5411\u3002"}}
{"id": "2509.26092", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.26092", "abs": "https://arxiv.org/abs/2509.26092", "authors": ["Kuan-Wei Lu", "Ding-Yong Hong", "Pangfeng Liu", "Jan-Jan Wu"], "title": "Efficient Distributed Training via Dual Batch Sizes and Cyclic Progressive Learning", "comment": null, "summary": "Distributed machine learning is critical for training deep learning models on\nlarge datasets and with numerous parameters. Current research primarily focuses\non leveraging additional hardware resources and powerful computing units to\naccelerate the training process. As a result, larger batch sizes are often\nemployed to speed up training. However, training with large batch sizes can\nlead to lower accuracy due to poor generalization. To address this issue, we\npropose the dual batch size learning scheme, a distributed training method\nbuilt on the parameter server framework. This approach maximizes training\nefficiency by utilizing the largest batch size that the hardware can support\nwhile incorporating a smaller batch size to enhance model generalization. By\nusing two different batch sizes simultaneously, this method reduces testing\nloss and enhances generalization, with minimal extra training time.\nAdditionally, to mitigate the time overhead caused by dual batch size learning,\nwe propose the cyclic progressive learning scheme. This technique gradually\nadjusts image resolution from low to high during training, significantly\nboosting training speed. By combining cyclic progressive learning with dual\nbatch size learning, our hybrid approach improves both model generalization and\ntraining efficiency. Experimental results using ResNet-18 show that, compared\nto conventional training methods, our method can improve accuracy by 3.3% while\nreducing training time by 10.6% on CIFAR-100, and improve accuracy by 0.1%\nwhile reducing training time by 35.7% on ImageNet.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u53cc\u6279\u91cf\u5b66\u4e60\u548c\u5faa\u73af\u6e10\u8fdb\u5b66\u4e60\u7684\u6df7\u5408\u5206\u5e03\u5f0f\u8bad\u7ec3\u65b9\u6cd5\uff0c\u5728\u63d0\u5347\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u7684\u540c\u65f6\u663e\u8457\u51cf\u5c11\u8bad\u7ec3\u65f6\u95f4\u3002", "motivation": "\u5927\u6279\u6b21\u8bad\u7ec3\u867d\u80fd\u52a0\u901f\u5206\u5e03\u5f0f\u6df1\u5ea6\u5b66\u4e60\uff0c\u4f46\u4f1a\u56e0\u6cdb\u5316\u80fd\u529b\u5dee\u800c\u964d\u4f4e\u51c6\u786e\u7387\uff1b\u73b0\u6709\u65b9\u6cd5\u7f3a\u4e4f\u5728\u4fdd\u6301\u8bad\u7ec3\u6548\u7387\u7684\u540c\u65f6\u63d0\u5347\u6cdb\u5316\u6027\u80fd\u7684\u6709\u6548\u7b56\u7565\u3002", "method": "\u63d0\u51fa\u53cc\u6279\u91cf\u5b66\u4e60\u65b9\u6848\uff08\u540c\u65f6\u4f7f\u7528\u5927\u3001\u5c0f\u6279\u91cf\uff09\u4ee5\u517c\u987e\u8bad\u7ec3\u6548\u7387\u4e0e\u6cdb\u5316\u80fd\u529b\uff0c\u5e76\u7ed3\u5408\u5faa\u73af\u6e10\u8fdb\u5b66\u4e60\uff08\u9010\u6b65\u63d0\u9ad8\u56fe\u50cf\u5206\u8fa8\u7387\uff09\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u8bad\u7ec3\u5f00\u9500\u3002", "result": "\u5728CIFAR-100\u4e0a\u51c6\u786e\u7387\u63d0\u53473.3%\u3001\u8bad\u7ec3\u65f6\u95f4\u51cf\u5c1110.6%\uff1b\u5728ImageNet\u4e0a\u51c6\u786e\u7387\u63d0\u53470.1%\u3001\u8bad\u7ec3\u65f6\u95f4\u51cf\u5c1135.7%\u3002", "conclusion": "\u6240\u63d0\u51fa\u7684\u6df7\u5408\u8bad\u7ec3\u65b9\u6cd5\u5728\u4e0d\u663e\u8457\u589e\u52a0\u8bad\u7ec3\u65f6\u95f4\u7684\u524d\u63d0\u4e0b\u6709\u6548\u63d0\u5347\u4e86\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u548c\u8bad\u7ec3\u6548\u7387\u3002"}}
{"id": "2509.26065", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.26065", "abs": "https://arxiv.org/abs/2509.26065", "authors": ["Alberto Scionti", "Paolo Savio", "Francesco Lubrano", "Olivier Terzo", "Marco Ferretti", "Florin Apopei", "Juri Bellucci", "Ennio Spano", "Luca Carriere"], "title": "Runtime Energy Monitoring for RISC-V Soft-Cores", "comment": null, "summary": "Energy efficiency is one of the major concern in designing advanced computing\ninfrastructures. From single nodes to large-scale systems (data centers),\nmonitoring the energy consumption of the computing system when applications run\nis a critical task. Designers and application developers often rely on software\ntools and detailed architectural models to extract meaningful information and\ndetermine the system energy consumption. However, when a design space\nexploration is required, designers may incur in continuous tuning of the models\nto match with the system under evaluation. To overcome such limitations, we\npropose a holistic approach to monitor energy consumption at runtime without\nthe need of running complex (micro-)architectural models. Our approach is based\non a measurement board coupled with a FPGA-based System-on-Module. The\nmeasuring board captures currents and voltages (up to tens measuring points)\ndriving the FPGA and exposes such values through a specific memory region. A\nrunning service reads and computes energy consumption statistics without\nconsuming extra resources on the FPGA device. Our approach is also scalable to\nmonitoring of multi-nodes infrastructures (clusters). We aim to leverage this\nframework to perform experiments in the context of an aeronautical design\napplication; specifically, we will look at optimizing performance and energy\nconsumption of a shallow artificial neural network on RISC-V based soft-cores.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65e0\u9700\u590d\u6742\u67b6\u6784\u6a21\u578b\u5373\u53ef\u5728\u8fd0\u884c\u65f6\u76d1\u63a7\u8ba1\u7b97\u7cfb\u7edf\u80fd\u8017\u7684\u6574\u4f53\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u57fa\u4e8e\u6d4b\u91cf\u677f\u4e0eFPGA\u7cfb\u7edf\u6a21\u5757\u7ed3\u5408\uff0c\u53ef\u6269\u5c55\u81f3\u591a\u8282\u70b9\u96c6\u7fa4\uff0c\u5e76\u8ba1\u5212\u7528\u4e8e\u822a\u7a7a\u8bbe\u8ba1\u4e2dRISC-V\u8f6f\u6838\u4e0a\u6d45\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u80fd\u6548\u4f18\u5316\u3002", "motivation": "\u5728\u8ba1\u7b97\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\uff0c\u80fd\u8017\u76d1\u63a7\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u4f20\u7edf\u4f9d\u8d56\u8f6f\u4ef6\u5de5\u5177\u548c\u8be6\u7ec6\u67b6\u6784\u6a21\u578b\u7684\u65b9\u6cd5\u5728\u8bbe\u8ba1\u7a7a\u95f4\u63a2\u7d22\u65f6\u9700\u9891\u7e41\u8c03\u6574\u6a21\u578b\uff0c\u6548\u7387\u4f4e\u4e0b\u3002", "method": "\u91c7\u7528\u4e00\u4e2a\u6d4b\u91cf\u677f\u4e0eFPGA\u7cfb\u7edf\u6a21\u5757\u96c6\u6210\uff0c\u5b9e\u65f6\u91c7\u96c6\u7535\u6d41\u548c\u7535\u538b\uff08\u6700\u591a\u6570\u5341\u4e2a\u6d4b\u91cf\u70b9\uff09\uff0c\u5e76\u901a\u8fc7\u7279\u5b9a\u5185\u5b58\u533a\u57df\u66b4\u9732\u6570\u636e\uff1b\u8fd0\u884c\u4e2d\u7684\u670d\u52a1\u8bfb\u53d6\u5e76\u8ba1\u7b97\u80fd\u8017\u7edf\u8ba1\uff0c\u4e0d\u5360\u7528FPGA\u989d\u5916\u8d44\u6e90\u3002", "result": "\u8be5\u65b9\u6cd5\u5b9e\u73b0\u4e86\u65e0\u9700\u590d\u6742\u6a21\u578b\u7684\u8fd0\u884c\u65f6\u80fd\u8017\u76d1\u63a7\uff0c\u4e14\u5177\u5907\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\uff0c\u9002\u7528\u4e8e\u591a\u8282\u70b9\u96c6\u7fa4\u3002", "conclusion": "\u6240\u63d0\u51fa\u7684\u6846\u67b6\u6709\u6548\u89e3\u51b3\u4e86\u4f20\u7edf\u80fd\u8017\u5efa\u6a21\u7684\u5c40\u9650\u6027\uff0c\u4e3a\u5728RISC-V\u8f6f\u6838\u4e0a\u4f18\u5316\u6d45\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u6027\u80fd\u4e0e\u80fd\u6548\u63d0\u4f9b\u4e86\u53ef\u884c\u5b9e\u9a8c\u5e73\u53f0\u3002"}}
{"id": "2509.25905", "categories": ["cs.NI", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25905", "abs": "https://arxiv.org/abs/2509.25905", "authors": ["Conghao Zhou", "Jie Gao", "Shisheng Hu", "Nan Cheng", "Weihua Zhuang", "Xuemin Shen"], "title": "User-Centric Communication Service Provision for Edge-Assisted Mobile Augmented Reality", "comment": "accepted by IEEE Transactions on Mobile Computing", "summary": "Future 6G networks are envisioned to facilitate edge-assisted mobile\naugmented reality (MAR) via strengthening the collaboration between MAR devices\nand edge servers. In order to provide immersive user experiences, MAR devices\nmust timely upload camera frames to an edge server for simultaneous\nlocalization and mapping (SLAM)-based device pose tracking. In this paper, to\ncope with user-specific and non-stationary uplink data traffic, we develop a\ndigital twin (DT)-based approach for user-centric communication service\nprovision for MAR. Specifically, to establish DTs for individual MAR devices,\nwe first construct a data model customized for MAR that captures the intricate\nimpact of the SLAM-based frame uploading mechanism on the user-specific data\ntraffic pattern. We then define two DT operation functions that cooperatively\nenable adaptive switching between different data-driven models for capturing\nnon-stationary data traffic. Leveraging the user-oriented data management\nintroduced by DTs, we propose an algorithm for network resource management that\nensures the timeliness of frame uploading and the robustness against inherent\ninaccuracies in data traffic modeling for individual MAR devices. Trace-driven\nsimulation results demonstrate that the user-centric communication service\nprovision achieves a 14.2% increase in meeting the camera frame uploading delay\nrequirement in comparison with the slicing-based communication service\nprovision widely used for 5G.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u6570\u5b57\u5b6a\u751f\uff08DT\uff09\u7684\u7528\u6237\u4e2d\u5fc3\u901a\u4fe1\u670d\u52a1\u65b9\u6848\uff0c\u7528\u4e8e6G\u7f51\u7edc\u4e2d\u652f\u6301\u8fb9\u7f18\u8f85\u52a9\u7684\u79fb\u52a8\u589e\u5f3a\u73b0\u5b9e\uff08MAR\uff09\uff0c\u901a\u8fc7\u5b9a\u5236\u5316\u7684\u6570\u636e\u6a21\u578b\u548c\u81ea\u9002\u5e94\u5207\u6362\u673a\u5236\uff0c\u6709\u6548\u5e94\u5bf9MAR\u8bbe\u5907\u4e0a\u884c\u6570\u636e\u6d41\u91cf\u7684\u7528\u6237\u7279\u5f02\u6027\u548c\u975e\u5e73\u7a33\u6027\uff0c\u4ece\u800c\u63d0\u5347\u5e27\u4e0a\u4f20\u7684\u53ca\u65f6\u6027\u548c\u7cfb\u7edf\u9c81\u68d2\u6027\u3002", "motivation": "\u4e3a\u6ee1\u8db36G\u7f51\u7edc\u4e2d\u79fb\u52a8\u589e\u5f3a\u73b0\u5b9e\uff08MAR\uff09\u5e94\u7528\u5bf9\u6c89\u6d78\u5f0f\u4f53\u9a8c\u7684\u9700\u6c42\uff0c\u9700\u786e\u4fddMAR\u8bbe\u5907\u80fd\u53ca\u65f6\u5c06\u6444\u50cf\u5934\u5e27\u4e0a\u4f20\u81f3\u8fb9\u7f18\u670d\u52a1\u5668\u4ee5\u8fdb\u884cSLAM\u5b9a\u4f4d\u3002\u7136\u800c\uff0c\u7528\u6237\u7279\u5b9a\u4e14\u975e\u5e73\u7a33\u7684\u4e0a\u884c\u6570\u636e\u6d41\u91cf\u7ed9\u901a\u4fe1\u670d\u52a1\u5e26\u6765\u6311\u6218\uff0c\u73b0\u67095G\u5207\u7247\u65b9\u6cd5\u96be\u4ee5\u6709\u6548\u5e94\u5bf9\u3002", "method": "\u63d0\u51fa\u4e00\u79cd\u57fa\u4e8e\u6570\u5b57\u5b6a\u751f\uff08DT\uff09\u7684\u7528\u6237\u4e2d\u5fc3\u901a\u4fe1\u670d\u52a1\u65b9\u6cd5\uff1a1\uff09\u4e3a\u6bcf\u4e2aMAR\u8bbe\u5907\u6784\u5efa\u5b9a\u5236\u5316\u6570\u636e\u6a21\u578b\uff0c\u523b\u753bSLAM\u5e27\u4e0a\u4f20\u673a\u5236\u5bf9\u7528\u6237\u7279\u5b9a\u6d41\u91cf\u6a21\u5f0f\u7684\u5f71\u54cd\uff1b2\uff09\u8bbe\u8ba1\u4e24\u4e2aDT\u64cd\u4f5c\u51fd\u6570\uff0c\u534f\u540c\u5b9e\u73b0\u4e0d\u540c\u6570\u636e\u9a71\u52a8\u6a21\u578b\u95f4\u7684\u81ea\u9002\u5e94\u5207\u6362\uff1b3\uff09\u57fa\u4e8eDT\u7684\u7528\u6237\u5bfc\u5411\u6570\u636e\u7ba1\u7406\uff0c\u8bbe\u8ba1\u7f51\u7edc\u8d44\u6e90\u7ba1\u7406\u7b97\u6cd5\uff0c\u4fdd\u969c\u5e27\u4e0a\u4f20\u65f6\u6548\u6027\u5e76\u5e94\u5bf9\u5efa\u6a21\u4e0d\u51c6\u786e\u6027\u3002", "result": "\u57fa\u4e8e\u771f\u5b9e\u8f68\u8ff9\u7684\u4eff\u771f\u5b9e\u9a8c\u8868\u660e\uff0c\u6240\u63d0\u65b9\u6cd5\u76f8\u6bd45G\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u5207\u7247\u5f0f\u901a\u4fe1\u670d\u52a1\uff0c\u5728\u6ee1\u8db3\u6444\u50cf\u5934\u5e27\u4e0a\u4f20\u5ef6\u8fdf\u8981\u6c42\u65b9\u9762\u63d0\u5347\u4e8614.2%\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u7684\u6570\u5b57\u5b6a\u751f\u9a71\u52a8\u7684\u7528\u6237\u4e2d\u5fc3\u901a\u4fe1\u670d\u52a1\u80fd\u66f4\u6709\u6548\u5730\u652f\u63016G\u8fb9\u7f18\u8f85\u52a9MAR\u5e94\u7528\uff0c\u663e\u8457\u63d0\u5347\u5e27\u4e0a\u4f20\u7684\u65f6\u6548\u6027\u4e0e\u7cfb\u7edf\u9c81\u68d2\u6027\uff0c\u4f18\u4e8e\u4f20\u7edf\u5207\u7247\u65b9\u6cd5\u3002"}}
{"id": "2509.25195", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.25195", "abs": "https://arxiv.org/abs/2509.25195", "authors": ["Hira Naveed", "John Grundy", "Chetan Arora", "Hourieh Khalajzadeh", "Omar Haggag"], "title": "Understanding Practitioners Perspectives on Monitoring Machine Learning Systems", "comment": null, "summary": "Given the inherent non-deterministic nature of machine learning (ML) systems,\ntheir behavior in production environments can lead to unforeseen and\npotentially dangerous outcomes. For a timely detection of unwanted behavior and\nto prevent organizations from financial and reputational damage, monitoring\nthese systems is essential. This paper explores the strategies, challenges, and\nimprovement opportunities for monitoring ML systems from the practitioners\nperspective. We conducted a global survey of 91 ML practitioners to collect\ndiverse insights into current monitoring practices for ML systems. We aim to\ncomplement existing research through our qualitative and quantitative analyses,\nfocusing on prevalent runtime issues, industrial monitoring and mitigation\npractices, key challenges, and desired enhancements in future monitoring tools.\nOur findings reveal that practitioners frequently struggle with runtime issues\nrelated to declining model performance, exceeding latency, and security\nviolations. While most prefer automated monitoring for its increased\nefficiency, many still rely on manual approaches due to the complexity or lack\nof appropriate automation solutions. Practitioners report that the initial\nsetup and configuration of monitoring tools is often complicated and\nchallenging, particularly when integrating with ML systems and setting alert\nthresholds. Moreover, practitioners find that monitoring adds extra workload,\nstrains resources, and causes alert fatigue. The desired improvements from the\npractitioners perspective are: automated generation and deployment of monitors,\nimproved support for performance and fairness monitoring, and recommendations\nfor resolving runtime issues. These insights offer valuable guidance for the\nfuture development of ML monitoring tools that are better aligned with\npractitioners needs.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u4e00\u9879\u6db5\u76d691\u540d\u673a\u5668\u5b66\u4e60\u4ece\u4e1a\u8005\u7684\u5168\u7403\u8c03\u67e5\uff0c\u7814\u7a76\u4e86ML\u7cfb\u7edf\u76d1\u63a7\u7684\u73b0\u72b6\u3001\u6311\u6218\u4e0e\u6539\u8fdb\u65b9\u5411\uff0c\u53d1\u73b0\u4ece\u4e1a\u8005\u5e38\u9762\u4e34\u6a21\u578b\u6027\u80fd\u4e0b\u964d\u3001\u5ef6\u8fdf\u8d85\u6807\u548c\u5b89\u5168\u8fdd\u89c4\u7b49\u95ee\u9898\uff0c\u5e76\u547c\u5401\u66f4\u81ea\u52a8\u5316\u3001\u6613\u7528\u4e14\u652f\u6301\u516c\u5e73\u6027\u76d1\u63a7\u7684\u5de5\u5177\u3002", "motivation": "\u7531\u4e8e\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u5177\u6709\u5185\u5728\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u751a\u81f3\u5371\u9669\u540e\u679c\uff0c\u56e0\u6b64\u4e9f\u9700\u6709\u6548\u76d1\u63a7\u4ee5\u53ca\u65f6\u53d1\u73b0\u5f02\u5e38\u884c\u4e3a\uff0c\u907f\u514d\u7ec4\u7ec7\u906d\u53d7\u8d22\u52a1\u548c\u58f0\u8a89\u635f\u5931\u3002", "method": "\u4f5c\u8005\u901a\u8fc7\u5168\u7403\u95ee\u5377\u8c03\u67e5\u6536\u96c6\u4e8691\u4f4dML\u4ece\u4e1a\u8005\u7684\u5b9a\u6027\u4e0e\u5b9a\u91cf\u6570\u636e\uff0c\u5206\u6790\u5f53\u524dML\u7cfb\u7edf\u76d1\u63a7\u5b9e\u8df5\u4e2d\u5e38\u89c1\u7684\u8fd0\u884c\u65f6\u95ee\u9898\u3001\u5de5\u4e1a\u754c\u505a\u6cd5\u3001\u4e3b\u8981\u6311\u6218\u53ca\u5bf9\u672a\u6765\u76d1\u63a7\u5de5\u5177\u7684\u671f\u671b\u3002", "result": "\u8c03\u67e5\u7ed3\u679c\u663e\u793a\uff0c\u4ece\u4e1a\u8005\u666e\u904d\u906d\u9047\u6a21\u578b\u6027\u80fd\u4e0b\u964d\u3001\u5ef6\u8fdf\u8fc7\u9ad8\u548c\u5b89\u5168\u8fdd\u89c4\u7b49\u8fd0\u884c\u65f6\u95ee\u9898\uff1b\u5c3d\u7ba1\u504f\u597d\u81ea\u52a8\u5316\u76d1\u63a7\uff0c\u4f46\u56e0\u590d\u6742\u6027\u6216\u7f3a\u4e4f\u5408\u9002\u5de5\u5177\u4ecd\u4f9d\u8d56\u624b\u52a8\u65b9\u6cd5\uff1b\u76d1\u63a7\u5de5\u5177\u7684\u521d\u59cb\u914d\u7f6e\u56f0\u96be\u3001\u589e\u52a0\u5de5\u4f5c\u8d1f\u62c5\u3001\u5f15\u53d1\u544a\u8b66\u75b2\u52b3\uff1b\u4ece\u4e1a\u8005\u5e0c\u671b\u5b9e\u73b0\u76d1\u63a7\u7684\u81ea\u52a8\u90e8\u7f72\u3001\u589e\u5f3a\u5bf9\u6027\u80fd\u4e0e\u516c\u5e73\u6027\u7684\u652f\u6301\uff0c\u5e76\u63d0\u4f9b\u95ee\u9898\u4fee\u590d\u5efa\u8bae\u3002", "conclusion": "\u7814\u7a76\u4e3a\u672a\u6765ML\u76d1\u63a7\u5de5\u5177\u7684\u5f00\u53d1\u63d0\u4f9b\u4e86\u5b9e\u8df5\u5bfc\u5411\u7684\u6307\u5bfc\uff0c\u5f3a\u8c03\u9700\u63d0\u5347\u81ea\u52a8\u5316\u7a0b\u5ea6\u3001\u7b80\u5316\u914d\u7f6e\u6d41\u7a0b\u3001\u52a0\u5f3a\u6027\u80fd\u4e0e\u516c\u5e73\u6027\u76d1\u63a7\uff0c\u5e76\u51cf\u5c11\u8fd0\u7ef4\u8d1f\u62c5\uff0c\u4ee5\u66f4\u597d\u6ee1\u8db3\u4ece\u4e1a\u8005\u5b9e\u9645\u9700\u6c42\u3002"}}
{"id": "2509.25196", "categories": ["cs.SE", "cs.AI", "cs.LG", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.25196", "abs": "https://arxiv.org/abs/2509.25196", "authors": ["Hua Zhong", "Shan Jiang", "Sarfraz Khurshid"], "title": "APRIL: API Synthesis with Automatic Prompt Optimization and Reinforcement Learning", "comment": null, "summary": "APIs are central to modern software development, yet composing new APIs from\nlarge libraries is difficult due to the exponential search space; traditional\ncomponent-based synthesis relies on costly exploration and hand-crafted\nspecifications. While large language models (LLMs) can generate implementations\nfrom natural language, hallucinations and limited access to up-to-date\ncontextual information often yield incorrect code. In this paper, we present\nAPRIL, an approach that combines LLM-based synthesis with Automatic Prompt\nOptimization (APO) and Reinforcement Learning from Verifiable Rewards (RLVR):\nAPO iteratively refines prompts for a frozen model, while RLVR fine-tunes the\npolicy toward functional correctness, producing an efficient synthesis\npipeline. Evaluated on 81 real-world APIs from widely used scientific Python\nlibraries and benchmarked against instruction-tuned but unfine-tuned LLMs\nguided by expert prompts, APRIL achieves substantial improvements. These\nresults indicate that integrating APO and RLVR provides a robust, scalable path\nfor component-based API synthesis in large libraries.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faAPRIL\u65b9\u6cd5\uff0c\u7ed3\u5408\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u3001\u81ea\u52a8\u63d0\u793a\u4f18\u5316\uff08APO\uff09\u548c\u57fa\u4e8e\u53ef\u9a8c\u8bc1\u5956\u52b1\u7684\u5f3a\u5316\u5b66\u4e60\uff08RLVR\uff09\uff0c\u663e\u8457\u63d0\u5347\u5728\u5927\u578b\u5e93\u4e2d\u5408\u6210API\u7684\u51c6\u786e\u6027\u548c\u6548\u7387\u3002", "motivation": "\u5728\u5927\u578b\u5e93\u4e2d\u7ec4\u5408\u65b0API\u9762\u4e34\u641c\u7d22\u7a7a\u95f4\u6307\u6570\u7ea7\u589e\u957f\u7684\u95ee\u9898\uff0c\u4f20\u7edf\u57fa\u4e8e\u7ec4\u4ef6\u7684\u5408\u6210\u65b9\u6cd5\u4f9d\u8d56\u6602\u8d35\u7684\u63a2\u7d22\u548c\u624b\u5de5\u7f16\u5199\u89c4\u8303\uff1b\u800c\u5927\u8bed\u8a00\u6a21\u578b\u867d\u80fd\u6839\u636e\u81ea\u7136\u8bed\u8a00\u751f\u6210\u4ee3\u7801\uff0c\u5374\u5e38\u56e0\u5e7b\u89c9\u548c\u7f3a\u4e4f\u6700\u65b0\u4e0a\u4e0b\u6587\u4fe1\u606f\u800c\u4ea7\u751f\u9519\u8bef\u3002", "method": "APRIL\u7ed3\u5408LLM\u3001\u81ea\u52a8\u63d0\u793a\u4f18\u5316\uff08APO\uff09\u548c\u57fa\u4e8e\u53ef\u9a8c\u8bc1\u5956\u52b1\u7684\u5f3a\u5316\u5b66\u4e60\uff08RLVR\uff09\uff1aAPO\u5bf9\u51bb\u7ed3\u6a21\u578b\u7684\u63d0\u793a\u8fdb\u884c\u8fed\u4ee3\u4f18\u5316\uff0cRLVR\u5219\u5fae\u8c03\u7b56\u7565\u4ee5\u63d0\u5347\u529f\u80fd\u6b63\u786e\u6027\uff0c\u5f62\u6210\u9ad8\u6548\u5408\u6210\u6d41\u7a0b\u3002", "result": "\u572881\u4e2a\u771f\u5b9e\u79d1\u5b66Python\u5e93API\u4e0a\u7684\u8bc4\u4f30\u8868\u660e\uff0c\u76f8\u6bd4\u7531\u4e13\u5bb6\u63d0\u793a\u5f15\u5bfc\u4f46\u672a\u7ecf\u5fae\u8c03\u7684\u6307\u4ee4\u8c03\u4f18LLM\uff0cAPRIL\u53d6\u5f97\u4e86\u663e\u8457\u6027\u80fd\u63d0\u5347\u3002", "conclusion": "\u6574\u5408APO\u4e0eRLVR\u4e3a\u5927\u578b\u5e93\u4e2d\u7684\u7ec4\u4ef6\u5316API\u5408\u6210\u63d0\u4f9b\u4e86\u4e00\u6761\u7a33\u5065\u4e14\u53ef\u6269\u5c55\u7684\u8def\u5f84\u3002"}}
{"id": "2509.26182", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.26182", "abs": "https://arxiv.org/abs/2509.26182", "authors": ["Chris Tong", "Youhe Jiang", "Gufeng Chen", "Tianyi Zhao", "Sibian Lu", "Wenjie Qu", "Eric Yang", "Lynn Ai", "Binhang Yuan"], "title": "Parallax: Efficient LLM Inference Service over Decentralized Environment", "comment": null, "summary": "Deploying a large language model (LLM) inference service remains costly\nbecause centralized serving depends on specialized GPU clusters and\nhigh-bandwidth interconnects in datacenters. An appealing alternative is to\nleverage collaborative decentralized GPU pools. However, heterogeneity in GPU\nand limited interconnected network bandwidth, along with potentially dynamic\navailability, make efficient scheduling the central challenge in this scenario.\nIn this paper, we present Parallax, a decentralized LLM serving system that\nturns a pool of heterogeneous GPUs into an efficient inference platform via a\ntwo-phase scheduler. Parallax decomposes planning into (i) model allocation,\nwhich places layers of each replica across diverse GPUs to jointly optimize\nlatency and throughput under memory and link-bandwidth constraints, and (ii)\nrequest-time GPU pipeline selection, which stitches layers from different\nreplicas into end-to-end execution chains that balance load and adapt to\ncurrent conditions. We implement Parallax and evaluate it on open-source LLMs\ndeployed over real volunteer nodes. Parallax consistently reduces latency and\nincreases throughput relative to decentralized baselines, demonstrating that\nprincipled scheduling can make volunteer compute a practical, affordable\nsubstrate for LLM inference.\n  Github Repo at: https://github.com/GradientHQ/parallax.", "AI": {"tldr": "Parallax \u662f\u4e00\u4e2a\u53bb\u4e2d\u5fc3\u5316\u7684 LLM \u63a8\u7406\u7cfb\u7edf\uff0c\u901a\u8fc7\u4e24\u9636\u6bb5\u8c03\u5ea6\u5668\u5728\u5f02\u6784 GPU \u6c60\u4e0a\u9ad8\u6548\u6267\u884c\u63a8\u7406\uff0c\u663e\u8457\u964d\u4f4e\u5ef6\u8fdf\u5e76\u63d0\u5347\u541e\u5410\u91cf\u3002", "motivation": "\u96c6\u4e2d\u5f0f LLM \u63a8\u7406\u4f9d\u8d56\u6602\u8d35\u7684\u4e13\u7528 GPU \u96c6\u7fa4\u548c\u9ad8\u5e26\u5bbd\u4e92\u8fde\uff0c\u800c\u5229\u7528\u53bb\u4e2d\u5fc3\u5316\u7684\u534f\u4f5c GPU \u6c60\u867d\u5177\u5438\u5f15\u529b\uff0c\u5374\u9762\u4e34 GPU \u5f02\u6784\u6027\u3001\u7f51\u7edc\u5e26\u5bbd\u53d7\u9650\u548c\u8282\u70b9\u52a8\u6001\u53ef\u7528\u6027\u7b49\u8c03\u5ea6\u6311\u6218\u3002", "method": "Parallax \u91c7\u7528\u4e24\u9636\u6bb5\u8c03\u5ea6\u673a\u5236\uff1a(i) \u6a21\u578b\u5206\u914d\u9636\u6bb5\uff0c\u5c06\u6a21\u578b\u5404\u5c42\u5206\u914d\u5230\u4e0d\u540c GPU \u4e0a\uff0c\u5728\u5185\u5b58\u548c\u5e26\u5bbd\u7ea6\u675f\u4e0b\u8054\u5408\u4f18\u5316\u5ef6\u8fdf\u4e0e\u541e\u5410\uff1b(ii) \u8bf7\u6c42\u65f6 GPU \u6d41\u6c34\u7ebf\u9009\u62e9\u9636\u6bb5\uff0c\u52a8\u6001\u7ec4\u5408\u4e0d\u540c\u526f\u672c\u7684\u5c42\u5f62\u6210\u7aef\u5230\u7aef\u6267\u884c\u94fe\uff0c\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u5e76\u9002\u5e94\u5b9e\u65f6\u6761\u4ef6\u3002", "result": "\u5728\u771f\u5b9e\u5fd7\u613f\u8005\u8282\u70b9\u4e0a\u5bf9\u5f00\u6e90 LLM \u7684\u5b9e\u9a8c\u8868\u660e\uff0cParallax \u76f8\u6bd4\u53bb\u4e2d\u5fc3\u5316\u57fa\u7ebf\u65b9\u6cd5\u663e\u8457\u964d\u4f4e\u4e86\u5ef6\u8fdf\u5e76\u63d0\u9ad8\u4e86\u541e\u5410\u91cf\u3002", "conclusion": "\u901a\u8fc7\u5408\u7406\u7684\u8c03\u5ea6\u7b56\u7565\uff0c\u5fd7\u613f\u8005\u8ba1\u7b97\u53ef\u4ee5\u6210\u4e3a\u4e00\u79cd\u5b9e\u7528\u4e14\u7ecf\u6d4e\u7684 LLM \u63a8\u7406\u57fa\u7840\u8bbe\u65bd\u3002"}}
{"id": "2509.26013", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2509.26013", "abs": "https://arxiv.org/abs/2509.26013", "authors": ["Sumit Kumar", "Juan Carlos Estrada-Jimenez", "Ion Turcanu"], "title": "User-Centric Comparison of 5G NTN and DVB-S2/RCS2 Using OpenAirInterface and OpenSAND", "comment": null, "summary": "The integration of satellite networks into next-generation mobile\ncommunication systems has gained considerable momentum with the advent of 5G\nNon-Terrestrial Networks (5G-NTN). Since established technologies like\nDVB-S2/RCS2 are already widely used for satellite broadband, a detailed\ncomparison with emerging 5G NTN solutions is necessary to understand their\nrelative merits and guide deployment decisions. This paper presents a\nuser-centric, end-to-end evaluation of these technologies under realistic\ntraffic conditions, showing how differences in architecture and protocols\nimpact application-layer performance. Utilizing the 6G Sandbox platform, we\nemploy OpenAirInterface to emulate 5G NTN and OpenSAND for DVB-S2/RCS2,\nreplicating transparent payload GEO satellite scenarios under uniform downlink\nconditions. A range of real-world applications, such as web browsing, file\ndownloads, and video streaming, are tested across both systems and\nsystematically analyzed. While the emulation lacks real-time capability, it\nreveals key strengths and limitations of each approach, helping identify\nsuitable deployment scenarios for 5G NTN and DVB-S2/RCS2.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc76G Sandbox\u5e73\u53f0\u5bf95G NTN\u548cDVB-S2/RCS2\u5728GEO\u536b\u661f\u573a\u666f\u4e0b\u8fdb\u884c\u7aef\u5230\u7aef\u7528\u6237\u4e2d\u5fc3\u6027\u80fd\u8bc4\u4f30\uff0c\u6bd4\u8f83\u5176\u5728\u771f\u5b9e\u5e94\u7528\uff08\u5982\u7f51\u9875\u6d4f\u89c8\u3001\u6587\u4ef6\u4e0b\u8f7d\u3001\u89c6\u9891\u6d41\uff09\u4e2d\u7684\u8868\u73b0\uff0c\u63ed\u793a\u5404\u81ea\u4f18\u52a3\u53ca\u9002\u7528\u90e8\u7f72\u573a\u666f\u3002", "motivation": "\u968f\u77405G\u975e\u5730\u9762\u7f51\u7edc\uff085G-NTN\uff09\u7684\u53d1\u5c55\uff0c\u5c06\u536b\u661f\u7f51\u7edc\u6574\u5408\u8fdb\u4e0b\u4e00\u4ee3\u79fb\u52a8\u901a\u4fe1\u7cfb\u7edf\u6210\u4e3a\u8d8b\u52bf\uff1b\u9274\u4e8eDVB-S2/RCS2\u5df2\u5728\u536b\u661f\u5bbd\u5e26\u4e2d\u5e7f\u6cdb\u5e94\u7528\uff0c\u6709\u5fc5\u8981\u5bf9\u8fd9\u4e24\u79cd\u6280\u672f\u8fdb\u884c\u8be6\u7ec6\u6bd4\u8f83\uff0c\u4ee5\u6307\u5bfc\u5b9e\u9645\u90e8\u7f72\u3002", "method": "\u5229\u75286G Sandbox\u5e73\u53f0\uff0c\u91c7\u7528OpenAirInterface\u6a21\u62df5G NTN\uff0cOpenSAND\u6a21\u62dfDVB-S2/RCS2\uff0c\u5728\u7edf\u4e00\u7684\u900f\u660e\u8f7d\u8377GEO\u536b\u661f\u4e0b\u884c\u94fe\u8def\u6761\u4ef6\u4e0b\uff0c\u5bf9\u591a\u79cd\u771f\u5b9e\u5e94\u7528\u573a\u666f\u8fdb\u884c\u7aef\u5230\u7aef\u7528\u6237\u4e2d\u5fc3\u6027\u80fd\u6d4b\u8bd5\u4e0e\u5206\u6790\u3002", "result": "\u4eff\u771f\u7ed3\u679c\u63ed\u793a\u4e865G NTN\u4e0eDVB-S2/RCS2\u5728\u67b6\u6784\u548c\u534f\u8bae\u5dee\u5f02\u4e0b\u5bf9\u5e94\u7528\u5c42\u6027\u80fd\u7684\u4e0d\u540c\u5f71\u54cd\uff0c\u660e\u786e\u4e86\u5404\u81ea\u7684\u5173\u952e\u4f18\u52bf\u4e0e\u5c40\u9650\u6027\u3002", "conclusion": "5G NTN\u548cDVB-S2/RCS2\u5404\u6709\u9002\u7528\u573a\u666f\uff0c\u5e94\u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u90e8\u7f72\u65b9\u6848\uff1b\u5c3d\u7ba1\u4eff\u771f\u7f3a\u4e4f\u5b9e\u65f6\u6027\uff0c\u4f46\u4e3a\u672a\u6765\u536b\u661f\u901a\u4fe1\u7cfb\u7edf\u9009\u578b\u63d0\u4f9b\u4e86\u91cd\u8981\u53c2\u8003\u3002"}}
{"id": "2509.25197", "categories": ["cs.SE", "cs.AI", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.25197", "abs": "https://arxiv.org/abs/2509.25197", "authors": ["Si Cheng Zhong", "Xujie Si"], "title": "Towards Repository-Level Program Verification with Large Language Models", "comment": "Accepted to LMPL 2025", "summary": "Recent advancements in large language models (LLMs) suggest great promises in\ncode and proof generations. However, scaling automated formal verification to\nreal-world projects requires resolving cross-module dependencies and global\ncontexts, which are crucial challenges overlooked by existing LLM-based methods\nwith a special focus on targeting isolated, function-level verification tasks.\nTo systematically explore and address the significant challenges of verifying\nentire software repositories, we introduce RVBench, the first verification\nbenchmark explicitly designed for repository-level evaluation, constructed from\nfour diverse and complex open-source Verus projects.\n  We further introduce RagVerus, an extensible framework that synergizes\nretrieval-augmented generation with context-aware prompting to automate proof\nsynthesis for multi-module repositories. RagVerus triples proof pass rates on\nexisting benchmarks under constrained model inference budgets, and achieves a\n27% relative improvement on the more challenging RVBench benchmark,\ndemonstrating a scalable and sample-efficient verification solution.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u9996\u4e2a\u9762\u5411\u4ed3\u5e93\u7ea7\u9a8c\u8bc1\u7684\u57fa\u51c6 RVBench \u548c\u4e00\u4e2a\u7ed3\u5408\u68c0\u7d22\u589e\u5f3a\u4e0e\u4e0a\u4e0b\u6587\u611f\u77e5\u63d0\u793a\u7684\u53ef\u6269\u5c55\u6846\u67b6 RagVerus\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5728\u591a\u6a21\u5757\u4ee3\u7801\u5e93\u4e2d\u81ea\u52a8\u5316\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684\u80fd\u529b\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u5f62\u5f0f\u5316\u9a8c\u8bc1\u65b9\u6cd5\u4e3b\u8981\u805a\u7126\u4e8e\u5b64\u7acb\u7684\u51fd\u6570\u7ea7\u4efb\u52a1\uff0c\u5ffd\u7565\u4e86\u771f\u5b9e\u9879\u76ee\u4e2d\u8de8\u6a21\u5757\u4f9d\u8d56\u548c\u5168\u5c40\u4e0a\u4e0b\u6587\u7b49\u5173\u952e\u6311\u6218\uff0c\u96be\u4ee5\u6269\u5c55\u5230\u6574\u4e2a\u8f6f\u4ef6\u4ed3\u5e93\u3002", "method": "\u4f5c\u8005\u6784\u5efa\u4e86 RVBench \u57fa\u51c6\uff0c\u5e76\u63d0\u51fa\u4e86 RagVerus \u6846\u67b6\uff0c\u8be5\u6846\u67b6\u7ed3\u5408\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08RAG\uff09\u4e0e\u4e0a\u4e0b\u6587\u611f\u77e5\u63d0\u793a\uff0c\u7528\u4e8e\u81ea\u52a8\u5316\u5408\u6210\u591a\u6a21\u5757\u4ed3\u5e93\u7684\u8bc1\u660e\u3002", "result": "RagVerus \u5728\u73b0\u6709\u57fa\u51c6\u4e0a\u5c06\u8bc1\u660e\u901a\u8fc7\u7387\u63d0\u9ad8\u4e86\u4e09\u500d\uff0c\u5728\u66f4\u5177\u6311\u6218\u6027\u7684 RVBench \u4e0a\u5b9e\u73b0\u4e86 27% \u7684\u76f8\u5bf9\u63d0\u5347\u3002", "conclusion": "RagVerus \u5c55\u793a\u4e86\u4e00\u79cd\u53ef\u6269\u5c55\u4e14\u6837\u672c\u9ad8\u6548\u7684\u4ed3\u5e93\u7ea7\u5f62\u5f0f\u5316\u9a8c\u8bc1\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u6548\u5e94\u5bf9\u4e86\u8de8\u6a21\u5757\u4f9d\u8d56\u548c\u5168\u5c40\u4e0a\u4e0b\u6587\u5e26\u6765\u7684\u6311\u6218\u3002"}}
{"id": "2509.26193", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.26193", "abs": "https://arxiv.org/abs/2509.26193", "authors": ["Fabian Czappa", "Marvin Kaster", "Felix Wolf"], "title": "I Like To Move It -- Computation Instead of Data in the Brain", "comment": null, "summary": "The detailed functioning of the human brain is still poorly understood. Brain\nsimulations are a well-established way to complement experimental research, but\nmust contend with the computational demands of the approximately $10^{11}$\nneurons and the $10^{14}$ synapses connecting them, the network of the latter\nreferred to as the connectome. Studies suggest that changes in the connectome\n(i.e., the formation and deletion of synapses, also known as structural\nplasticity) are essential for critical tasks such as memory formation and\nlearning. The connectivity update can be efficiently computed using a\nBarnes-Hut-inspired approximation that lowers the computational complexity from\n$O(n^2)$ to $O(n log n)$, where n is the number of neurons. However, updating\nsynapses, which relies heavily on RMA, and the spike exchange between neurons,\nwhich requires all-to-all communication at every time step, still hinder\nscalability. We present a new algorithm that significantly reduces the\ncommunication overhead by moving computation instead of data. This shrinks the\ntime it takes to update connectivity by a factor of six and the time it takes\nto exchange spikes by more than two orders of magnitude.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7b97\u6cd5\uff0c\u901a\u8fc7\u79fb\u52a8\u8ba1\u7b97\u800c\u975e\u6570\u636e\uff0c\u663e\u8457\u51cf\u5c11\u4e86\u8111\u6a21\u62df\u4e2d\u7a81\u89e6\u66f4\u65b0\u548c\u795e\u7ecf\u5143\u95f4\u8109\u51b2\u4ea4\u6362\u7684\u901a\u4fe1\u5f00\u9500\u3002", "motivation": "\u4eba\u8111\u529f\u80fd\u5c1a\u672a\u5b8c\u5168\u7406\u89e3\uff0c\u8111\u6a21\u62df\u867d\u662f\u5b9e\u9a8c\u7814\u7a76\u7684\u91cd\u8981\u8865\u5145\uff0c\u4f46\u9762\u4e34\u795e\u7ecf\u5143\u548c\u7a81\u89e6\u6570\u91cf\u5e9e\u5927\u5e26\u6765\u7684\u8ba1\u7b97\u6311\u6218\uff0c\u5c24\u5176\u662f\u7ed3\u6784\u53ef\u5851\u6027\uff08\u7a81\u89e6\u5f62\u6210\u4e0e\u5220\u9664\uff09\u5bf9\u8bb0\u5fc6\u548c\u5b66\u4e60\u81f3\u5173\u91cd\u8981\uff0c\u800c\u73b0\u6709\u65b9\u6cd5\u5728\u901a\u4fe1\u5f00\u9500\u4e0a\u9650\u5236\u4e86\u53ef\u6269\u5c55\u6027\u3002", "method": "\u91c7\u7528\u4e00\u79cd\u53d7Barnes-Hut\u542f\u53d1\u7684\u8fd1\u4f3c\u65b9\u6cd5\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u5e76\u63d0\u51fa\u65b0\u7b97\u6cd5\u901a\u8fc7\u79fb\u52a8\u8ba1\u7b97\u800c\u975e\u6570\u636e\u6765\u51cf\u5c11\u901a\u4fe1\u5f00\u9500\u3002", "result": "\u65b0\u7b97\u6cd5\u5c06\u8fde\u63a5\u6027\u66f4\u65b0\u65f6\u95f4\u7f29\u77ed\u4e3a\u539f\u6765\u7684\u516d\u5206\u4e4b\u4e00\uff0c\u8109\u51b2\u4ea4\u6362\u65f6\u95f4\u51cf\u5c11\u4e24\u4e2a\u6570\u91cf\u7ea7\u4ee5\u4e0a\u3002", "conclusion": "\u8be5\u7b97\u6cd5\u663e\u8457\u63d0\u5347\u4e86\u5927\u89c4\u6a21\u8111\u6a21\u62df\u7684\u53ef\u6269\u5c55\u6027\uff0c\u4e3a\u7814\u7a76\u7ed3\u6784\u53ef\u5851\u6027\u548c\u8111\u529f\u80fd\u63d0\u4f9b\u4e86\u66f4\u9ad8\u6548\u7684\u8ba1\u7b97\u624b\u6bb5\u3002"}}
{"id": "2509.26075", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2509.26075", "abs": "https://arxiv.org/abs/2509.26075", "authors": ["Erol Ko\u00e7o\u011flu", "Mehmet Ozdem", "Tu\u011f\u00e7e Bilen"], "title": "Knowledge Defined Networking for 6G: A Reinforcement Learning Example for Resource Management", "comment": null, "summary": "6G networks are expected to revolutionize connectivity, offering significant\nimprovements in speed, capacity, and smart automation. However, existing\nnetwork designs will struggle to handle the demands of 6G, which include much\nfaster speeds, a huge increase in connected devices, lower energy consumption,\nextremely quick response times, and better mobile broadband. To solve this\nproblem, incorporating the artificial intelligence (AI) technologies has been\nproposed. This idea led to the concept of Knowledge-Defined Networking (KDN).\nKDN promises many improvements, such as resource management, routing,\nscheduling, clustering, and mobility prediction. The main goal of this study is\nto optimize resource management using Reinforcement Learning.", "AI": {"tldr": "\u672c\u6587\u63a2\u8ba8\u4e86\u5c06\u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u4e8e\u77e5\u8bc6\u5b9a\u4e49\u7f51\u7edc\uff08KDN\uff09\u4ee5\u4f18\u53166G\u7f51\u7edc\u4e2d\u7684\u8d44\u6e90\u7ba1\u7406\u3002", "motivation": "6G\u7f51\u7edc\u5bf9\u901f\u5ea6\u3001\u8fde\u63a5\u8bbe\u5907\u6570\u91cf\u3001\u80fd\u6548\u3001\u54cd\u5e94\u65f6\u95f4\u548c\u79fb\u52a8\u5bbd\u5e26\u63d0\u51fa\u4e86\u66f4\u9ad8\u8981\u6c42\uff0c\u4f20\u7edf\u7f51\u7edc\u67b6\u6784\u96be\u4ee5\u6ee1\u8db3\uff0c\u56e0\u6b64\u9700\u8981\u5f15\u5165AI\u6280\u672f\u5982KDN\u6765\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\u3002", "method": "\u91c7\u7528\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5\u5728\u77e5\u8bc6\u5b9a\u4e49\u7f51\u7edc\uff08KDN\uff09\u6846\u67b6\u4e0b\u8fdb\u884c\u8d44\u6e90\u7ba1\u7406\u4f18\u5316\u3002", "result": "\u8bba\u6587\u5c1a\u672a\u63d0\u4f9b\u5177\u4f53\u5b9e\u9a8c\u7ed3\u679c\uff0c\u4f46\u6307\u51faKDN\u5728\u8d44\u6e90\u7ba1\u7406\u3001\u8def\u7531\u3001\u8c03\u5ea6\u3001\u805a\u7c7b\u548c\u79fb\u52a8\u6027\u9884\u6d4b\u7b49\u65b9\u9762\u5177\u6709\u6f5c\u529b\u3002", "conclusion": "\u5f3a\u5316\u5b66\u4e60\u5728KDN\u4e2d\u53ef\u7528\u4e8e\u6709\u6548\u4f18\u53166G\u7f51\u7edc\u7684\u8d44\u6e90\u7ba1\u7406\uff0c\u4ece\u800c\u6ee1\u8db3\u5176\u4e25\u82db\u6027\u80fd\u9700\u6c42\u3002"}}
{"id": "2509.25199", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25199", "abs": "https://arxiv.org/abs/2509.25199", "authors": ["Mushahid Khan", "Prashant J. Nair", "Olivia Di Matteo"], "title": "CircInspect: Integrating Visual Circuit Analysis, Abstraction, and Real-Time Development in Quantum Debugging", "comment": null, "summary": "Software bugs typically result from errors in specifications or code\ntranslation. While classical software engineering has evolved with various\ntools and methodologies to tackle such bugs, the emergence of quantum computing\npresents unique challenges. Quantum software development introduces\ncomplexities due to the probabilistic nature of quantum computing, distinct\nalgorithmic primitives, and potential hardware noise. In this paper, we\nintroduce CircInspect, an interactive tool tailored for debugging quantum\nprograms in Python and PennyLane. By leveraging breakpoints and real-time\nsoftware development features, \\toolname~empowers users to analyze isolated\nquantum circuit components, monitor program output, visualize structural\nchanges, and abstract information to enhance comprehension.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86 CircInspect\uff0c\u4e00\u4e2a\u7528\u4e8e\u8c03\u8bd5 Python \u548c PennyLane \u4e2d\u91cf\u5b50\u7a0b\u5e8f\u7684\u4ea4\u4e92\u5f0f\u5de5\u5177\uff0c\u652f\u6301\u65ad\u70b9\u8bbe\u7f6e\u3001\u5b9e\u65f6\u5206\u6790\u3001\u7535\u8def\u53ef\u89c6\u5316\u7b49\u529f\u80fd\uff0c\u4ee5\u5e94\u5bf9\u91cf\u5b50\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u72ec\u7279\u6311\u6218\u3002", "motivation": "\u91cf\u5b50\u8ba1\u7b97\u7684\u5174\u8d77\u5e26\u6765\u4e86\u4f20\u7edf\u8f6f\u4ef6\u5de5\u7a0b\u65b9\u6cd5\u96be\u4ee5\u5e94\u5bf9\u7684\u65b0\u6311\u6218\uff0c\u5982\u91cf\u5b50\u8ba1\u7b97\u7684\u6982\u7387\u6027\u3001\u72ec\u7279\u7684\u7b97\u6cd5\u539f\u8bed\u548c\u786c\u4ef6\u566a\u58f0\uff0c\u56e0\u6b64\u9700\u8981\u4e13\u95e8\u7684\u8c03\u8bd5\u5de5\u5177\u6765\u652f\u6301\u91cf\u5b50\u7a0b\u5e8f\u5f00\u53d1\u3002", "method": "\u5f00\u53d1\u4e86\u540d\u4e3a CircInspect \u7684\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5de5\u5177\uff0c\u96c6\u6210\u65ad\u70b9\u3001\u5b9e\u65f6\u76d1\u63a7\u3001\u7535\u8def\u7ed3\u6784\u53ef\u89c6\u5316\u548c\u4fe1\u606f\u62bd\u8c61\u7b49\u529f\u80fd\uff0c\u7528\u4e8e\u5206\u6790\u548c\u8c03\u8bd5\u91cf\u5b50\u7a0b\u5e8f\u3002", "result": "CircInspect \u80fd\u591f\u6709\u6548\u5e2e\u52a9\u7528\u6237\u5206\u6790\u91cf\u5b50\u7535\u8def\u7ec4\u4ef6\u3001\u76d1\u63a7\u8f93\u51fa\u3001\u53ef\u89c6\u5316\u7ed3\u6784\u53d8\u5316\u5e76\u63d0\u5347\u5bf9\u91cf\u5b50\u7a0b\u5e8f\u7684\u7406\u89e3\u3002", "conclusion": "CircInspect \u4e3a\u91cf\u5b50\u8f6f\u4ef6\u8c03\u8bd5\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9e\u7528\u4e14\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u52a9\u4e8e\u5e94\u5bf9\u91cf\u5b50\u7f16\u7a0b\u4e2d\u7684\u590d\u6742\u6027\u548c\u72ec\u7279\u6027\u3002"}}
{"id": "2509.26086", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2509.26086", "abs": "https://arxiv.org/abs/2509.26086", "authors": ["Yunli Li", "Xiaoming Shi", "Xiaodan Shao", "Jie Xu", "Rui Zhang"], "title": "Flexible-Sector 6DMA Base Station: Modeling and Design", "comment": null, "summary": "Six-dimensional movable antenna (6DMA) has emerged as a promising new\ntechnology for future wireless networks, which can adaptively adjust the\nthree-dimensional (3D) positions and 3D rotations of antennas/antenna arrays\nfor performance enhancement. This paper proposes a novel cost-effective\n6DMA-based base station (BS) architecture, termed the \\textit{flexible-sector}\nBS, which allows the deployed antennas to flexibly rotate and move along a\ncircular track, thus enabling common sector rotation and flexible antenna\nallocation across sectors to adapt to the spatial user distribution\nefficiently. In particular, we focus on the uplink transmission in a\nsingle-cell system, where the flexible-sector BS receives independent messages\nfrom multiple users. We introduce an angular-domain user distribution model,\nwhich captures the users' spatial clustering or hot-spot distribution\neffectively. Assuming the zero-forcing (ZF) based receiver applied at the BS to\ndecode multiuser signals, we derive the average sum rate achievable for the\nusers as a function of the common rotation of sectors and the antenna\nallocation over them. Moreover, we develop a two-step algorithm to jointly\noptimize the common sector rotation and antenna allocation to maximize the\naverage sum rate of all users. It is shown that the optimal antenna number in\neach sector linearly increases with the number of users in it. It is also\nrevealed that under the most favorable user distribution, the achievable sum\nrate gain increases in the order of $\\log_{2}(B)$ in the regime of\nasymptotically large number of antennas, where $B$ denotes the number of\nsectors. Numerically results also show that as $B$ increases, the proposed\nflexible-sector BS achieves higher sum rate, and it outperforms other benchmark\nschemes, such as the traditional fixed-sector BS as well as the BS with sector\nrotation or antenna allocation optimization only.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u578b\u4f4e\u6210\u672c\u7684\u516d\u7ef4\u53ef\u79fb\u52a8\u5929\u7ebf\uff086DMA\uff09\u57fa\u7ad9\u67b6\u6784\u2014\u2014\u201c\u7075\u6d3b\u6247\u533a\u201d\u57fa\u7ad9\uff0c\u901a\u8fc7\u8054\u5408\u4f18\u5316\u6247\u533a\u65cb\u8f6c\u4e0e\u5929\u7ebf\u5206\u914d\uff0c\u663e\u8457\u63d0\u5347\u4e0a\u884c\u94fe\u8def\u5e73\u5747\u548c\u901f\u7387\uff0c\u5c24\u5176\u5728\u7528\u6237\u7a7a\u95f4\u5206\u5e03\u4e0d\u5747\u65f6\u8868\u73b0\u66f4\u4f18\u3002", "motivation": "\u4f20\u7edf\u57fa\u7ad9\u6247\u533a\u56fa\u5b9a\uff0c\u96be\u4ee5\u9002\u5e94\u7528\u6237\u5728\u7a7a\u95f4\u4e0a\u7684\u52a8\u6001\u5206\u5e03\uff08\u5982\u70ed\u70b9\u533a\u57df\uff09\uff0c\u5bfc\u81f4\u9891\u8c31\u6548\u7387\u53d7\u9650\u3002\u4e3a\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\uff0c\u9700\u4e00\u79cd\u80fd\u7075\u6d3b\u8c03\u6574\u5929\u7ebf\u4f4d\u7f6e\u4e0e\u65b9\u5411\u7684\u67b6\u6784\u3002", "method": "\u63d0\u51fa\u201c\u7075\u6d3b\u6247\u533a\u201dBS\u67b6\u6784\uff0c\u5141\u8bb8\u5929\u7ebf\u6cbf\u5706\u5f62\u8f68\u9053\u79fb\u52a8\u5e76\u65cb\u8f6c\uff1b\u5efa\u7acb\u89d2\u5ea6\u57df\u7528\u6237\u5206\u5e03\u6a21\u578b\uff1b\u5728\u96f6\u8feb\uff08ZF\uff09\u63a5\u6536\u673a\u4e0b\u63a8\u5bfc\u5e73\u5747\u548c\u901f\u7387\u8868\u8fbe\u5f0f\uff1b\u8bbe\u8ba1\u4e24\u6b65\u7b97\u6cd5\u8054\u5408\u4f18\u5316\u6247\u533a\u516c\u5171\u65cb\u8f6c\u89d2\u5ea6\u4e0e\u5404\u6247\u533a\u5929\u7ebf\u5206\u914d\u3002", "result": "\u7406\u8bba\u5206\u6790\u8868\u660e\uff1a\u6700\u4f18\u5929\u7ebf\u6570\u4e0e\u6247\u533a\u5185\u7528\u6237\u6570\u5448\u7ebf\u6027\u5173\u7cfb\uff1b\u5728\u5929\u7ebf\u6570\u8d8b\u4e8e\u65e0\u7a77\u65f6\uff0c\u548c\u901f\u7387\u589e\u76ca\u4ee5$\\log_2(B)$\u589e\u957f\uff08$B$\u4e3a\u6247\u533a\u6570\uff09\uff1b\u4eff\u771f\u9a8c\u8bc1\u6240\u63d0\u65b9\u6848\u4f18\u4e8e\u4f20\u7edf\u56fa\u5b9a\u6247\u533aBS\u53ca\u4ec5\u4f18\u5316\u65cb\u8f6c\u6216\u5929\u7ebf\u5206\u914d\u7684\u65b9\u6848\uff0c\u4e14\u6247\u533a\u6570\u8d8a\u591a\u589e\u76ca\u8d8a\u663e\u8457\u3002", "conclusion": "\u7075\u6d3b\u6247\u533a6DMA\u57fa\u7ad9\u80fd\u6709\u6548\u9002\u914d\u7528\u6237\u7a7a\u95f4\u5206\u5e03\uff0c\u901a\u8fc7\u8054\u5408\u4f18\u5316\u6247\u533a\u65cb\u8f6c\u4e0e\u5929\u7ebf\u5206\u914d\u663e\u8457\u63d0\u5347\u7cfb\u7edf\u548c\u901f\u7387\uff0c\u4e3a\u672a\u6765\u65e0\u7ebf\u7f51\u7edc\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u4e14\u6210\u672c\u53ef\u63a7\u7684\u65b0\u67b6\u6784\u3002"}}
{"id": "2509.25203", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25203", "abs": "https://arxiv.org/abs/2509.25203", "authors": ["Zekai Zhang", "Mingwei Liu", "Zhenxi Chen", "Linxi Liang", "Yuxuan Chen", "Guangsheng Ou", "Yanlin Wang", "Dan Li", "Xin Peng", "Zibin Zheng"], "title": "Generating High-Quality Datasets for Code Editing via Open-Source Language Models", "comment": "23 pages, 8 figures", "summary": "Code editing plays a vital role in software engineering, requiring developers\nto adjust existing code according to natural language instructions while\nkeeping functionality intact and avoiding unnecessary modifications. However,\ncommit-based datasets commonly used for this task are often noisy, lack\ndiversity, and fail to reflect the style of real-world edit instructions. To\naddress this, we introduce CanItEdit, an open-source pipeline that leverages\nmultiple LLMs to synthesize realistic code-edit triplets. The pipeline produces\nboth concise \"lazy\" instructions and more detailed \"descriptive\" ones, and\napplies filtering based on diffs and topics to guarantee data quality and\nvariety. Using this process, we construct OCEDataFT, a curated dataset of 20K\nsamples. Fine-tuning three advanced base models on OCEDataFT leads to\nsignificant performance boosts on the CanItEdit benchmark, with relative pass@1\nimprovements ranging from 4.50% to 20.79%. Notably, the resulting models\nachieve performance close to closed-source systems, narrowing the gap to GPT-4\nto just 3.54%, without relying on proprietary resources or manual annotation.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faCanItEdit\u5f00\u6e90\u6d41\u6c34\u7ebf\uff0c\u5229\u7528\u591a\u4e2a\u5927\u8bed\u8a00\u6a21\u578b\u5408\u6210\u9ad8\u8d28\u91cf\u3001\u591a\u6837\u5316\u7684\u4ee3\u7801\u7f16\u8f91\u4e09\u5143\u7ec4\uff0c\u6784\u5efa\u4e86\u5305\u542b2\u4e07\u6837\u672c\u7684\u6570\u636e\u96c6OCEDataFT\uff0c\u5e76\u5728\u8be5\u6570\u636e\u96c6\u4e0a\u5fae\u8c03\u6a21\u578b\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4ee3\u7801\u7f16\u8f91\u6027\u80fd\uff0c\u63a5\u8fd1\u95ed\u6e90\u7cfb\u7edf\u5982GPT-4\u7684\u8868\u73b0\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u63d0\u4ea4\u7684\u4ee3\u7801\u7f16\u8f91\u6570\u636e\u96c6\u5b58\u5728\u566a\u58f0\u5927\u3001\u591a\u6837\u6027\u4e0d\u8db3\u3001\u65e0\u6cd5\u53cd\u6620\u771f\u5b9e\u7f16\u8f91\u6307\u4ee4\u98ce\u683c\u7b49\u95ee\u9898\uff0c\u9650\u5236\u4e86\u6a21\u578b\u6027\u80fd\u3002", "method": "\u63d0\u51faCanItEdit\u6d41\u6c34\u7ebf\uff0c\u5229\u7528\u591a\u4e2aLLM\u751f\u6210\u201c\u7b80\u6d01\u201d\u548c\u201c\u63cf\u8ff0\u6027\u201d\u4e24\u7c7b\u4ee3\u7801\u7f16\u8f91\u6307\u4ee4\uff0c\u5e76\u57fa\u4e8ediff\u548c\u4e3b\u9898\u8fdb\u884c\u8fc7\u6ee4\uff0c\u6784\u5efa\u9ad8\u8d28\u91cf\u6570\u636e\u96c6OCEDataFT\uff1b\u5728\u8be5\u6570\u636e\u96c6\u4e0a\u5fae\u8c03\u4e09\u4e2a\u5148\u8fdb\u57fa\u7840\u6a21\u578b\u3002", "result": "\u5fae\u8c03\u540e\u6a21\u578b\u5728CanItEdit\u57fa\u51c6\u4e0apass@1\u76f8\u5bf9\u63d0\u53474.50%\u81f320.79%\uff0c\u6027\u80fd\u63a5\u8fd1\u95ed\u6e90\u7cfb\u7edf\uff0c\u4e0eGPT-4\u7684\u5dee\u8ddd\u7f29\u5c0f\u81f33.54%\u3002", "conclusion": "\u901a\u8fc7\u81ea\u52a8\u751f\u6210\u9ad8\u8d28\u91cf\u3001\u591a\u6837\u5316\u7684\u4ee3\u7801\u7f16\u8f91\u6570\u636e\uff0cCanItEdit\u6709\u6548\u63d0\u5347\u4e86\u5f00\u6e90\u6a21\u578b\u7684\u4ee3\u7801\u7f16\u8f91\u80fd\u529b\uff0c\u663e\u8457\u7f29\u5c0f\u4e86\u4e0e\u9876\u5c16\u95ed\u6e90\u6a21\u578b\u7684\u5dee\u8ddd\u3002"}}
{"id": "2509.26529", "categories": ["cs.DC", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.26529", "abs": "https://arxiv.org/abs/2509.26529", "authors": ["Shangshu Qian", "Lin Tan", "Yongle Zhang"], "title": "CSnake: Detecting Self-Sustaining Cascading Failure via Causal Stitching of Fault Propagations", "comment": "Accepted by EuroSys 2026", "summary": "Recent studies have revealed that self-sustaining cascading failures in\ndistributed systems frequently lead to widespread outages, which are\nchallenging to contain and recover from. Existing failure detection techniques\nstruggle to expose such failures prior to deployment, as they typically require\na complex combination of specific conditions to be triggered. This challenge\nstems from the inherent nature of cascading failures, as they typically involve\na sequence of fault propagations, each activated by distinct conditions.\n  This paper presents CSnake, a fault injection framework to expose\nself-sustaining cascading failures in distributed systems. CSnake uses the\nnovel idea of causal stitching, which causally links multiple single-fault\ninjections in different tests to simulate complex fault propagation chains. To\nidentify these chains, CSnake designs a counterfactual causality analysis of\nfault propagations - fault causality analysis (FCA): FCA compares the execution\ntrace of a fault injection run with its corresponding profile run (i.e., same\ntest w/o the injection) and identifies any additional faults triggered, which\nare considered to have a causal relationship with the injected fault.\n  To address the large search space of fault and workload combinations, CSnake\nemploys a three-phase allocation protocol of test budget that prioritizes\nfaults with unique and diverse causal consequences, increasing the likelihood\nof uncovering conditional fault propagations. Furthermore, to avoid incorrectly\nconnecting fault propagations from workloads with incompatible conditions,\nCSnake performs a local compatibility check that approximately checks the\ncompatibility of the path constraints associated with connected fault\npropagations with low overhead.\n  CSnake detected 15 bugs that cause self-sustaining cascading failures in five\nsystems, five of which have been confirmed with two fixed.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86CSnake\uff0c\u4e00\u79cd\u7528\u4e8e\u66b4\u9732\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u81ea\u7ef4\u6301\u7ea7\u8054\u6545\u969c\u7684\u6545\u969c\u6ce8\u5165\u6846\u67b6\uff0c\u901a\u8fc7\u56e0\u679c\u7f1d\u5408\u548c\u6545\u969c\u56e0\u679c\u5206\u6790\uff08FCA\uff09\u6a21\u62df\u590d\u6742\u6545\u969c\u4f20\u64ad\u94fe\uff0c\u5e76\u5728\u4e94\u4e2a\u7cfb\u7edf\u4e2d\u53d1\u73b0\u4e8615\u4e2a\u76f8\u5173\u6f0f\u6d1e\u3002", "motivation": "\u73b0\u6709\u6545\u969c\u68c0\u6d4b\u6280\u672f\u96be\u4ee5\u5728\u90e8\u7f72\u524d\u66b4\u9732\u81ea\u7ef4\u6301\u7ea7\u8054\u6545\u969c\uff0c\u56e0\u4e3a\u8fd9\u7c7b\u6545\u969c\u901a\u5e38\u9700\u8981\u7279\u5b9a\u6761\u4ef6\u7ec4\u5408\u624d\u80fd\u89e6\u53d1\uff0c\u4e14\u6d89\u53ca\u4e00\u7cfb\u5217\u7531\u4e0d\u540c\u6761\u4ef6\u6fc0\u6d3b\u7684\u6545\u969c\u4f20\u64ad\u3002", "method": "CSnake\u91c7\u7528\u201c\u56e0\u679c\u7f1d\u5408\u201d\u65b9\u6cd5\uff0c\u5c06\u591a\u4e2a\u5355\u6545\u969c\u6ce8\u5165\u5728\u4e0d\u540c\u6d4b\u8bd5\u4e2d\u56e0\u679c\u8fde\u63a5\u4ee5\u6a21\u62df\u590d\u6742\u4f20\u64ad\u94fe\uff1b\u901a\u8fc7\u6545\u969c\u56e0\u679c\u5206\u6790\uff08FCA\uff09\u6bd4\u8f83\u6ce8\u5165\u4e0e\u975e\u6ce8\u5165\u6267\u884c\u8f68\u8ff9\u8bc6\u522b\u56e0\u679c\u5173\u7cfb\uff1b\u4f7f\u7528\u4e09\u9636\u6bb5\u6d4b\u8bd5\u9884\u7b97\u5206\u914d\u7b56\u7565\u4f18\u5148\u63a2\u7d22\u5177\u6709\u72ec\u7279\u56e0\u679c\u540e\u679c\u7684\u6545\u969c\uff0c\u5e76\u5f15\u5165\u5c40\u90e8\u517c\u5bb9\u6027\u68c0\u67e5\u907f\u514d\u9519\u8bef\u8fde\u63a5\u4e0d\u517c\u5bb9\u7684\u4f20\u64ad\u8def\u5f84\u3002", "result": "CSnake\u5728\u4e94\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u68c0\u6d4b\u523015\u4e2a\u5bfc\u81f4\u81ea\u7ef4\u6301\u7ea7\u8054\u6545\u969c\u7684\u6f0f\u6d1e\uff0c\u5176\u4e2d5\u4e2a\u5df2\u88ab\u786e\u8ba4\uff0c2\u4e2a\u5df2\u4fee\u590d\u3002", "conclusion": "CSnake\u901a\u8fc7\u65b0\u9896\u7684\u56e0\u679c\u5206\u6790\u4e0e\u9ad8\u6548\u641c\u7d22\u7b56\u7565\uff0c\u6709\u6548\u66b4\u9732\u4e86\u4f20\u7edf\u65b9\u6cd5\u96be\u4ee5\u53d1\u73b0\u7684\u81ea\u7ef4\u6301\u7ea7\u8054\u6545\u969c\uff0c\u4e3a\u63d0\u5347\u5206\u5e03\u5f0f\u7cfb\u7edf\u53ef\u9760\u6027\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002"}}
{"id": "2509.26200", "categories": ["cs.NI", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.26200", "abs": "https://arxiv.org/abs/2509.26200", "authors": ["Hatim Chergui", "Miguel Catalan Cid", "Pouria Sayyad Khodashenas", "Daniel Camps Mur", "Christos Verikoukis"], "title": "Toward an Unbiased Collective Memory for Efficient LLM-Based Agentic 6G Cross-Domain Management", "comment": "12 pages, 8 figures", "summary": "This paper introduces a novel framework for proactive cross-domain resource\norchestration in 6G RAN-Edge networks, featuring large language model\n(LLM)-augmented agents. The system comprises specialized RAN (energy\nefficiency) and Edge (latency assurance) agents that engage in iterative\nnegotiation, supported by advanced reasoning and planning capabilities. Agents\ndynamically interact with a digital twin (DT) to test their proposals and\nleverage a long-term collective memory where their joint successful and failed\nagreements along with the related network contexts are distilled into\nstrategies to either follow or avoid and subsequently stored. Given that agents\nare subject to a plethora of cognitive distortions when retrieving those past\nexperiences -- such as primacy, recency, confirmation and availability biases\n-- we propose in this work a novel unbiased memory design (A reusable mockup\nversion of the unbiased memory source code is available for non-commercial use\nat https://github.com/HatimChergui/unbiased-collective-memory). featuring (i)\nsemantic retrieval of past strategies via Jaccard similarity; (ii) learning\nfrom failures through amplified weighting of SLA violations and mandatory\ninclusion of failed negotiation cases to mitigate confirmation bias; (iii)\ndiversity enforcement to minimize availability bias and (iv) recency and\nprimacy weighting with slow decay to counteract temporal biases. Evaluation\nresults showcase the impact of existing biases and how the unbiased memory\nallows to tackle them by learning from both successful and failed strategies,\neither present or old, resulting in $\\times 4.5$ and $\\times 3.5$ reductions of\nunresolved negotiations compared to non-memory and vanilla memory baselines,\nrespectively, while totally mitigating SLA violations as well as improving\nlatency and energy saving distributions.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u65b0\u578b6G RAN-Edge\u7f51\u7edc\u8de8\u57df\u8d44\u6e90\u7f16\u6392\u6846\u67b6\uff0c\u901a\u8fc7\u5f15\u5165\u65e0\u504f\u8bb0\u5fc6\u673a\u5236\uff0c\u4f7fRAN\u4e0eEdge\u667a\u80fd\u4f53\u5728\u534f\u5546\u4e2d\u6709\u6548\u514b\u670d\u8ba4\u77e5\u504f\u5dee\uff0c\u663e\u8457\u51cf\u5c11\u672a\u89e3\u51b3\u7684\u534f\u5546\u5e76\u5b8c\u5168\u6d88\u9664SLA\u8fdd\u89c4\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u8bb0\u5fc6\u7684\u667a\u80fd\u4f53\u5728\u8de8\u57df\u8d44\u6e90\u534f\u5546\u4e2d\u6613\u53d7\u8ba4\u77e5\u504f\u5dee\uff08\u5982\u9996\u56e0\u3001\u8fd1\u56e0\u3001\u786e\u8ba4\u548c\u53ef\u5f97\u6027\u504f\u5dee\uff09\u5f71\u54cd\uff0c\u5bfc\u81f4\u7b56\u7565\u5b66\u4e60\u4e0d\u5168\u9762\uff0c\u5f71\u54cd6G\u7f51\u7edc\u4e2d\u80fd\u6548\u4e0e\u5ef6\u8fdf\u7684\u534f\u540c\u4f18\u5316\u3002", "method": "\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u65e0\u504f\u96c6\u4f53\u8bb0\u5fc6\u673a\u5236\uff0c\u5305\u62ec\uff1a(i) \u57fa\u4e8eJaccard\u76f8\u4f3c\u5ea6\u7684\u8bed\u4e49\u68c0\u7d22\uff1b(ii) \u901a\u8fc7\u52a0\u6743SLA\u8fdd\u89c4\u548c\u5f3a\u5236\u5305\u542b\u5931\u8d25\u6848\u4f8b\u6765\u5b66\u4e60\u5931\u8d25\u7ecf\u9a8c\uff1b(iii) \u5f3a\u5236\u591a\u6837\u6027\u4ee5\u51cf\u5c11\u53ef\u5f97\u6027\u504f\u5dee\uff1b(iv) \u5bf9\u8fd1\u56e0\u4e0e\u9996\u56e0\u6548\u5e94\u91c7\u7528\u7f13\u6162\u8870\u51cf\u52a0\u6743\u4ee5\u7f13\u89e3\u65f6\u95f4\u504f\u5dee\u3002\u667a\u80fd\u4f53\u5728\u6570\u5b57\u5b6a\u751f\u73af\u5883\u4e2d\u6d4b\u8bd5\u7b56\u7565\uff0c\u5e76\u8fed\u4ee3\u534f\u5546\u3002", "result": "\u76f8\u6bd4\u65e0\u8bb0\u5fc6\u548c\u666e\u901a\u8bb0\u5fc6\u57fa\u7ebf\uff0c\u8be5\u65b9\u6cd5\u5206\u522b\u5c06\u672a\u89e3\u51b3\u534f\u5546\u51cf\u5c114.5\u500d\u548c3.5\u500d\uff0c\u5b8c\u5168\u6d88\u9664SLA\u8fdd\u89c4\uff0c\u5e76\u6539\u5584\u4e86\u5ef6\u8fdf\u4e0e\u8282\u80fd\u6027\u80fd\u5206\u5e03\u3002", "conclusion": "\u5f15\u5165\u65e0\u504f\u8bb0\u5fc6\u673a\u5236\u80fd\u6709\u6548\u514b\u670d\u667a\u80fd\u4f53\u5728\u8d44\u6e90\u7f16\u6392\u4e2d\u7684\u8ba4\u77e5\u504f\u5dee\uff0c\u663e\u8457\u63d0\u53476G RAN-Edge\u7f51\u7edc\u7684\u534f\u540c\u51b3\u7b56\u80fd\u529b\u4e0e\u670d\u52a1\u8d28\u91cf\u3002"}}
{"id": "2509.25242", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25242", "abs": "https://arxiv.org/abs/2509.25242", "authors": ["Zejun Zhang", "Jian Wang", "Qingyun Yang", "Yifan Pan", "Yi Tang", "Yi Li", "Zhenchang Xing", "Tian Zhang", "Xuandong Li", "Guoan Zhang"], "title": "A Benchmark for Localizing Code and Non-Code Issues in Software Projects", "comment": null, "summary": "Accurate project localization (e.g., files and functions) for issue\nresolution is a critical first step in software maintenance. However, existing\nbenchmarks for issue localization, such as SWE-Bench and LocBench, are limited.\nThey focus predominantly on pull-request issues and code locations, ignoring\nother evidence and non-code files such as commits, comments, configurations,\nand documentation. To address this gap, we introduce MULocBench, a\ncomprehensive dataset of 1,100 issues from 46 popular GitHub Python projects.\nComparing with existing benchmarks, MULocBench offers greater diversity in\nissue types, root causes, location scopes, and file types, providing a more\nrealistic testbed for evaluation. Using this benchmark, we assess the\nperformance of state-of-the-art localization methods and five LLM-based\nprompting strategies. Our results reveal significant limitations in current\ntechniques: even at the file level, performance metrics (Acc@5, F1) remain\nbelow 40%. This underscores the challenge of generalizing to realistic,\nmulti-faceted issue resolution. To enable future research on project\nlocalization for issue resolution, we publicly release MULocBench at\nhttps://huggingface.co/datasets/somethingone/MULocBench.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86MULocBench\uff0c\u4e00\u4e2a\u5305\u542b1100\u4e2a\u6765\u81ea46\u4e2a\u70ed\u95e8GitHub Python\u9879\u76ee\u7684\u591a\u6837\u5316\u95ee\u9898\u7684\u6570\u636e\u96c6\uff0c\u7528\u4e8e\u66f4\u5168\u9762\u5730\u8bc4\u4f30\u95ee\u9898\u5b9a\u4f4d\u65b9\u6cd5\u3002\u76f8\u6bd4\u73b0\u6709\u57fa\u51c6\uff0c\u5b83\u6db5\u76d6\u66f4\u591a\u7c7b\u578b\u7684\u95ee\u9898\u3001\u6839\u672c\u539f\u56e0\u3001\u5b9a\u4f4d\u8303\u56f4\u548c\u6587\u4ef6\u7c7b\u578b\uff08\u5305\u62ec\u975e\u4ee3\u7801\u6587\u4ef6\uff09\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u5f53\u524d\u6700\u5148\u8fdb\u7684\u5b9a\u4f4d\u65b9\u6cd5\u548cLLM\u63d0\u793a\u7b56\u7565\u5728\u8be5\u57fa\u51c6\u4e0a\u8868\u73b0\u4e0d\u4f73\uff08Acc@5\u548cF1\u5747\u4f4e\u4e8e40%\uff09\uff0c\u63ed\u793a\u4e86\u73b0\u5b9e\u573a\u666f\u4e2d\u95ee\u9898\u5b9a\u4f4d\u7684\u6311\u6218\u3002", "motivation": "\u73b0\u6709\u95ee\u9898\u5b9a\u4f4d\u57fa\u51c6\uff08\u5982SWE-Bench\u548cLocBench\uff09\u4e3b\u8981\u5173\u6ce8\u62c9\u53d6\u8bf7\u6c42\u76f8\u5173\u7684\u95ee\u9898\u548c\u4ee3\u7801\u6587\u4ef6\uff0c\u5ffd\u7565\u4e86\u63d0\u4ea4\u8bb0\u5f55\u3001\u8bc4\u8bba\u3001\u914d\u7f6e\u6587\u4ef6\u548c\u6587\u6863\u7b49\u5176\u4ed6\u8bc1\u636e\u548c\u975e\u4ee3\u7801\u6587\u4ef6\uff0c\u65e0\u6cd5\u5168\u9762\u53cd\u6620\u771f\u5b9e\u8f6f\u4ef6\u7ef4\u62a4\u4e2d\u7684\u95ee\u9898\u5b9a\u4f4d\u573a\u666f\u3002", "method": "\u6784\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3aMULocBench\u7684\u65b0\u57fa\u51c6\u6570\u636e\u96c6\uff0c\u5305\u542b\u6765\u81ea46\u4e2a\u70ed\u95e8GitHub Python\u9879\u76ee\u76841100\u4e2a\u95ee\u9898\uff0c\u8986\u76d6\u591a\u79cd\u95ee\u9898\u7c7b\u578b\u3001\u6839\u672c\u539f\u56e0\u3001\u5b9a\u4f4d\u8303\u56f4\u548c\u6587\u4ef6\u7c7b\u578b\uff1b\u5e76\u5728\u8be5\u6570\u636e\u96c6\u4e0a\u8bc4\u4f30\u4e86\u5f53\u524d\u6700\u5148\u8fdb\u7684\u5b9a\u4f4d\u65b9\u6cd5\u548c\u4e94\u79cd\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u63d0\u793a\u7b56\u7565\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0c\u5373\u4f7f\u5728\u6587\u4ef6\u7ea7\u522b\uff0c\u73b0\u6709\u65b9\u6cd5\u7684\u6027\u80fd\u6307\u6807\uff08Acc@5\u3001F1\uff09\u4ecd\u4f4e\u4e8e40%\uff0c\u8868\u660e\u5f53\u524d\u6280\u672f\u5728\u5904\u7406\u771f\u5b9e\u3001\u591a\u7ef4\u5ea6\u7684\u95ee\u9898\u5b9a\u4f4d\u4efb\u52a1\u65f6\u5b58\u5728\u663e\u8457\u5c40\u9650\u3002", "conclusion": "MULocBench\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u771f\u5b9e\u3001\u5168\u9762\u7684\u95ee\u9898\u5b9a\u4f4d\u8bc4\u4f30\u57fa\u51c6\uff0c\u63ed\u793a\u4e86\u73b0\u6709\u65b9\u6cd5\u7684\u4e0d\u8db3\uff0c\u5e76\u4e3a\u672a\u6765\u7814\u7a76\u63d0\u4f9b\u4e86\u516c\u5f00\u8d44\u6e90\u3002"}}
{"id": "2509.26245", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2509.26245", "abs": "https://arxiv.org/abs/2509.26245", "authors": ["Fabio Busacca", "Corrado Puligheddu", "Francesco Raviglione", "Riccardo Rusca", "Claudio Casetti", "Carla Fabiana Chiasserini", "Sergio Palazzo"], "title": "Target Wake Time Scheduling for Time-sensitive and Energy-efficient Wi-Fi Networks", "comment": "Accepted for publication in IEEE Transactions on Mobile Computing", "summary": "Time Sensitive Networking (TSN) is fundamental for the reliable, low-latency\nnetworks that will enable the Industrial Internet of Things (IIoT). Wi-Fi has\nhistorically been considered unfit for TSN, as channel contention and\ncollisions prevent deterministic transmission delays. However, this issue can\nbe overcome by using Target Wake Time (TWT), which enables the access point to\ninstruct Wi-Fi stations to wake up and transmit in non-overlapping TWT Service\nPeriods (SPs), and sleep in the remaining time. In this paper, we first\nformulate the TWT Acceptance and Scheduling Problem (TASP), with the objective\nto schedule TWT SPs that maximize traffic throughput and energy efficiency\nwhile respecting Age of Information (AoI) constraints. Then, due to TASP being\nNP-hard, we propose the TASP Efficient Resolver (TASPER), a heuristic strategy\nto find near-optimal solutions efficiently. Using a TWT simulator based on\nns-3, we compare TASPER to several baselines, including HSA, a state-of-the-art\nsolution originally designed for WirelessHART networks. We demonstrate that\nTASPER obtains up to 24.97% lower mean transmission rejection cost and saves up\nto 14.86% more energy compared to the leading baseline, ShortestFirst, in a\nchallenging, large-scale scenario. Additionally, when compared to HSA, TASPER\nalso reduces the energy consumption by 34% and reduces the mean rejection cost\nby 26%. Furthermore, we validate TASPER on our IIoT testbed, which comprises 10\ncommercial TWT-compatible stations, observing that our solution admits more\ntransmissions than the best baseline strategy, without violating any AoI\ndeadline.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faTASP\u95ee\u9898\u53ca\u5176\u9ad8\u6548\u542f\u53d1\u5f0f\u6c42\u89e3\u5668TASPER\uff0c\u5229\u7528Wi-Fi\u7684TWT\u673a\u5236\u5b9e\u73b0\u9762\u5411\u5de5\u4e1a\u7269\u8054\u7f51\u7684\u65f6\u95f4\u654f\u611f\u7f51\u7edc\uff0c\u5728\u6ee1\u8db3\u4fe1\u606f\u65b0\u9c9c\u5ea6\u7ea6\u675f\u7684\u540c\u65f6\u63d0\u5347\u541e\u5410\u91cf\u4e0e\u80fd\u6548\u3002", "motivation": "\u4f20\u7edfWi-Fi\u56e0\u4fe1\u9053\u7ade\u4e89\u548c\u51b2\u7a81\u88ab\u8ba4\u4e3a\u4e0d\u9002\u5408\u65f6\u95f4\u654f\u611f\u7f51\u7edc\uff08TSN\uff09\uff0c\u4f46\u501f\u52a9Target Wake Time\uff08TWT\uff09\u673a\u5236\u53ef\u5b9e\u73b0\u786e\u5b9a\u6027\u4f20\u8f93\uff1b\u7136\u800c\u5982\u4f55\u9ad8\u6548\u8c03\u5ea6TWT\u670d\u52a1\u5468\u671f\u4ee5\u517c\u987e\u541e\u5410\u91cf\u3001\u80fd\u6548\u548c\u4fe1\u606f\u65b0\u9c9c\u5ea6\uff08AoI\uff09\u4ecd\u662f\u4e00\u4e2a\u6311\u6218\u3002", "method": "\u4f5c\u8005\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e86TWT\u63a5\u7eb3\u4e0e\u8c03\u5ea6\u95ee\u9898\uff08TASP\uff09\uff0c\u5e76\u63d0\u51fa\u542f\u53d1\u5f0f\u7b97\u6cd5TASPER\u4ee5\u9ad8\u6548\u6c42\u89e3\u8be5NP\u96be\u95ee\u9898\uff1b\u901a\u8fc7\u57fa\u4e8ens-3\u7684\u4eff\u771f\u5668\u548c\u5305\u542b10\u4e2a\u5546\u7528TWT\u8bbe\u5907\u7684IIoT\u6d4b\u8bd5\u5e73\u53f0\u5bf9\u65b9\u6848\u8fdb\u884c\u8bc4\u4f30\u3002", "result": "\u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\uff0cTASPER\u76f8\u6bd4\u6700\u4f18\u57fa\u7ebfShortestFirst\u964d\u4f4e\u5e73\u5747\u4f20\u8f93\u62d2\u7edd\u6210\u672c\u8fbe24.97%\uff0c\u8282\u80fd14.86%\uff1b\u76f8\u6bd4WirelessHART\u65b9\u6848HSA\uff0c\u8282\u80fd34%\u3001\u62d2\u7edd\u6210\u672c\u964d\u4f4e26%\uff1b\u5b9e\u6d4b\u9a8c\u8bc1\u5176\u5728\u4e0d\u8fdd\u53cdAoI\u7ea6\u675f\u4e0b\u63a5\u7eb3\u66f4\u591a\u4f20\u8f93\u3002", "conclusion": "TASPER\u6709\u6548\u8bc1\u660e\u4e86Wi-Fi\u7ed3\u5408TWT\u673a\u5236\u53ef\u7528\u4e8e\u5de5\u4e1a\u7269\u8054\u7f51\u4e2d\u7684\u65f6\u95f4\u654f\u611f\u7f51\u7edc\uff0c\u5728\u6ee1\u8db3\u4e25\u683c\u65f6\u6548\u6027\u8981\u6c42\u7684\u540c\u65f6\u663e\u8457\u63d0\u5347\u6027\u80fd\u4e0e\u80fd\u6548\u3002"}}
{"id": "2509.25243", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25243", "abs": "https://arxiv.org/abs/2509.25243", "authors": ["Xunzhu Tang", "Iyiola Emmanuel Olatunji", "Tiezhu Sun", "Jacques Klein", "Tegawende F. Bissyande"], "title": "Reinforcement Learning-Guided Chain-of-Draft for Token-Efficient Code Generation", "comment": null, "summary": "LLMs demonstrate surface-level fluency in code generation but struggle with\nstructured reasoning tasks requiring correctness and semantic alignment. While\nChain-of-Thought (CoT) prompting enhances reasoning through intermediate steps,\nit suffers from verbosity and inefficiency. Chain-of-Draft (CoD) prompting\noffers more concise reasoning, but the stochastic nature of LLMs produces\nvarying solution quality, making optimal selection challenging. We propose\n\\multicod, a reinforcement learning framework that learns to select the most\npromising candidate from CoD-generated solutions. Our approach uses\nstrategy-guided prompting to encourage diverse reasoning styles and models\nsolution selection as a contextual bandit problem. The framework optimizes\ninterpretable features including code complexity, reasoning structure, and\nstrategic metadata through a reward function balancing correctness, efficiency,\nand clarity. Experiments on MBPP, BigCodeBench, SWE-bench Verified, and\nDefects4J show \\multicod~outperforms and in some cases, on par with standard\nprompting, CoT, and CoD baselines while achieving cost and token efficiency\nfrom the user's perspective through a multi-candidate design that charges only\nfor the selected output, reducing user billing by over 50\\% and improving LLM\nresponse quality, making \\multicod~more sustainable and scalable for real-world\ndeployment. Our code is available: https://anonymous.4open.science/r/MultiCoD.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faMultiCoD\u6846\u67b6\uff0c\u7ed3\u5408Chain-of-Draft\u63d0\u793a\u4e0e\u5f3a\u5316\u5b66\u4e60\uff0c\u4ece\u591a\u4e2a\u5019\u9009\u89e3\u4e2d\u9009\u62e9\u6700\u4f18\u4ee3\u7801\u65b9\u6848\uff0c\u5728\u4fdd\u8bc1\u6b63\u786e\u6027\u3001\u6548\u7387\u548c\u6e05\u6670\u5ea6\u7684\u540c\u65f6\u663e\u8457\u964d\u4f4e\u7528\u6237\u6210\u672c\u3002", "motivation": "\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5728\u4ee3\u7801\u751f\u6210\u4e2d\u867d\u5177\u8868\u9762\u6d41\u7545\u6027\uff0c\u4f46\u5728\u9700\u8981\u6b63\u786e\u6027\u548c\u8bed\u4e49\u5bf9\u9f50\u7684\u7ed3\u6784\u5316\u63a8\u7406\u4efb\u52a1\u4e2d\u8868\u73b0\u4e0d\u4f73\uff1b\u73b0\u6709\u65b9\u6cd5\u5982CoT\u8fc7\u4e8e\u5197\u957f\uff0cCoD\u867d\u7b80\u6d01\u4f46\u8f93\u51fa\u8d28\u91cf\u4e0d\u7a33\u5b9a\uff0c\u96be\u4ee5\u9009\u62e9\u6700\u4f18\u89e3\u3002", "method": "\u63d0\u51faMultiCoD\u6846\u67b6\uff0c\u5229\u7528\u7b56\u7565\u5f15\u5bfc\u63d0\u793a\u751f\u6210\u591a\u6837\u5316\u7684Chain-of-Draft\u5019\u9009\u89e3\uff0c\u5e76\u5c06\u89e3\u7684\u9009\u62e9\u5efa\u6a21\u4e3a\u4e0a\u4e0b\u6587\u8d4c\u535a\u673a\u95ee\u9898\uff0c\u901a\u8fc7\u5956\u52b1\u51fd\u6570\u4f18\u5316\u4ee3\u7801\u590d\u6742\u5ea6\u3001\u63a8\u7406\u7ed3\u6784\u548c\u7b56\u7565\u5143\u6570\u636e\u7b49\u53ef\u89e3\u91ca\u7279\u5f81\u3002", "result": "\u5728MBPP\u3001BigCodeBench\u3001SWE-bench Verified\u548cDefects4J\u7b49\u57fa\u51c6\u4e0a\uff0cMultiCoD\u4f18\u4e8e\u6216\u5ab2\u7f8e\u6807\u51c6\u63d0\u793a\u3001CoT\u548cCoD\u57fa\u7ebf\uff0c\u540c\u65f6\u901a\u8fc7\u4ec5\u5bf9\u9009\u5b9a\u8f93\u51fa\u8ba1\u8d39\uff0c\u4f7f\u7528\u6237\u6210\u672c\u964d\u4f4e\u8d8550%\uff0c\u63d0\u5347\u54cd\u5e94\u8d28\u91cf\u3002", "conclusion": "MultiCoD\u901a\u8fc7\u591a\u5019\u9009\u8bbe\u8ba1\u4e0e\u5f3a\u5316\u5b66\u4e60\u9009\u62e9\u673a\u5236\uff0c\u5728\u63d0\u5347\u4ee3\u7801\u751f\u6210\u8d28\u91cf\u7684\u540c\u65f6\u663e\u8457\u964d\u4f4e\u6210\u672c\uff0c\u66f4\u5177\u53ef\u6301\u7eed\u6027\u548c\u5b9e\u9645\u90e8\u7f72\u4ef7\u503c\u3002"}}
{"id": "2509.26368", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2509.26368", "abs": "https://arxiv.org/abs/2509.26368", "authors": ["Rubi Debnath", "Luxi Zhao", "Mohammadreza Barzegaran", "Sebastian Steinhorst"], "title": "Introducing Large Language Models in the Design Flow of Time Sensitive Networking", "comment": null, "summary": "The growing demand for real-time, safety-critical systems has significantly\nincreased both the adoption and complexity of Time Sensitive Networking (TSN).\nConfiguring an optimized TSN network is highly challenging, requiring careful\nplanning, design, verification, validation, and deployment. Large Language\nModels (LLMs) have recently demonstrated strong capabilities in solving complex\ntasks, positioning them as promising candidates for automating end-to-end TSN\ndeployment, referred to as TSN orchestration. This paper outlines the steps\ninvolved in TSN orchestration and the associated challenges. To assess the\ncapabilities of existing LLM models, we conduct an initial proof-of-concept\ncase study focused on TSN configuration across multiple models. Building on\nthese insights, we propose an LLM-assisted orchestration framework. Unlike\nprior research on LLMs in computer networks, which has concentrated on general\nconfiguration and management, TSN-specific orchestration has not yet been\ninvestigated. We present the building blocks for automating TSN using LLMs,\ndescribe the proposed pipeline, and analyze opportunities and limitations for\nreal-world deployment. Finally, we highlight key challenges and research\ndirections, including the development of TSN-focused datasets, standardized\nbenchmark suites, and the integration of external tools such as Network\nCalculus (NC) engines and simulators. This work provides the first roadmap\ntoward assessing the feasibility of LLM-assisted TSN orchestration.", "AI": {"tldr": "\u672c\u6587\u9996\u6b21\u63a2\u7d22\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5b9e\u73b0\u65f6\u95f4\u654f\u611f\u7f51\u7edc\uff08TSN\uff09\u7684\u7aef\u5230\u7aef\u7f16\u6392\uff0c\u63d0\u51fa\u4e00\u4e2aLLM\u8f85\u52a9\u7684TSN\u81ea\u52a8\u5316\u90e8\u7f72\u6846\u67b6\uff0c\u5e76\u6307\u51fa\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002", "motivation": "\u968f\u7740\u5b9e\u65f6\u3001\u5b89\u5168\u5173\u952e\u7cfb\u7edf\u9700\u6c42\u7684\u589e\u957f\uff0cTSN\u7684\u90e8\u7f72\u53d8\u5f97\u65e5\u76ca\u590d\u6742\uff0c\u4e9f\u9700\u81ea\u52a8\u5316\u624b\u6bb5\u3002LLM\u5728\u590d\u6742\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\u4f7f\u5176\u6210\u4e3a\u5b9e\u73b0TSN\u7f16\u6392\u7684\u6f5c\u5728\u5de5\u5177\uff0c\u4f46\u76ee\u524d\u5c1a\u65e0\u9488\u5bf9TSN\u7684LLM\u7f16\u6392\u7814\u7a76\u3002", "method": "\u4f5c\u8005\u9996\u5148\u68b3\u7406TSN\u7f16\u6392\u7684\u6b65\u9aa4\u4e0e\u6311\u6218\uff0c\u5f00\u5c55\u591a\u6a21\u578b\u53c2\u4e0e\u7684TSN\u914d\u7f6e\u6982\u5ff5\u9a8c\u8bc1\u5b9e\u9a8c\uff0c\u8fdb\u800c\u63d0\u51fa\u4e00\u4e2aLLM\u8f85\u52a9\u7684TSN\u7f16\u6392\u6846\u67b6\uff0c\u5e76\u63cf\u8ff0\u5176\u6784\u5efa\u6a21\u5757\u4e0e\u6d41\u7a0b\u3002", "result": "\u5b9e\u9a8c\u521d\u6b65\u9a8c\u8bc1\u4e86\u73b0\u6709LLM\u5728TSN\u914d\u7f6e\u4efb\u52a1\u4e2d\u7684\u80fd\u529b\uff0c\u8bc6\u522b\u51fa\u5176\u5728\u771f\u5b9e\u90e8\u7f72\u4e2d\u7684\u673a\u4f1a\u4e0e\u5c40\u9650\uff0c\u5e76\u63d0\u51fa\u4e86\u5b9e\u73b0LLM\u8f85\u52a9TSN\u7f16\u6392\u7684\u5173\u952e\u7ec4\u4ef6\u3002", "conclusion": "\u672c\u6587\u4e3aLLM\u8f85\u52a9TSN\u7f16\u6392\u7684\u53ef\u884c\u6027\u8bc4\u4f30\u63d0\u4f9b\u4e86\u9996\u4e2a\u8def\u7ebf\u56fe\uff0c\u547c\u5401\u6784\u5efaTSN\u4e13\u7528\u6570\u636e\u96c6\u3001\u6807\u51c6\u5316\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5e76\u6574\u5408\u7f51\u7edc\u6f14\u7b97\u5f15\u64ce\u7b49\u5916\u90e8\u5de5\u5177\u3002"}}
{"id": "2509.25247", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.25247", "abs": "https://arxiv.org/abs/2509.25247", "authors": ["Krishna Vamshi Bodla", "Haizhao Yang"], "title": "Protocode: Prototype-Driven Interpretability for Code Generation in LLMs", "comment": null, "summary": "Since the introduction of Large Language Models (LLMs), they have been widely\nadopted for various tasks such as text summarization, question answering,\nspeech-to-text translation, and more. In recent times, the use of LLMs for code\ngeneration has gained significant attention, with tools such as Cursor and\nWindsurf demonstrating the ability to analyze massive code repositories and\nrecommend relevant changes. Big tech companies have also acknowledged the\ngrowing reliance on LLMs for code generation within their codebases. Although\nthese advances significantly improve developer productivity, increasing\nreliance on automated code generation can proportionally increase the risk of\nsuboptimal solutions and insecure code. Our work focuses on automatically\nsampling In-Context Learning (ICL) demonstrations which can improve model\nperformance and enhance the interpretability of the generated code. Using\nAST-based analysis on outputs from the MBPP test set, we identify regions of\ncode most influenced by the chosen demonstrations. In our experiments, we show\nthat high-quality ICL demonstrations not only make outputs easier to interpret\nbut also yield a positive performance improvement on the pass@10 metric.\nConversely, poorly chosen ICL demonstrations affected the LLM performance on\nthe pass@10 metric negatively compared to the base model. Overall, our approach\nhighlights the importance of efficient sampling strategies for ICL, which can\naffect the performance of the model on any given task.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5728\u4ee3\u7801\u751f\u6210\u4efb\u52a1\u4e2d\u901a\u8fc7\u81ea\u52a8\u91c7\u6837\u9ad8\u8d28\u91cf\u7684\u4e0a\u4e0b\u6587\u5b66\u4e60\uff08ICL\uff09\u793a\u4f8b\uff0c\u4ee5\u63d0\u5347\u6a21\u578b\u6027\u80fd\u548c\u751f\u6210\u4ee3\u7801\u7684\u53ef\u89e3\u91ca\u6027\u3002", "motivation": "\u968f\u7740LLM\u5728\u4ee3\u7801\u751f\u6210\u4e2d\u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801\u53ef\u80fd\u5b58\u5728\u6b21\u4f18\u6216\u4e0d\u5b89\u5168\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u9700\u8981\u63d0\u5347\u5176\u6027\u80fd\u4e0e\u53ef\u89e3\u91ca\u6027\u3002", "method": "\u4f5c\u8005\u57fa\u4e8e\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\u5206\u6790MBPP\u6d4b\u8bd5\u96c6\u8f93\u51fa\uff0c\u8bc6\u522b\u53d7ICL\u793a\u4f8b\u5f71\u54cd\u6700\u5927\u7684\u4ee3\u7801\u533a\u57df\uff0c\u5e76\u81ea\u52a8\u91c7\u6837\u9ad8\u8d28\u91cf\u7684ICL\u6f14\u793a\u3002", "result": "\u9ad8\u8d28\u91cf\u7684ICL\u793a\u4f8b\u4e0d\u4ec5\u63d0\u5347\u4e86\u4ee3\u7801\u53ef\u89e3\u91ca\u6027\uff0c\u8fd8\u5728pass@10\u6307\u6807\u4e0a\u5e26\u6765\u6027\u80fd\u63d0\u5347\uff1b\u800c\u4f4e\u8d28\u91cf\u793a\u4f8b\u5219\u4f1a\u964d\u4f4e\u6027\u80fd\u3002", "conclusion": "\u9ad8\u6548\u7684ICL\u793a\u4f8b\u91c7\u6837\u7b56\u7565\u5bf9LLM\u5728\u4ee3\u7801\u751f\u6210\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\u5177\u6709\u663e\u8457\u5f71\u54cd\uff0c\u503c\u5f97\u8fdb\u4e00\u6b65\u7814\u7a76\u548c\u4f18\u5316\u3002"}}
{"id": "2509.25248", "categories": ["cs.SE", "cs.AI", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.25248", "abs": "https://arxiv.org/abs/2509.25248", "authors": ["Zehua Zhang", "Ati Priya Bajaj", "Divij Handa", "Siyu Liu", "Arvind S Raj", "Hongkai Chen", "Hulin Wang", "Yibo Liu", "Zion Leonahenahe Basque", "Souradip Nath", "Vishal Juneja", "Nikhil Chapre", "Yan Shoshitaishvili", "Adam Doup\u00e9", "Chitta Baral", "Ruoyu Wang"], "title": "BuildBench: Benchmarking LLM Agents on Compiling Real-World Open-Source Software", "comment": null, "summary": "Automatically compiling open-source software (OSS) projects is a vital,\nlabor-intensive, and complex task, which makes it a good challenge for LLM\nAgents. Existing methods rely on manually curated rules and workflows, which\ncannot adapt to OSS that requires customized configuration or environment\nsetup. Recent attempts using Large Language Models (LLMs) used selective\nevaluation on a subset of highly rated OSS, a practice that underestimates the\nrealistic challenges of OSS compilation. In practice, compilation instructions\nare often absent, dependencies are undocumented, and successful builds may even\nrequire patching source files or modifying build scripts. We propose a more\nchallenging and realistic benchmark, BUILD-BENCH, comprising OSS that are more\ndiverse in quality, scale, and characteristics. Furthermore, we propose a\nstrong baseline LLM-based agent, OSS-BUILD-AGENT, an effective system with\nenhanced build instruction retrieval module that achieves state-of-the-art\nperformance on BUILD-BENCH and is adaptable to heterogeneous OSS\ncharacteristics. We also provide detailed analysis regarding different\ncompilation method design choices and their influence to the whole task,\noffering insights to guide future advances. We believe performance on\nBUILD-BENCH can faithfully reflect an agent's ability to tackle compilation as\na complex software engineering tasks, and, as such, our benchmark will spur\ninnovation with a significant impact on downstream applications in the fields\nof software development and software security.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u66f4\u5177\u6311\u6218\u6027\u548c\u73b0\u5b9e\u6027\u7684\u5f00\u6e90\u8f6f\u4ef6\uff08OSS\uff09\u81ea\u52a8\u7f16\u8bd1\u57fa\u51c6 BUILD-BENCH\uff0c\u4ee5\u53ca\u4e00\u4e2a\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u5f3a\u57fa\u7ebf\u4ee3\u7406 OSS-BUILD-AGENT\uff0c\u7528\u4e8e\u5e94\u5bf9 OSS \u7f16\u8bd1\u4e2d\u5e38\u89c1\u7684\u7f3a\u5931\u8bf4\u660e\u3001\u672a\u8bb0\u5f55\u4f9d\u8d56\u548c\u9700\u4fee\u6539\u6e90\u7801\u7b49\u590d\u6742\u95ee\u9898\u3002", "motivation": "\u73b0\u6709 OSS \u81ea\u52a8\u7f16\u8bd1\u65b9\u6cd5\u4f9d\u8d56\u4eba\u5de5\u89c4\u5219\uff0c\u96be\u4ee5\u9002\u5e94\u9700\u8981\u5b9a\u5236\u914d\u7f6e\u6216\u73af\u5883\u7684\u9879\u76ee\uff1b\u800c\u8fd1\u671f\u57fa\u4e8e LLM \u7684\u65b9\u6cd5\u4ec5\u5728\u9ad8\u8d28\u91cf\u5b50\u96c6\u4e0a\u8bc4\u4f30\uff0c\u4f4e\u4f30\u4e86\u771f\u5b9e\u7f16\u8bd1\u6311\u6218\u3002", "method": "\u63d0\u51fa BUILD-BENCH \u57fa\u51c6\uff0c\u6db5\u76d6\u66f4\u591a\u6837\u5316\u3001\u66f4\u5177\u4ee3\u8868\u6027\u7684 OSS \u9879\u76ee\uff0c\u5e76\u8bbe\u8ba1 OSS-BUILD-AGENT\uff0c\u5305\u542b\u589e\u5f3a\u7684\u6784\u5efa\u6307\u4ee4\u68c0\u7d22\u6a21\u5757\uff0c\u4ee5\u9002\u5e94\u5f02\u6784 OSS \u7279\u6027\u3002", "result": "OSS-BUILD-AGENT \u5728 BUILD-BENCH \u4e0a\u8fbe\u5230\u5f53\u524d\u6700\u4f18\u6027\u80fd\uff0c\u5e76\u901a\u8fc7\u8be6\u7ec6\u5206\u6790\u4e0d\u540c\u7f16\u8bd1\u65b9\u6cd5\u8bbe\u8ba1\u5bf9\u6574\u4f53\u4efb\u52a1\u7684\u5f71\u54cd\uff0c\u4e3a\u672a\u6765\u7814\u7a76\u63d0\u4f9b\u6307\u5bfc\u3002", "conclusion": "BUILD-BENCH \u80fd\u771f\u5b9e\u53cd\u6620\u667a\u80fd\u4f53\u5904\u7406\u590d\u6742\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\u7684\u80fd\u529b\uff0c\u6709\u671b\u63a8\u52a8\u8f6f\u4ef6\u5f00\u53d1\u4e0e\u5b89\u5168\u9886\u57df\u7684\u4e0b\u6e38\u5e94\u7528\u521b\u65b0\u3002"}}
{"id": "2509.25257", "categories": ["cs.SE", "cs.IR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.25257", "abs": "https://arxiv.org/abs/2509.25257", "authors": ["Pratik Shah", "Rajat Ghosh", "Aryan Singhal", "Debojyoti Dutta"], "title": "RANGER -- Repository-Level Agent for Graph-Enhanced Retrieval", "comment": "24 pages, 4 figures", "summary": "General-purpose automated software engineering (ASE) includes tasks such as\ncode completion, retrieval, repair, QA, and summarization. These tasks require\na code retrieval system that can handle specific queries about code entities,\nor code entity queries (for example, locating a specific class or retrieving\nthe dependencies of a function), as well as general queries without explicit\ncode entities, or natural language queries (for example, describing a task and\nretrieving the corresponding code). We present RANGER, a repository-level code\nretrieval agent designed to address both query types, filling a gap in recent\nworks that have focused primarily on code-entity queries. We first present a\ntool that constructs a comprehensive knowledge graph of the entire repository,\ncapturing hierarchical and cross-file dependencies down to the variable level,\nand augments graph nodes with textual descriptions and embeddings to bridge the\ngap between code and natural language. RANGER then operates on this graph\nthrough a dual-stage retrieval pipeline. Entity-based queries are answered\nthrough fast Cypher lookups, while natural language queries are handled by\nMCTS-guided graph exploration. We evaluate RANGER across four diverse\nbenchmarks that represent core ASE tasks including code search, question\nanswering, cross-file dependency retrieval, and repository-level code\ncompletion. On CodeSearchNet and RepoQA it outperforms retrieval baselines that\nuse embeddings from strong models such as Qwen3-8B. On RepoBench, it achieves\nsuperior cross-file dependency retrieval over baselines, and on CrossCodeEval,\npairing RANGER with BM25 delivers the highest exact match rate in code\ncompletion compared to other RAG methods.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86RANGER\uff0c\u4e00\u4e2a\u9762\u5411\u4ed3\u5e93\u7ea7\u4ee3\u7801\u68c0\u7d22\u7684\u667a\u80fd\u4f53\uff0c\u80fd\u591f\u540c\u65f6\u5904\u7406\u4ee3\u7801\u5b9e\u4f53\u67e5\u8be2\u548c\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u3002\u5b83\u901a\u8fc7\u6784\u5efa\u5305\u542b\u4ee3\u7801\u5c42\u7ea7\u4e0e\u8de8\u6587\u4ef6\u4f9d\u8d56\u5173\u7cfb\u7684\u77e5\u8bc6\u56fe\u8c31\uff0c\u5e76\u7ed3\u5408Cypher\u67e5\u8be2\u4e0eMCTS\u5f15\u5bfc\u7684\u56fe\u63a2\u7d22\uff0c\u663e\u8457\u63d0\u5347\u4e86\u591a\u79cd\u81ea\u52a8\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\u7684\u68c0\u7d22\u6027\u80fd\u3002", "motivation": "\u73b0\u6709\u4ee3\u7801\u68c0\u7d22\u65b9\u6cd5\u4e3b\u8981\u5173\u6ce8\u4ee3\u7801\u5b9e\u4f53\u67e5\u8be2\uff0c\u7f3a\u4e4f\u5bf9\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u7684\u6709\u6548\u652f\u6301\uff0c\u96be\u4ee5\u6ee1\u8db3\u901a\u7528\u81ea\u52a8\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\uff08\u5982\u4ee3\u7801\u641c\u7d22\u3001\u95ee\u7b54\u3001\u4f9d\u8d56\u68c0\u7d22\u548c\u4ee3\u7801\u8865\u5168\uff09\u7684\u591a\u6837\u5316\u9700\u6c42\u3002", "method": "RANGER\u9996\u5148\u6784\u5efa\u4e00\u4e2a\u6db5\u76d6\u6574\u4e2a\u4ee3\u7801\u4ed3\u5e93\u7684\u7ec6\u7c92\u5ea6\u77e5\u8bc6\u56fe\u8c31\uff0c\u5305\u542b\u53d8\u91cf\u7ea7\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u4e3a\u56fe\u8282\u70b9\u6dfb\u52a0\u6587\u672c\u63cf\u8ff0\u548c\u5d4c\u5165\uff1b\u7136\u540e\u91c7\u7528\u53cc\u9636\u6bb5\u68c0\u7d22\u673a\u5236\uff1a\u5bf9\u4ee3\u7801\u5b9e\u4f53\u67e5\u8be2\u4f7f\u7528Cypher\u5feb\u901f\u67e5\u627e\uff0c\u5bf9\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u5219\u901a\u8fc7MCTS\u5f15\u5bfc\u5728\u56fe\u4e0a\u8fdb\u884c\u63a2\u7d22\u3002", "result": "\u5728CodeSearchNet\u548cRepoQA\u4e0a\u4f18\u4e8e\u57fa\u4e8e\u5f3a\u6a21\u578b\uff08\u5982Qwen3-8B\uff09\u5d4c\u5165\u7684\u68c0\u7d22\u57fa\u7ebf\uff1b\u5728RepoBench\u4e0a\u5b9e\u73b0\u66f4\u4f18\u7684\u8de8\u6587\u4ef6\u4f9d\u8d56\u68c0\u7d22\uff1b\u5728CrossCodeEval\u4e2d\uff0c\u4e0eBM25\u7ed3\u5408\u540e\u5728\u4ee3\u7801\u8865\u5168\u4efb\u52a1\u4e2d\u53d6\u5f97\u6700\u9ad8\u7cbe\u786e\u5339\u914d\u7387\u3002", "conclusion": "RANGER\u901a\u8fc7\u7edf\u4e00\u5904\u7406\u4ee3\u7801\u5b9e\u4f53\u4e0e\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\uff0c\u5728\u591a\u4e2aASE\u4efb\u52a1\u4e2d\u5c55\u73b0\u51fa\u5353\u8d8a\u6027\u80fd\uff0c\u586b\u8865\u4e86\u5f53\u524d\u4ee3\u7801\u68c0\u7d22\u7cfb\u7edf\u5728\u901a\u7528\u6027\u65b9\u9762\u7684\u7a7a\u767d\u3002"}}
{"id": "2509.25297", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25297", "abs": "https://arxiv.org/abs/2509.25297", "authors": ["Yuxuan Wan", "Tingshuo Liang", "Jiakai Xu", "Jingyu Xiao", "Yintong Huo", "Michael R. Lyu"], "title": "Automatically Generating Web Applications from Requirements Via Multi-Agent Test-Driven Development", "comment": null, "summary": "Developing full-stack web applications is complex and time-intensive,\ndemanding proficiency across diverse technologies and frameworks. Although\nrecent advances in multimodal large language models (MLLMs) enable automated\nwebpage generation from visual inputs, current solutions remain limited to\nfront-end tasks and fail to deliver fully functional applications. In this\nwork, we introduce TDDev, the first test-driven development (TDD)-enabled\nLLM-agent framework for end-to-end full-stack web application generation. Given\na natural language description or design image, TDDev automatically derives\nexecutable test cases, generates front-end and back-end code, simulates user\ninteractions, and iteratively refines the implementation until all requirements\nare satisfied. Our framework addresses key challenges in full-stack automation,\nincluding underspecified user requirements, complex interdependencies among\nmultiple files, and the need for both functional correctness and visual\nfidelity. Through extensive experiments on diverse application scenarios, TDDev\nachieves a 14.4% improvement on overall accuracy compared to state-of-the-art\nbaselines, demonstrating its effectiveness in producing reliable, high-quality\nweb applications without requiring manual intervention.", "AI": {"tldr": "TDDev \u662f\u9996\u4e2a\u652f\u6301\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff08TDD\uff09\u7684 LLM \u667a\u80fd\u4f53\u6846\u67b6\uff0c\u53ef\u4ece\u81ea\u7136\u8bed\u8a00\u6216\u8bbe\u8ba1\u56fe\u81ea\u52a8\u751f\u6210\u7aef\u5230\u7aef\u7684\u5168\u6808 Web \u5e94\u7528\uff0c\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "motivation": "\u5f53\u524d\u57fa\u4e8e\u591a\u6a21\u6001\u5927\u8bed\u8a00\u6a21\u578b\u7684\u7f51\u9875\u751f\u6210\u65b9\u6cd5\u4ec5\u9650\u4e8e\u524d\u7aef\uff0c\u65e0\u6cd5\u751f\u6210\u5b8c\u6574\u53ef\u7528\u7684\u5168\u6808\u5e94\u7528\uff1b\u5f00\u53d1\u5168\u6808\u5e94\u7528\u672c\u8eab\u590d\u6742\u4e14\u8017\u65f6\uff0c\u9700\u8de8\u6280\u672f\u6808\u80fd\u529b\u3002", "method": "TDDev \u6846\u67b6\u6839\u636e\u81ea\u7136\u8bed\u8a00\u6216\u8bbe\u8ba1\u56fe\u50cf\u81ea\u52a8\u751f\u6210\u53ef\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u540c\u6b65\u751f\u6210\u524d\u540e\u7aef\u4ee3\u7801\uff0c\u6a21\u62df\u7528\u6237\u4ea4\u4e92\uff0c\u5e76\u8fed\u4ee3\u4f18\u5316\u5b9e\u73b0\u76f4\u81f3\u6ee1\u8db3\u6240\u6709\u9700\u6c42\u3002", "result": "\u5728\u591a\u6837\u5316\u7684\u5e94\u7528\u573a\u666f\u5b9e\u9a8c\u4e2d\uff0cTDDev \u76f8\u6bd4\u5f53\u524d\u6700\u4f18\u57fa\u7ebf\u65b9\u6cd5\u6574\u4f53\u51c6\u786e\u7387\u63d0\u5347 14.4%\uff0c\u80fd\u81ea\u52a8\u751f\u6210\u53ef\u9760\u3001\u9ad8\u8d28\u91cf\u7684\u5168\u6808 Web \u5e94\u7528\u3002", "conclusion": "TDDev \u6709\u6548\u89e3\u51b3\u4e86\u5168\u6808\u5e94\u7528\u81ea\u52a8\u5316\u4e2d\u7684\u5173\u952e\u6311\u6218\uff0c\u5982\u9700\u6c42\u6a21\u7cca\u3001\u591a\u6587\u4ef6\u4f9d\u8d56\u3001\u529f\u80fd\u6b63\u786e\u6027\u4e0e\u89c6\u89c9\u4fdd\u771f\u5ea6\u517c\u987e\uff0c\u5b9e\u73b0\u4e86\u65e0\u9700\u4eba\u5de5\u5e72\u9884\u7684\u7aef\u5230\u7aef\u5f00\u53d1\u3002"}}
{"id": "2509.25378", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25378", "abs": "https://arxiv.org/abs/2509.25378", "authors": ["Akalanka Galappaththi", "Francisco Ribeiro", "Sarah Nadi"], "title": "Detecting and Fixing API Misuses of Data Science Libraries Using Large Language Models", "comment": "10 pages, 3 figures, accepted in CASCON 25", "summary": "Data science libraries, such as scikit-learn and pandas, specialize in\nprocessing and manipulating data. The data-centric nature of these libraries\nmakes the detection of API misuse in them more challenging. This paper\nintroduces DSCHECKER, an LLM-based approach designed for detecting and fixing\nAPI misuses of data science libraries. We identify two key pieces of\ninformation, API directives and data information, that may be beneficial for\nAPI misuse detection and fixing. Using three LLMs and misuses from five data\nscience libraries, we experiment with various prompts. We find that\nincorporating API directives and data-specific details enhances Dschecker's\nability to detect and fix API misuses, with the best-performing model achieving\na detection F1-score of 61.18 percent and fixing 51.28 percent of the misuses.\nBuilding on these results, we implement Dschecker agent which includes an\nadaptive function calling mechanism to access information on demand, simulating\na real-world setting where information about the misuse is unknown in advance.\nWe find that Dschecker agent achieves 48.65 percent detection F1-score and\nfixes 39.47 percent of the misuses, demonstrating the promise of LLM-based API\nmisuse detection and fixing in real-world scenarios.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa DSCHECKER\uff0c\u4e00\u79cd\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u4fee\u590d\u6570\u636e\u79d1\u5b66\u5e93\u4e2d\u7684 API \u8bef\u7528\u3002\u901a\u8fc7\u5f15\u5165 API \u6307\u4ee4\u548c\u6570\u636e\u4fe1\u606f\uff0cDSCHECKER \u5728\u5b9e\u9a8c\u4e2d\u5b9e\u73b0\u4e86\u6700\u9ad8 61.18% \u7684\u68c0\u6d4b F1 \u5206\u6570\u548c 51.28% \u7684\u4fee\u590d\u7387\uff1b\u5176\u6539\u8fdb\u7248 DSCHECKER Agent \u5728\u66f4\u8d34\u8fd1\u73b0\u5b9e\u7684\u8bbe\u5b9a\u4e0b\u4ecd\u8fbe\u5230 48.65% \u7684\u68c0\u6d4b F1 \u5206\u6570\u548c 39.47% \u7684\u4fee\u590d\u7387\u3002", "motivation": "\u6570\u636e\u79d1\u5b66\u5e93\uff08\u5982 scikit-learn \u548c pandas\uff09\u56e0\u5176\u6570\u636e\u5bc6\u96c6\u578b\u7279\u6027\uff0c\u4f7f\u5f97 API \u8bef\u7528\u7684\u68c0\u6d4b\u66f4\u5177\u6311\u6218\u6027\uff0c\u4e9f\u9700\u6709\u6548\u65b9\u6cd5\u81ea\u52a8\u8bc6\u522b\u548c\u4fee\u590d\u6b64\u7c7b\u95ee\u9898\u3002", "method": "\u63d0\u51fa DSCHECKER\uff0c\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\u7ed3\u5408 API \u6307\u4ee4\u548c\u6570\u636e\u4fe1\u606f\u8fdb\u884c API \u8bef\u7528\u68c0\u6d4b\u4e0e\u4fee\u590d\uff0c\u5e76\u8fdb\u4e00\u6b65\u5f00\u53d1 DSCHECKER Agent\uff0c\u5f15\u5165\u81ea\u9002\u5e94\u51fd\u6570\u8c03\u7528\u673a\u5236\u4ee5\u5728\u4fe1\u606f\u672a\u77e5\u7684\u771f\u5b9e\u573a\u666f\u4e2d\u6309\u9700\u83b7\u53d6\u4e0a\u4e0b\u6587\u3002", "result": "\u5728\u4e94\u4e2a\u6570\u636e\u79d1\u5b66\u5e93\u7684\u8bef\u7528\u6570\u636e\u96c6\u4e0a\uff0cDSCHECKER \u6700\u4f73\u6a21\u578b\u8fbe\u5230 61.18% \u7684\u68c0\u6d4b F1 \u5206\u6570\u548c 51.28% \u7684\u4fee\u590d\u7387\uff1bDSCHECKER Agent \u5728\u6a21\u62df\u771f\u5b9e\u573a\u666f\u4e0b\u4ecd\u53d6\u5f97 48.65% \u7684\u68c0\u6d4b F1 \u5206\u6570\u548c 39.47% \u7684\u4fee\u590d\u7387\u3002", "conclusion": "\u7ed3\u5408 API \u6307\u4ee4\u4e0e\u6570\u636e\u4fe1\u606f\u7684\u5927\u8bed\u8a00\u6a21\u578b\u65b9\u6cd5\u5728\u68c0\u6d4b\u548c\u4fee\u590d\u6570\u636e\u79d1\u5b66\u5e93 API \u8bef\u7528\u65b9\u9762\u5177\u6709\u663e\u8457\u6f5c\u529b\uff0c\u5c24\u5176\u5728\u8d34\u8fd1\u5b9e\u9645\u5e94\u7528\u7684\u52a8\u6001\u4fe1\u606f\u83b7\u53d6\u573a\u666f\u4e2d\u4ecd\u8868\u73b0\u826f\u597d\u3002"}}
{"id": "2509.25397", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.25397", "abs": "https://arxiv.org/abs/2509.25397", "authors": ["Johan Lin\u00e5ker", "Cailean Osborne", "Jennifer Ding", "Ben Burtenshaw"], "title": "A Cartography of Open Collaboration in Open Source AI: Mapping Practices, Motivations, and Governance in 14 Open Large Language Model Projects", "comment": "In submission", "summary": "The proliferation of open large language models (LLMs) is fostering a vibrant\necosystem of research and innovation in artificial intelligence (AI). However,\nthe methods of collaboration used to develop open LLMs both before and after\ntheir public release have not yet been comprehensively studied, limiting our\nunderstanding of how open LLM projects are initiated, organized, and governed\nas well as what opportunities there are to foster this ecosystem even further.\nWe address this gap through an exploratory analysis of open collaboration\nthroughout the development and reuse lifecycle of open LLMs, drawing on\nsemi-structured interviews with the developers of 14 open LLMs from grassroots\nprojects, research institutes, startups, and Big Tech companies in North\nAmerica, Europe, Africa, and Asia. We make three key contributions to research\nand practice. First, collaboration in open LLM projects extends far beyond the\nLLMs themselves, encompassing datasets, benchmarks, open source frameworks,\nleaderboards, knowledge sharing and discussion forums, and compute\npartnerships, among others. Second, open LLM developers have a variety of\nsocial, economic, and technological motivations, from democratizing AI access\nand promoting open science to building regional ecosystems and expanding\nlanguage representation. Third, the sampled open LLM projects exhibit five\ndistinct organizational models, ranging from single company projects to\nnon-profit-sponsored grassroots projects, which vary in their centralization of\ncontrol and community engagement strategies used throughout the open LLM\nlifecycle. We conclude with practical recommendations for stakeholders seeking\nto support the global community building a more open future for AI.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u8bbf\u8c0814\u4e2a\u5f00\u6e90\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u9879\u76ee\u7684\u5f00\u53d1\u8005\uff0c\u63a2\u7d22\u4e86\u5f00\u6e90LLM\u5f00\u53d1\u4e0e\u590d\u7528\u5168\u5468\u671f\u4e2d\u7684\u534f\u4f5c\u6a21\u5f0f\uff0c\u63ed\u793a\u4e86\u534f\u4f5c\u8303\u56f4\u3001\u5f00\u53d1\u8005\u52a8\u673a\u548c\u7ec4\u7ec7\u6a21\u578b\u7684\u591a\u6837\u6027\uff0c\u5e76\u63d0\u51fa\u652f\u6301\u5f00\u6e90AI\u751f\u6001\u53d1\u5c55\u7684\u5b9e\u8df5\u5efa\u8bae\u3002", "motivation": "\u5f53\u524d\u5bf9\u5f00\u6e90\u5927\u8bed\u8a00\u6a21\u578b\u5728\u53d1\u5e03\u524d\u540e\u6240\u91c7\u7528\u7684\u534f\u4f5c\u65b9\u5f0f\u7f3a\u4e4f\u7cfb\u7edf\u7814\u7a76\uff0c\u9650\u5236\u4e86\u6211\u4eec\u5bf9\u5176\u9879\u76ee\u542f\u52a8\u3001\u7ec4\u7ec7\u4e0e\u6cbb\u7406\u673a\u5236\u7684\u7406\u89e3\uff0c\u4e5f\u963b\u788d\u4e86\u8fdb\u4e00\u6b65\u4fc3\u8fdb\u8be5\u751f\u6001\u7cfb\u7edf\u53d1\u5c55\u7684\u673a\u4f1a\u8bc6\u522b\u3002", "method": "\u91c7\u7528\u63a2\u7d22\u6027\u5206\u6790\u65b9\u6cd5\uff0c\u5bf9\u6765\u81ea\u5317\u7f8e\u3001\u6b27\u6d32\u3001\u975e\u6d32\u548c\u4e9a\u6d32\u7684\u8349\u6839\u9879\u76ee\u3001\u7814\u7a76\u673a\u6784\u3001\u521d\u521b\u516c\u53f8\u548c\u5927\u578b\u79d1\u6280\u516c\u53f8\u768414\u4e2a\u5f00\u6e90LLM\u9879\u76ee\u7684\u5f00\u53d1\u8005\u8fdb\u884c\u534a\u7ed3\u6784\u5316\u8bbf\u8c08\u3002", "result": "\u7814\u7a76\u53d1\u73b0\uff1a\uff081\uff09\u5f00\u6e90LLM\u9879\u76ee\u7684\u534f\u4f5c\u8fdc\u8d85\u6a21\u578b\u672c\u8eab\uff0c\u6db5\u76d6\u6570\u636e\u96c6\u3001\u57fa\u51c6\u3001\u5f00\u6e90\u6846\u67b6\u7b49\u591a\u4e2a\u65b9\u9762\uff1b\uff082\uff09\u5f00\u53d1\u8005\u5177\u6709\u793e\u4f1a\u3001\u7ecf\u6d4e\u548c\u6280\u672f\u7b49\u591a\u91cd\u52a8\u673a\uff1b\uff083\uff09\u9879\u76ee\u5448\u73b0\u51fa\u4e94\u79cd\u4e0d\u540c\u7684\u7ec4\u7ec7\u6a21\u578b\uff0c\u5176\u63a7\u5236\u96c6\u4e2d\u5ea6\u548c\u793e\u533a\u53c2\u4e0e\u7b56\u7565\u5404\u4e0d\u76f8\u540c\u3002", "conclusion": "\u4e3a\u5e0c\u671b\u652f\u6301\u5168\u7403\u5f00\u6e90AI\u793e\u533a\u53d1\u5c55\u7684\u5229\u76ca\u76f8\u5173\u8005\u63d0\u4f9b\u4e86\u5b9e\u8df5\u5efa\u8bae\uff0c\u4ee5\u63a8\u52a8\u66f4\u5f00\u653e\u7684AI\u672a\u6765\u3002"}}
{"id": "2509.25455", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.25455", "abs": "https://arxiv.org/abs/2509.25455", "authors": ["Alexander Kovrigin", "Aleksandra Eliseeva", "Konstantin Grotov", "Egor Bogomolov", "Yaroslav Zharov"], "title": "PIPer: On-Device Environment Setup via Online Reinforcement Learning", "comment": "Under review", "summary": "Environment setup-the process of configuring the system to work with a\nspecific software project-represents a persistent challenge in Software\nEngineering (SE). Automated environment setup methods could assist developers\nby providing fully configured environments for arbitrary repositories without\nmanual effort. This also helps SE researchers to scale execution-based\nbenchmarks. However, recent studies reveal that even state-of-the-art Large\nLanguage Models (LLMs) achieve limited success in automating this task. To\naddress this limitation, we tune a specialized model for environment setup. We\ncombine supervised fine-tuning for generating correct Bash scripts and\nReinforcement Learning with Verifiable Rewards (RLVR) to adapt it to the task\nof environment setup. On EnvBench-Python, our method enables Qwen3-8B (a model\nrunnable on consumer hardware) to perform on par with larger models-Qwen3-32B\nand GPT-4o. The training code and model checkpoints are available online:\nhttps://github.com/JetBrains-Research/PIPer.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u76d1\u7763\u5fae\u8c03\u548c\u57fa\u4e8e\u53ef\u9a8c\u8bc1\u5956\u52b1\u7684\u5f3a\u5316\u5b66\u4e60\uff08RLVR\uff09\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u5fae\u8c03\u4e13\u95e8\u7684\u6a21\u578b\u4ee5\u81ea\u52a8\u5316\u8f6f\u4ef6\u9879\u76ee\u7684\u73af\u5883\u914d\u7f6e\u4efb\u52a1\u3002\u8be5\u65b9\u6cd5\u4f7fQwen3-8B\u5728EnvBench-Python\u57fa\u51c6\u4e0a\u8fbe\u5230\u4e86\u4e0e\u66f4\u5927\u6a21\u578b\uff08\u5982Qwen3-32B\u548cGPT-4o\uff09\u76f8\u5f53\u7684\u6027\u80fd\u3002", "motivation": "\u73af\u5883\u914d\u7f6e\u662f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u4e00\u4e2a\u957f\u671f\u6311\u6218\uff0c\u5c3d\u7ba1\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5df2\u6709\u8fdb\u5c55\uff0c\u4f46\u5728\u81ea\u52a8\u5316\u8be5\u4efb\u52a1\u4e0a\u8868\u73b0\u4ecd\u6709\u9650\u3002\u56e0\u6b64\uff0c\u4f5c\u8005\u5e0c\u671b\u5f00\u53d1\u4e00\u4e2a\u4e13\u95e8\u9488\u5bf9\u73af\u5883\u914d\u7f6e\u4efb\u52a1\u4f18\u5316\u7684\u6a21\u578b\uff0c\u4ee5\u63d0\u5347\u81ea\u52a8\u5316\u914d\u7f6e\u7684\u6210\u529f\u7387\uff0c\u5e76\u652f\u6301\u5f00\u53d1\u8005\u548c\u7814\u7a76\u4eba\u5458\u66f4\u9ad8\u6548\u5730\u5f00\u5c55\u5de5\u4f5c\u3002", "method": "\u4f5c\u8005\u7ed3\u5408\u76d1\u7763\u5fae\u8c03\uff08\u7528\u4e8e\u751f\u6210\u6b63\u786e\u7684Bash\u811a\u672c\uff09\u548c\u5f3a\u5316\u5b66\u4e60\u4e0e\u53ef\u9a8c\u8bc1\u5956\u52b1\uff08RLVR\uff09\u6765\u5fae\u8c03\u4e00\u4e2a\u4e13\u7528\u6a21\u578b\uff0c\u4f7f\u5176\u9002\u5e94\u73af\u5883\u914d\u7f6e\u4efb\u52a1\u3002", "result": "\u5728EnvBench-Python\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u7ecf\u8be5\u65b9\u6cd5\u5fae\u8c03\u540e\u7684Qwen3-8B\u6a21\u578b\u6027\u80fd\u4e0e\u66f4\u5927\u7684Qwen3-32B\u548cGPT-4o\u6a21\u578b\u76f8\u5f53\uff0c\u4e14\u53ef\u5728\u6d88\u8d39\u7ea7\u786c\u4ef6\u4e0a\u8fd0\u884c\u3002", "conclusion": "\u901a\u8fc7\u7ed3\u5408\u76d1\u7763\u5fae\u8c03\u4e0eRLVR\uff0c\u53ef\u4ee5\u6709\u6548\u63d0\u5347\u8f83\u5c0f\u89c4\u6a21\u8bed\u8a00\u6a21\u578b\u5728\u73af\u5883\u914d\u7f6e\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\uff0c\u4f7f\u5176\u8fbe\u5230\u4e0e\u5927\u578b\u6a21\u578b\u76f8\u5f53\u7684\u6c34\u5e73\uff0c\u4e3a\u81ea\u52a8\u5316\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\u63d0\u4f9b\u4e86\u9ad8\u6548\u53ef\u884c\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.25465", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25465", "abs": "https://arxiv.org/abs/2509.25465", "authors": ["Yinghang Ma", "Jiho Shin", "Leuson Da Silva", "Zhen Ming", "Jiang", "Song Wang", "Foutse Khomh", "Shin Hwei Tan"], "title": "BloomAPR: A Bloom's Taxonomy-based Framework for Assessing the Capabilities of LLM-Powered APR Solutions", "comment": "22 pages, 7 figures, Manuscript submitted to ACM Transactions on\n  Software Engineering and Methodology", "summary": "Recent advances in large language models (LLMs) have accelerated the\ndevelopment of AI-driven automated program repair (APR) solutions. However,\nthese solutions are typically evaluated using static benchmarks such as\nDefects4J and SWE-bench, which suffer from two key limitations: (1) the risk of\ndata contamination, potentially inflating evaluation results due to overlap\nwith LLM training data, and (2) limited ability to assess the APR capabilities\nin dynamic and diverse contexts. In this paper, we introduced BloomAPR, a novel\ndynamic evaluation framework grounded in Bloom's Taxonomy. Our framework offers\na structured approach to assess the cognitive capabilities of LLM-powered APR\nsolutions across progressively complex reasoning levels. Using Defects4J as a\ncase study, we evaluated two state-of-the-art LLM-powered APR solutions,\nChatRepair and CigaR, under three different LLMs: GPT-3.5-Turbo, Llama-3.1, and\nStarCoder-2. Our findings show that while these solutions exhibit basic\nreasoning skills and effectively memorize bug-fixing patterns (fixing up to\n81.57% of bugs at the Remember layer), their performance increases with\nsynthetically generated bugs (up to 60.66% increase at the Understand layer).\nHowever, they perform worse on minor syntactic changes (fixing up to 43.32% at\nthe Apply layer), and they struggle to repair similar bugs when injected into\nreal-world projects (solving only 13.46% to 41.34% bugs at the Analyze layer).\nThese results underscore the urgent need for evolving benchmarks and provide a\nfoundation for more trustworthy evaluation of LLM-powered software engineering\nsolutions.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faBloomAPR\uff0c\u4e00\u79cd\u57fa\u4e8e\u5e03\u9c81\u59c6\u5206\u7c7b\u6cd5\u7684\u52a8\u6001\u8bc4\u4f30\u6846\u67b6\uff0c\u7528\u4e8e\u66f4\u5168\u9762\u5730\u8bc4\u4f30\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u9a71\u52a8\u7684\u81ea\u52a8\u7a0b\u5e8f\u4fee\u590d\uff08APR\uff09\u7cfb\u7edf\u5728\u4e0d\u540c\u8ba4\u77e5\u5c42\u6b21\u4e0a\u7684\u80fd\u529b\uff0c\u5e76\u63ed\u793a\u73b0\u6709APR\u65b9\u6cd5\u5728\u590d\u6742\u548c\u771f\u5b9e\u573a\u666f\u4e2d\u7684\u5c40\u9650\u6027\u3002", "motivation": "\u73b0\u6709LLM\u9a71\u52a8\u7684APR\u7cfb\u7edf\u901a\u5e38\u5728\u9759\u6001\u57fa\u51c6\uff08\u5982Defects4J\u548cSWE-bench\uff09\u4e0a\u8bc4\u4f30\uff0c\u5b58\u5728\u8bad\u7ec3\u6570\u636e\u6c61\u67d3\u98ce\u9669\u4e14\u96be\u4ee5\u8bc4\u4f30\u5176\u5728\u52a8\u6001\u591a\u6837\u73af\u5883\u4e2d\u7684\u4fee\u590d\u80fd\u529b\u3002", "method": "\u63d0\u51faBloomAPR\u52a8\u6001\u8bc4\u4f30\u6846\u67b6\uff0c\u57fa\u4e8e\u5e03\u9c81\u59c6\u5206\u7c7b\u6cd5\u6784\u5efa\u4e0d\u540c\u8ba4\u77e5\u5c42\u6b21\u7684\u6d4b\u8bd5\u573a\u666f\uff0c\u5e76\u4ee5Defects4J\u4e3a\u6848\u4f8b\uff0c\u8bc4\u4f30ChatRepair\u548cCigaR\u5728GPT-3.5-Turbo\u3001Llama-3.1\u548cStarCoder-2\u4e09\u79cdLLM\u4e0a\u7684\u8868\u73b0\u3002", "result": "LLM\u9a71\u52a8\u7684APR\u7cfb\u7edf\u5728\u8bb0\u5fc6\u5c42\uff08Remember\uff09\u8868\u73b0\u6700\u4f73\uff08\u6700\u9ad8\u4fee\u590d81.57%\u7684bug\uff09\uff0c\u5728\u7406\u89e3\u5c42\uff08Understand\uff09\u9762\u5bf9\u5408\u6210bug\u65f6\u6027\u80fd\u63d0\u5347\u663e\u8457\uff08\u6700\u591a\u63d0\u534760.66%\uff09\uff0c\u4f46\u5728\u5e94\u7528\u5c42\uff08Apply\uff09\u5bf9\u5fae\u5c0f\u8bed\u6cd5\u53d8\u5316\u4fee\u590d\u80fd\u529b\u4e0b\u964d\uff08\u4ec543.32%\uff09\uff0c\u5728\u5206\u6790\u5c42\uff08Analyze\uff09\u9762\u5bf9\u771f\u5b9e\u9879\u76ee\u4e2d\u6ce8\u5165\u7684\u76f8\u4f3cbug\u65f6\u8868\u73b0\u6700\u5dee\uff08\u4ec5\u4fee\u590d13.46%\u81f341.34%\uff09\u3002", "conclusion": "\u5f53\u524dLLM\u9a71\u52a8\u7684APR\u7cfb\u7edf\u5728\u590d\u6742\u548c\u771f\u5b9e\u573a\u666f\u4e2d\u80fd\u529b\u6709\u9650\uff0c\u4e9f\u9700\u53d1\u5c55\u66f4\u52a8\u6001\u3001\u591a\u7ef4\u7684\u8bc4\u4f30\u57fa\u51c6\uff0cBloomAPR\u4e3a\u6b64\u63d0\u4f9b\u4e86\u53ef\u4fe1\u8bc4\u4f30\u7684\u57fa\u7840\u3002"}}
{"id": "2509.25514", "categories": ["cs.SE", "cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.25514", "abs": "https://arxiv.org/abs/2509.25514", "authors": ["Yonatan Gizachew Achamyeleh", "Tongtao Zhang", "Joshua Hyunki Kim", "Gabriel Garcia", "Shih-Yuan Yu", "Anton Kocheturov", "Mohammad Abdullah Al Faruque"], "title": "AGNOMIN -- Architecture Agnostic Multi-Label Function Name Prediction", "comment": null, "summary": "Function name prediction is crucial for understanding stripped binaries in\nsoftware reverse engineering, a key step for \\textbf{enabling subsequent\nvulnerability analysis and patching}. However, existing approaches often\nstruggle with architecture-specific limitations, data scarcity, and diverse\nnaming conventions. We present AGNOMIN, a novel architecture-agnostic approach\nfor multi-label function name prediction in stripped binaries. AGNOMIN builds\nFeature-Enriched Hierarchical Graphs (FEHGs), combining Control Flow Graphs,\nFunction Call Graphs, and dynamically learned \\texttt{PCode} features. A\nhierarchical graph neural network processes this enriched structure to generate\nconsistent function representations across architectures, vital for\n\\textbf{scalable security assessments}. For function name prediction, AGNOMIN\nemploys a Ren\\'ee-inspired decoder, enhanced with an attention-based head layer\nand algorithmic improvements.\n  We evaluate AGNOMIN on a comprehensive dataset of 9,000 ELF executable\nbinaries across three architectures, demonstrating its superior performance\ncompared to state-of-the-art approaches, with improvements of up to 27.17\\% in\nprecision and 55.86\\% in recall across the testing dataset. Moreover, AGNOMIN\ngeneralizes well to unseen architectures, achieving 5.89\\% higher recall than\nthe closest baseline. AGNOMIN's practical utility has been validated through\nsecurity hackathons, where it successfully aided reverse engineers in analyzing\nand patching vulnerable binaries across different architectures.", "AI": {"tldr": "AGNOMIN\u662f\u4e00\u79cd\u65b0\u9896\u7684\u3001\u4e0e\u67b6\u6784\u65e0\u5173\u7684\u591a\u6807\u7b7e\u51fd\u6570\u540d\u9884\u6d4b\u65b9\u6cd5\uff0c\u901a\u8fc7\u6784\u5efa\u7279\u5f81\u589e\u5f3a\u7684\u5c42\u6b21\u56fe\uff08FEHG\uff09\u5e76\u7ed3\u5408\u5c42\u6b21\u5316\u56fe\u795e\u7ecf\u7f51\u7edc\u4e0e\u6539\u8fdb\u7684\u89e3\u7801\u5668\uff0c\u5728\u591a\u79cd\u67b6\u6784\u7684\u5265\u79bb\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "motivation": "\u73b0\u6709\u51fd\u6570\u540d\u9884\u6d4b\u65b9\u6cd5\u53d7\u9650\u4e8e\u67b6\u6784\u7279\u5b9a\u6027\u3001\u6570\u636e\u7a00\u7f3a\u6027\u548c\u547d\u540d\u89c4\u8303\u591a\u6837\u6027\uff0c\u96be\u4ee5\u652f\u6301\u8de8\u67b6\u6784\u7684\u53ef\u6269\u5c55\u5b89\u5168\u8bc4\u4f30\uff0c\u5c24\u5176\u5728\u6f0f\u6d1e\u5206\u6790\u4e0e\u4fee\u8865\u7b49\u9006\u5411\u5de5\u7a0b\u4efb\u52a1\u4e2d\u8868\u73b0\u4e0d\u8db3\u3002", "method": "AGNOMIN\u6784\u5efa\u878d\u5408\u63a7\u5236\u6d41\u56fe\u3001\u51fd\u6570\u8c03\u7528\u56fe\u548c\u52a8\u6001\u5b66\u4e60\u7684PCode\u7279\u5f81\u7684\u7279\u5f81\u589e\u5f3a\u5c42\u6b21\u56fe\uff08FEHG\uff09\uff0c\u5e76\u901a\u8fc7\u5c42\u6b21\u5316\u56fe\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u8de8\u67b6\u6784\u4e00\u81f4\u7684\u51fd\u6570\u8868\u793a\uff0c\u518d\u5229\u7528\u6539\u8fdb\u7684Ren\\'ee\u542f\u53d1\u5f0f\u89e3\u7801\u5668\uff08\u542b\u6ce8\u610f\u529b\u5934\u5c42\u548c\u7b97\u6cd5\u4f18\u5316\uff09\u8fdb\u884c\u591a\u6807\u7b7e\u51fd\u6570\u540d\u9884\u6d4b\u3002", "result": "\u5728\u6db5\u76d6\u4e09\u79cd\u67b6\u6784\u76849,000\u4e2aELF\u4e8c\u8fdb\u5236\u6587\u4ef6\u6570\u636e\u96c6\u4e0a\uff0cAGNOMIN\u76f8\u8f83\u6700\u5148\u8fdb\u65b9\u6cd5\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6700\u9ad8\u63d0\u534727.17%\u7684\u7cbe\u786e\u7387\u548c55.86%\u7684\u53ec\u56de\u7387\uff1b\u5728\u672a\u89c1\u67b6\u6784\u4e0a\u53ec\u56de\u7387\u9ad8\u51fa\u57fa\u7ebf5.89%\uff0c\u5e76\u5728\u5b89\u5168\u9ed1\u5ba2\u677e\u4e2d\u6210\u529f\u8f85\u52a9\u8de8\u67b6\u6784\u6f0f\u6d1e\u5206\u6790\u4e0e\u4fee\u8865\u3002", "conclusion": "AGNOMIN\u6709\u6548\u89e3\u51b3\u4e86\u8de8\u67b6\u6784\u51fd\u6570\u540d\u9884\u6d4b\u7684\u6311\u6218\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5265\u79bb\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u51fd\u6570\u8bed\u4e49\u7406\u89e3\u7684\u51c6\u786e\u6027\u4e0e\u6cdb\u5316\u80fd\u529b\uff0c\u4e3a\u53ef\u6269\u5c55\u7684\u4e8c\u8fdb\u5236\u5b89\u5168\u5206\u6790\u63d0\u4f9b\u4e86\u5b9e\u7528\u5de5\u5177\u3002"}}
{"id": "2509.25625", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25625", "abs": "https://arxiv.org/abs/2509.25625", "authors": ["Luiza Martins de Freitas Cintra", "Philipp Zech", "Mohamad Kassab", "Eliomar Ara\u00fajo Lima", "Sofia Larissa da Costa Paiva", "Valdemar Vicente Graciano Neto"], "title": "M&SCheck: Towards a Checklist to Support Software Engineering Newcomers to the Modeling and Simulation Area", "comment": null, "summary": "The advent of increasingly complex and dynamic ecosystems, such as digital\ntwins (DT), smart cities and Industry 4.0 and 5.0, has made evident the need to\ninclude modeling and simulation (M&S) in the software development life cycle.\nSuch disruptive systems include simulation models in their own architecture\n(such as DT) or require the use of simulation models to represent the high\ndegree of movement and the multiplicity of interactions that occur between the\ninvolved systems. However, when software engineers (particularly the newcomers)\nneed to use M&S in their projects, they often pose themselves an important\nquestion: which formalism should I use? In this direction, the main\ncontribution of this paper is the establishment of a preliminary checklist with\nquestions to assist beginners in M&S in choosing the most appropriate paradigm\nto solve their problems. The checklist is based on three main formalisms: DEVS,\nSystem Dynamics and Agent-Based Simulation. A pilot study was carried out and\nan expert was consulted. The preliminary results show (i) conformance between\nthe suggestion given by the checklist and the formalism selected in the\noriginal studies used as input for evaluating the checklist, and (ii) a\npositive feedback from the expert.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e00\u4e2a\u521d\u6b65\u68c0\u67e5\u6e05\u5355\uff0c\u5e2e\u52a9\u8f6f\u4ef6\u5de5\u7a0b\u521d\u5b66\u8005\u5728\u5efa\u6a21\u4e0e\u4eff\u771f\uff08M&S\uff09\u4e2d\u9009\u62e9\u5408\u9002\u7684\u4eff\u771f\u8303\u5f0f\uff08DEVS\u3001\u7cfb\u7edf\u52a8\u529b\u5b66\u3001\u57fa\u4e8e\u4ee3\u7406\u7684\u4eff\u771f\uff09\uff0c\u5e76\u901a\u8fc7\u8bd5\u70b9\u7814\u7a76\u548c\u4e13\u5bb6\u53cd\u9988\u9a8c\u8bc1\u5176\u6709\u6548\u6027\u3002", "motivation": "\u968f\u7740\u6570\u5b57\u5b6a\u751f\u3001\u667a\u6167\u57ce\u5e02\u548c\u5de5\u4e1a4.0/5.0\u7b49\u590d\u6742\u52a8\u6001\u7cfb\u7edf\u7684\u5174\u8d77\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u8d8a\u6765\u8d8a\u9700\u8981\u96c6\u6210\u5efa\u6a21\u4e0e\u4eff\u771f\uff08M&S\uff09\u3002\u7136\u800c\uff0c\u521d\u5b66\u8005\u5728\u9762\u5bf9\u591a\u79cd\u4eff\u771f\u5f62\u5f0f\u5316\u65b9\u6cd5\u65f6\u5e38\u5e38\u96be\u4ee5\u6289\u62e9\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u6307\u5bfc\u5de5\u5177\u6765\u8f85\u52a9\u9009\u62e9\u5408\u9002\u7684\u8303\u5f0f\u3002", "method": "\u4f5c\u8005\u57fa\u4e8e\u4e09\u79cd\u4e3b\u6d41\u4eff\u771f\u5f62\u5f0f\u5316\u65b9\u6cd5\uff08DEVS\u3001\u7cfb\u7edf\u52a8\u529b\u5b66\u548c\u57fa\u4e8e\u4ee3\u7406\u7684\u4eff\u771f\uff09\u6784\u5efa\u4e86\u4e00\u4e2a\u521d\u6b65\u7684\u51b3\u7b56\u68c0\u67e5\u6e05\u5355\uff0c\u5e76\u901a\u8fc7\u8bd5\u70b9\u7814\u7a76\u548c\u4e13\u5bb6\u54a8\u8be2\u5bf9\u6e05\u5355\u8fdb\u884c\u8bc4\u4f30\u3002", "result": "\u8bd5\u70b9\u7814\u7a76\u7ed3\u679c\u663e\u793a\uff1a(i) \u68c0\u67e5\u6e05\u5355\u63a8\u8350\u7684\u8303\u5f0f\u4e0e\u539f\u59cb\u7814\u7a76\u4e2d\u5b9e\u9645\u9009\u7528\u7684\u8303\u5f0f\u4e00\u81f4\uff1b(ii) \u4e13\u5bb6\u5bf9\u6e05\u5355\u7ed9\u4e88\u79ef\u6781\u53cd\u9988\u3002", "conclusion": "\u8be5\u68c0\u67e5\u6e05\u5355\u80fd\u6709\u6548\u8f85\u52a9M&S\u521d\u5b66\u8005\u9009\u62e9\u5408\u9002\u7684\u4eff\u771f\u8303\u5f0f\uff0c\u4e3a\u5c06M&S\u66f4\u987a\u7545\u5730\u96c6\u6210\u5230\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\u4e2d\u63d0\u4f9b\u4e86\u5b9e\u7528\u5de5\u5177\u3002"}}
{"id": "2509.25676", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25676", "abs": "https://arxiv.org/abs/2509.25676", "authors": ["Fang Liu", "Tianze Wang", "Li Zhang", "Zheyu Yang", "Jing Jiang", "Zian Sun"], "title": "Explainable Fault Localization for Programming Assignments via LLM-Guided Annotation", "comment": "Accepted by ASE'2025", "summary": "Providing timely and personalized guidance for students' programming\nassignments, offers significant practical value for helping students complete\nassignments and enhance their learning. In recent years, various automated\nFault Localization (FL) techniques have demonstrated promising results in\nidentifying errors in programs. However, existing FL techniques face challenges\nwhen applied to educational contexts. Most approaches operate at the method\nlevel without explanatory feedback, resulting in granularity too coarse for\nstudents who need actionable insights to identify and fix their errors. While\nsome approaches attempt line-level fault localization, they often depend on\npredicting line numbers directly in numerical form, which is ill-suited to\nLLMs. To address these challenges, we propose FLAME, a fine-grained,\nexplainable Fault Localization method tailored for programming assignments via\nLLM-guided Annotation and Model Ensemble. FLAME leverages rich contextual\ninformation specific to programming assignments to guide LLMs in identifying\nfaulty code lines. Instead of directly predicting line numbers, we prompt the\nLLM to annotate faulty code lines with detailed explanations, enhancing both\nlocalization accuracy and educational value. To further improve reliability, we\nintroduce a weighted multi-model voting strategy that aggregates results from\nmultiple LLMs to determine the suspiciousness of each code line. Extensive\nexperimental results demonstrate that FLAME outperforms state-of-the-art fault\nlocalization baselines on programming assignments, successfully localizing 207\nmore faults at top-1 over the best-performing baseline. Beyond educational\ncontexts, FLAME also generalizes effectively to general-purpose software\ncodebases, outperforming all baselines on the Defects4J benchmark.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faFLAME\uff0c\u4e00\u79cd\u9762\u5411\u7f16\u7a0b\u4f5c\u4e1a\u7684\u7ec6\u7c92\u5ea6\u3001\u53ef\u89e3\u91ca\u7684\u9519\u8bef\u5b9a\u4f4d\u65b9\u6cd5\uff0c\u901a\u8fc7LLM\u5f15\u5bfc\u6807\u6ce8\u4e0e\u591a\u6a21\u578b\u96c6\u6210\uff0c\u5728\u6559\u80b2\u573a\u666f\u548c\u901a\u7528\u4ee3\u7801\u5e93\u4e2d\u5747\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "motivation": "\u73b0\u6709\u81ea\u52a8\u9519\u8bef\u5b9a\u4f4d\uff08FL\uff09\u6280\u672f\u5728\u6559\u80b2\u573a\u666f\u4e2d\u5b58\u5728\u7c92\u5ea6\u592a\u7c97\u6216\u4f9d\u8d56\u4e0d\u9002\u5408\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u6570\u503c\u9884\u6d4b\u65b9\u5f0f\uff0c\u96be\u4ee5\u63d0\u4f9b\u5b66\u751f\u6240\u9700\u7684\u53ef\u64cd\u4f5c\u53cd\u9988\u3002", "method": "FLAME\u5229\u7528\u7f16\u7a0b\u4f5c\u4e1a\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u5f15\u5bfcLLM\u5bf9\u9519\u8bef\u4ee3\u7801\u884c\u8fdb\u884c\u6807\u6ce8\u5e76\u63d0\u4f9b\u89e3\u91ca\uff0c\u800c\u975e\u76f4\u63a5\u9884\u6d4b\u884c\u53f7\uff1b\u540c\u65f6\u91c7\u7528\u52a0\u6743\u591a\u6a21\u578b\u6295\u7968\u7b56\u7565\u878d\u5408\u591a\u4e2aLLM\u7684\u7ed3\u679c\uff0c\u4ee5\u63d0\u5347\u5b9a\u4f4d\u53ef\u9760\u6027\u3002", "result": "\u5728\u7f16\u7a0b\u4f5c\u4e1a\u6570\u636e\u96c6\u4e0a\uff0cFLAME\u6bd4\u6700\u5f3a\u57fa\u7ebf\u5728Top-1\u5b9a\u4f4d\u4e2d\u591a\u6210\u529f\u5b9a\u4f4d207\u4e2a\u9519\u8bef\uff1b\u5728Defects4J\u901a\u7528\u8f6f\u4ef6\u7f3a\u9677\u57fa\u51c6\u4e0a\u4e5f\u5168\u9762\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "conclusion": "FLAME\u4e0d\u4ec5\u5728\u6559\u80b2\u573a\u666f\u4e2d\u6709\u6548\u63d0\u5347\u9519\u8bef\u5b9a\u4f4d\u7684\u51c6\u786e\u6027\u548c\u6559\u5b66\u4ef7\u503c\uff0c\u8fd8\u80fd\u5f88\u597d\u5730\u6cdb\u5316\u5230\u901a\u7528\u8f6f\u4ef6\u4ee3\u7801\u5e93\uff0c\u5177\u6709\u5e7f\u6cdb\u9002\u7528\u6027\u3002"}}
{"id": "2509.25716", "categories": ["cs.SE", "cs.AI", "cs.IR"], "pdf": "https://arxiv.org/pdf/2509.25716", "abs": "https://arxiv.org/abs/2509.25716", "authors": ["Esakkivel Esakkiraja", "Denis Akhiyarov", "Aditya Shanmugham", "Chitra Ganapathy"], "title": "DeepCodeSeek: Real-Time API Retrieval for Context-Aware Code Generation", "comment": "Retrieval-Augmented Generation, API Prediction, Context-Aware Code\n  Generation, Enterprise Code Completion, Reinforcement Learning, ServiceNow,\n  Real-Time Code Search, Query Enhancement, Fine-Tuning, Embedding, Reranker", "summary": "Current search techniques are limited to standard RAG query-document\napplications. In this paper, we propose a novel technique to expand the code\nand index for predicting the required APIs, directly enabling high-quality,\nend-to-end code generation for auto-completion and agentic AI applications. We\naddress the problem of API leaks in current code-to-code benchmark datasets by\nintroducing a new dataset built from real-world ServiceNow Script Includes that\ncapture the challenge of unclear API usage intent in the code. Our evaluation\nmetrics show that this method achieves 87.86% top-40 retrieval accuracy,\nallowing the critical context with APIs needed for successful downstream code\ngeneration. To enable real-time predictions, we develop a comprehensive\npost-training pipeline that optimizes a compact 0.6B reranker through synthetic\ndataset generation, supervised fine-tuning, and reinforcement learning. This\napproach enables our compact reranker to outperform a much larger 8B model\nwhile maintaining 2.5x reduced latency, effectively addressing the nuances of\nenterprise-specific code without the computational overhead of larger models.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u65b9\u6cd5\uff0c\u901a\u8fc7\u6269\u5c55\u4ee3\u7801\u7d22\u5f15\u4ee5\u9884\u6d4b\u6240\u9700API\uff0c\u4ece\u800c\u63d0\u5347\u7aef\u5230\u7aef\u4ee3\u7801\u751f\u6210\u8d28\u91cf\uff0c\u5e76\u6784\u5efa\u4e86\u4e00\u4e2a\u57fa\u4e8e\u771f\u5b9eServiceNow\u811a\u672c\u7684\u65b0\u6570\u636e\u96c6\u4ee5\u89e3\u51b3\u73b0\u6709\u57fa\u51c6\u4e2dAPI\u6cc4\u9732\u95ee\u9898\u3002\u8be5\u65b9\u6cd5\u5728\u68c0\u7d22\u51c6\u786e\u7387\u4e0a\u8fbe87.86%\uff0c\u5e76\u901a\u8fc7\u8f7b\u91cf\u7ea70.6B\u91cd\u6392\u6a21\u578b\u5728\u6027\u80fd\u4e0a\u8d85\u8d8a8B\u5927\u6a21\u578b\uff0c\u540c\u65f6\u964d\u4f4e2.5\u500d\u5ef6\u8fdf\u3002", "motivation": "\u73b0\u6709\u68c0\u7d22\u6280\u672f\u5c40\u9650\u4e8e\u6807\u51c6RAG\u67e5\u8be2-\u6587\u6863\u5e94\u7528\uff0c\u96be\u4ee5\u652f\u6301\u9ad8\u8d28\u91cf\u7aef\u5230\u7aef\u4ee3\u7801\u751f\u6210\uff1b\u540c\u65f6\u5f53\u524d\u4ee3\u7801\u5230\u4ee3\u7801\u7684\u57fa\u51c6\u6570\u636e\u96c6\u5b58\u5728API\u6cc4\u9732\u95ee\u9898\uff0c\u65e0\u6cd5\u771f\u5b9e\u53cd\u6620API\u4f7f\u7528\u610f\u56fe\u6a21\u7cca\u7684\u73b0\u5b9e\u6311\u6218\u3002", "method": "\u6784\u5efa\u57fa\u4e8e\u771f\u5b9eServiceNow Script Includes\u7684\u65b0\u6570\u636e\u96c6\uff0c\u8bbe\u8ba1\u7aef\u5230\u7aef\u4ee3\u7801\u751f\u6210\u6d41\u7a0b\uff0c\u5f00\u53d1\u5305\u542b\u5408\u6210\u6570\u636e\u751f\u6210\u3001\u76d1\u7763\u5fae\u8c03\u548c\u5f3a\u5316\u5b66\u4e60\u7684\u540e\u8bad\u7ec3\u6d41\u6c34\u7ebf\uff0c\u4f18\u5316\u4e00\u4e2a\u7d27\u51d1\u76840.6B\u91cd\u6392\u6a21\u578b\u3002", "result": "\u8be5\u65b9\u6cd5\u5728top-40\u68c0\u7d22\u51c6\u786e\u7387\u4e0a\u8fbe\u523087.86%\uff0c\u51760.6B\u91cd\u6392\u6a21\u578b\u5728\u6027\u80fd\u4e0a\u4f18\u4e8e8B\u5927\u6a21\u578b\uff0c\u540c\u65f6\u63a8\u7406\u5ef6\u8fdf\u964d\u4f4e2.5\u500d\u3002", "conclusion": "\u6240\u63d0\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u4f01\u4e1a\u7ea7\u4ee3\u7801\u4e2dAPI\u610f\u56fe\u6a21\u7cca\u7684\u95ee\u9898\uff0c\u5728\u4fdd\u8bc1\u4f4e\u8ba1\u7b97\u5f00\u9500\u7684\u540c\u65f6\u663e\u8457\u63d0\u5347\u4ee3\u7801\u751f\u6210\u6240\u9700\u7684\u4e0a\u4e0b\u6587\u68c0\u7d22\u8d28\u91cf\u3002"}}
{"id": "2509.25754", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25754", "abs": "https://arxiv.org/abs/2509.25754", "authors": ["Ajmain Inqiad Alam", "Palash Roy", "Farouq Al-omari", "Chanchal Roy", "Banani Roy", "Kevin Schneider"], "title": "Are Classical Clone Detectors Good Enough For the AI Era?", "comment": null, "summary": "The increasing adoption of AI-generated code has reshaped modern software\ndevelopment, introducing syntactic and semantic variations in cloned code.\nUnlike traditional human-written clones, AI-generated clones exhibit systematic\nsyntactic patterns and semantic differences learned from large-scale training\ndata. This shift presents new challenges for classical code clone detection\n(CCD) tools, which have historically been validated primarily on human-authored\ncodebases and optimized to detect syntactic (Type 1-3) and limited semantic\nclones. Given that AI-generated code can produce both syntactic and complex\nsemantic clones, it is essential to evaluate the effectiveness of classical CCD\ntools within this new paradigm. In this paper, we systematically evaluate nine\nwidely used CCD tools using GPTCloneBench, a benchmark containing\nGPT-3-generated clones. To contextualize and validate our results, we further\ntest these detectors on established human-authored benchmarks, BigCloneBench\nand SemanticCloneBench, to measure differences in performance between\ntraditional and AI-generated clones. Our analysis demonstrates that classical\nCCD tools, particularly those enhanced by effective normalization techniques,\nretain considerable effectiveness against AI-generated clones, while some\nexhibit notable performance variation compared to traditional benchmarks. This\npaper contributes by (1) evaluating classical CCD tools against AI-generated\nclones, providing critical insights into their current strengths and\nlimitations; (2) highlighting the role of normalization techniques in improving\ndetection accuracy; and (3) delivering detailed scalability and execution-time\nanalyses to support practical CCD tool selection.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u8bc4\u4f30\u4e86\u4e5d\u79cd\u7ecf\u5178\u4ee3\u7801\u514b\u9686\u68c0\u6d4b\u5de5\u5177\u5728AI\u751f\u6210\u4ee3\u7801\uff08\u7279\u522b\u662fGPT-3\u751f\u6210\u514b\u9686\uff09\u4e0a\u7684\u6709\u6548\u6027\uff0c\u53d1\u73b0\u90e8\u5206\u5de5\u5177\u5728\u7ed3\u5408\u5f52\u4e00\u5316\u6280\u672f\u540e\u4ecd\u5177\u8f83\u5f3a\u68c0\u6d4b\u80fd\u529b\uff0c\u4f46\u4e5f\u5b58\u5728\u6027\u80fd\u5dee\u5f02\uff0c\u5e76\u63d0\u4f9b\u4e86\u53ef\u6269\u5c55\u6027\u4e0e\u6267\u884c\u65f6\u95f4\u5206\u6790\u4ee5\u6307\u5bfc\u5de5\u5177\u9009\u62e9\u3002", "motivation": "\u968f\u7740AI\u751f\u6210\u4ee3\u7801\u7684\u666e\u53ca\uff0c\u5176\u5f15\u5165\u7684\u7cfb\u7edf\u6027\u8bed\u6cd5\u6a21\u5f0f\u548c\u590d\u6742\u8bed\u4e49\u5dee\u5f02\u5bf9\u4f20\u7edf\u4e3b\u8981\u9488\u5bf9\u4eba\u5de5\u7f16\u5199\u4ee3\u7801\u8bbe\u8ba1\u7684\u4ee3\u7801\u514b\u9686\u68c0\u6d4b\u5de5\u5177\u63d0\u51fa\u4e86\u65b0\u6311\u6218\uff0c\u4e9f\u9700\u8bc4\u4f30\u8fd9\u4e9b\u5de5\u5177\u5728AI\u751f\u6210\u514b\u9686\u573a\u666f\u4e0b\u7684\u6709\u6548\u6027\u3002", "method": "\u4f5c\u8005\u6784\u5efa\u4e86\u5305\u542bGPT-3\u751f\u6210\u514b\u9686\u7684\u57fa\u51c6\u6570\u636e\u96c6GPTCloneBench\uff0c\u5e76\u5728\u8be5\u6570\u636e\u96c6\u53ca\u4e24\u4e2a\u4eba\u5de5\u7f16\u5199\u7684\u57fa\u51c6\uff08BigCloneBench\u548cSemanticCloneBench\uff09\u4e0a\u7cfb\u7edf\u8bc4\u4f30\u4e86\u4e5d\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u7ecf\u5178\u4ee3\u7801\u514b\u9686\u68c0\u6d4b\u5de5\u5177\u7684\u6027\u80fd\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0c\u91c7\u7528\u6709\u6548\u5f52\u4e00\u5316\u6280\u672f\u7684\u7ecf\u5178\u4ee3\u7801\u514b\u9686\u68c0\u6d4b\u5de5\u5177\u5bf9AI\u751f\u6210\u514b\u9686\u4ecd\u4fdd\u6301\u76f8\u5f53\u7684\u68c0\u6d4b\u6548\u679c\uff0c\u4f46\u90e8\u5206\u5de5\u5177\u5728AI\u751f\u6210\u514b\u9686\u4e0e\u4f20\u7edf\u514b\u9686\u4e0a\u7684\u6027\u80fd\u8868\u73b0\u5b58\u5728\u663e\u8457\u5dee\u5f02\uff1b\u7814\u7a76\u8fd8\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u53ef\u6269\u5c55\u6027\u548c\u6267\u884c\u65f6\u95f4\u5206\u6790\u3002", "conclusion": "\u7ecf\u5178\u4ee3\u7801\u514b\u9686\u68c0\u6d4b\u5de5\u5177\u5728AI\u751f\u6210\u4ee3\u7801\u573a\u666f\u4e0b\u4ecd\u6709\u4e00\u5b9a\u9002\u7528\u6027\uff0c\u5c24\u5176\u5728\u7ed3\u5408\u5f52\u4e00\u5316\u6280\u672f\u65f6\u6548\u679c\u66f4\u4f73\uff0c\u4f46\u5176\u5c40\u9650\u6027\u4e5f\u51f8\u663e\u4e86\u9002\u5e94\u65b0\u8303\u5f0f\u7684\u9700\u6c42\uff1b\u672c\u7814\u7a76\u4e3a\u5de5\u5177\u9009\u62e9\u548c\u672a\u6765\u6539\u8fdb\u63d0\u4f9b\u4e86\u5b9e\u8bc1\u4f9d\u636e\u3002"}}
{"id": "2509.25874", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25874", "abs": "https://arxiv.org/abs/2509.25874", "authors": ["Zhihan Jiang", "Jinyang Liu", "Yichen Li", "Haiyu Huang", "Xiao He", "Tieying Zhang", "Jianjun Chen", "Yi Li", "Rui Shi", "Michael R. Lyu"], "title": "LogPilot: Intent-aware and Scalable Alert Diagnosis for Large-scale Online Service Systems", "comment": "Accepted by the 40th IEEE/ACM International Conference on Automated\n  Software Engineering (ASE 2025)", "summary": "Effective alert diagnosis is essential for ensuring the reliability of\nlarge-scale online service systems. However, on-call engineers are often\nburdened with manually inspecting massive volumes of logs to identify root\ncauses. While various automated tools have been proposed, they struggle in\npractice due to alert-agnostic log scoping and the inability to organize\ncomplex data effectively for reasoning. To overcome these limitations, we\nintroduce LogPilot, an intent-aware and scalable framework powered by Large\nLanguage Models (LLMs) for automated log-based alert diagnosis. LogPilot\nintroduces an intent-aware approach, interpreting the logic in alert\ndefinitions (e.g., PromQL) to precisely identify causally related logs and\nrequests. To achieve scalability, it reconstructs each request's execution into\na spatiotemporal log chain, clusters similar chains to identify recurring\nexecution patterns, and provides representative samples to the LLMs for\ndiagnosis. This clustering-based approach ensures the input is both rich in\ndiagnostic detail and compact enough to fit within the LLM's context window.\nEvaluated on real-world alerts from Volcano Engine Cloud, LogPilot improves the\nusefulness of root cause summarization by 50.34% and exact localization\naccuracy by 54.79% over state-of-the-art methods. With a diagnosis time under\none minute and a cost of only $0.074 per alert, LogPilot has been successfully\ndeployed in production, offering an automated and practical solution for\nservice alert diagnosis.", "AI": {"tldr": "LogPilot \u662f\u4e00\u4e2a\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u81ea\u52a8\u5316\u65e5\u5fd7\u8bca\u65ad\u6846\u67b6\uff0c\u901a\u8fc7\u7406\u89e3\u544a\u8b66\u5b9a\u4e49\u7684\u610f\u56fe\u5e76\u6784\u5efa\u65f6\u7a7a\u65e5\u5fd7\u94fe\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6839\u56e0\u5b9a\u4f4d\u7684\u51c6\u786e\u6027\u548c\u8bca\u65ad\u6548\u7387\u3002", "motivation": "\u73b0\u6709\u81ea\u52a8\u5316\u5de5\u5177\u5728\u544a\u8b66\u8bca\u65ad\u4e2d\u5b58\u5728\u65e5\u5fd7\u8303\u56f4\u9009\u62e9\u4e0e\u544a\u8b66\u65e0\u5173\u3001\u96be\u4ee5\u7ec4\u7ec7\u590d\u6742\u6570\u636e\u8fdb\u884c\u63a8\u7406\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5b9e\u9645\u6548\u679c\u4e0d\u4f73\uff0c\u4e9f\u9700\u4e00\u79cd\u66f4\u7cbe\u51c6\u3001\u53ef\u6269\u5c55\u7684\u8bca\u65ad\u65b9\u6cd5\u3002", "method": "LogPilot \u91c7\u7528\u610f\u56fe\u611f\u77e5\u7b56\u7565\uff0c\u89e3\u6790\u544a\u8b66\u5b9a\u4e49\uff08\u5982 PromQL\uff09\u4ee5\u8bc6\u522b\u56e0\u679c\u76f8\u5173\u7684\u65e5\u5fd7\u548c\u8bf7\u6c42\uff1b\u901a\u8fc7\u6784\u5efa\u8bf7\u6c42\u7684\u65f6\u7a7a\u65e5\u5fd7\u94fe\u3001\u805a\u7c7b\u76f8\u4f3c\u94fe\u4ee5\u63d0\u53d6\u4ee3\u8868\u6027\u6837\u672c\uff0c\u518d\u4ea4\u7531 LLM \u8fdb\u884c\u8bca\u65ad\uff0c\u517c\u987e\u4fe1\u606f\u4e30\u5bcc\u6027\u4e0e\u4e0a\u4e0b\u6587\u957f\u5ea6\u9650\u5236\u3002", "result": "\u5728\u706b\u5c71\u5f15\u64ce\u4e91\u7684\u771f\u5b9e\u544a\u8b66\u6570\u636e\u4e0a\uff0cLogPilot \u76f8\u6bd4\u73b0\u6709\u6700\u4f18\u65b9\u6cd5\uff0c\u6839\u56e0\u603b\u7ed3\u6709\u7528\u6027\u63d0\u5347 50.34%\uff0c\u7cbe\u786e\u5b9a\u4f4d\u51c6\u786e\u7387\u63d0\u5347 54.79%\uff0c\u5355\u6b21\u8bca\u65ad\u8017\u65f6\u4e0d\u5230 1 \u5206\u949f\uff0c\u6210\u672c\u4ec5 $0.074\uff0c\u5e76\u5df2\u6295\u5165\u751f\u4ea7\u4f7f\u7528\u3002", "conclusion": "LogPilot \u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u3001\u4f4e\u6210\u672c\u4e14\u5b9e\u7528\u7684\u81ea\u52a8\u5316\u544a\u8b66\u8bca\u65ad\u65b9\u6848\uff0c\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u5728\u7ebf\u670d\u52a1\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u4fdd\u969c\u3002"}}
{"id": "2509.25894", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.25894", "abs": "https://arxiv.org/abs/2509.25894", "authors": ["Simin Chen", "Yixin He", "Suman Jana", "Baishakhi Ray"], "title": "Red Teaming Program Repair Agents: When Correct Patches can Hide Vulnerabilities", "comment": null, "summary": "LLM-based agents are increasingly deployed for software maintenance tasks\nsuch as automated program repair (APR). APR agents automatically fetch GitHub\nissues and use backend LLMs to generate patches that fix the reported bugs.\nHowever, existing work primarily focuses on the functional correctness of\nAPR-generated patches, whether they pass hidden or regression tests, while\nlargely ignoring potential security risks. Given the openness of platforms like\nGitHub, where any user can raise issues and participate in discussions, an\nimportant question arises: Can an adversarial user submit a valid issue on\nGitHub that misleads an LLM-based agent into generating a functionally correct\nbut vulnerable patch? To answer this question, we propose SWExploit, which\ngenerates adversarial issue statements designed to make APR agents produce\npatches that are functionally correct yet vulnerable. SWExploit operates in\nthree main steps: (1) program analysis to identify potential injection points\nfor vulnerable payloads; (2) adversarial issue generation to provide misleading\nreproduction and error information while preserving the original issue\nsemantics; and (3) iterative refinement of the adversarial issue statements\nbased on the outputs of the APR agents. Empirical evaluation on three agent\npipelines and five backend LLMs shows that SWExploit can produce patches that\nare both functionally correct and vulnerable (the attack success rate on the\ncorrect patch could reach 0.91, whereas the baseline ASRs are all below 0.20).\nBased on our evaluation, we are the first to challenge the traditional\nassumption that a patch passing all tests is inherently reliable and secure,\nhighlighting critical limitations in the current evaluation paradigm for APR\nagents.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faSWExploit\uff0c\u4e00\u79cd\u751f\u6210\u5bf9\u6297\u6027GitHub issue\u7684\u65b9\u6cd5\uff0c\u53ef\u8bf1\u4f7f\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u81ea\u52a8\u7a0b\u5e8f\u4fee\u590d\uff08APR\uff09\u4ee3\u7406\u751f\u6210\u529f\u80fd\u6b63\u786e\u4f46\u5b58\u5728\u5b89\u5168\u6f0f\u6d1e\u7684\u8865\u4e01\uff0c\u63ed\u793a\u5f53\u524dAPR\u8bc4\u4f30\u8303\u5f0f\u5ffd\u89c6\u5b89\u5168\u98ce\u9669\u7684\u95ee\u9898\u3002", "motivation": "\u73b0\u6709APR\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u8865\u4e01\u7684\u529f\u80fd\u6b63\u786e\u6027\uff0c\u5ffd\u7565\u4e86\u5176\u6f5c\u5728\u7684\u5b89\u5168\u98ce\u9669\uff1b\u9274\u4e8eGitHub\u7b49\u5e73\u53f0\u7684\u5f00\u653e\u6027\uff0c\u6076\u610f\u7528\u6237\u53ef\u80fd\u63d0\u4ea4\u770b\u4f3c\u5408\u6cd5\u7684issue\uff0c\u8bf1\u5bfcAPR\u4ee3\u7406\u751f\u6210\u542b\u6f0f\u6d1e\u7684\u8865\u4e01\u3002", "method": "SWExploit\u5305\u542b\u4e09\u4e2a\u6b65\u9aa4\uff1a(1) \u7a0b\u5e8f\u5206\u6790\u4ee5\u8bc6\u522b\u6f5c\u5728\u6f0f\u6d1e\u6ce8\u5165\u70b9\uff1b(2) \u751f\u6210\u4fdd\u7559\u539f\u59cb\u8bed\u4e49\u4f46\u63d0\u4f9b\u8bef\u5bfc\u6027\u590d\u73b0\u548c\u9519\u8bef\u4fe1\u606f\u7684\u5bf9\u6297\u6027issue\uff1b(3) \u6839\u636eAPR\u4ee3\u7406\u8f93\u51fa\u8fed\u4ee3\u4f18\u5316\u5bf9\u6297\u6027issue\u3002", "result": "\u57283\u4e2a\u4ee3\u7406\u6d41\u7a0b\u548c5\u4e2aLLM\u540e\u7aef\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0cSWExploit\u751f\u6210\u7684\u8865\u4e01\u653b\u51fb\u6210\u529f\u7387\u6700\u9ad8\u8fbe0.91\uff0c\u8fdc\u9ad8\u4e8e\u57fa\u7ebf\uff08\u5747\u4f4e\u4e8e0.20\uff09\u3002", "conclusion": "\u672c\u6587\u9996\u6b21\u6311\u6218\u201c\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u7684\u8865\u4e01\u5373\u5b89\u5168\u53ef\u9760\u201d\u7684\u4f20\u7edf\u5047\u8bbe\uff0c\u6307\u51fa\u5f53\u524dAPR\u8bc4\u4f30\u8303\u5f0f\u5728\u5b89\u5168\u6027\u65b9\u9762\u7684\u4e25\u91cd\u4e0d\u8db3\u3002"}}
{"id": "2509.25987", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.25987", "abs": "https://arxiv.org/abs/2509.25987", "authors": ["Yilun Liu", "Ziang Chen", "Song Xu", "Minggui He", "Shimin Tao", "Weibin Meng", "Yuming Xie", "Tao Han", "Chunguang Zhao", "Jingzhou Du", "Daimeng Wei", "Shenglin Zhang", "Yongqian Sun"], "title": "R-Log: Incentivizing Log Analysis Capability in LLMs via Reasoning-based Reinforcement Learning", "comment": null, "summary": "The growing complexity of log data in modern software systems has prompted\nthe use of Large Language Models (LLMs) for automated log analysis. Current\napproaches typically rely on direct supervised fine-tuning (SFT) on log-label\npairs. However, this exacerbates the domain discrepancy between general-purpose\nLLMs and specialized log data, causing overfitting. Furthermore, SFT's\nimbalanced loss computation often allows lengthy contexts to overwhelm\ncritical, concise details in model answers, leading to hallucinations. To\naddress these limitations, we propose R-Log, a novel reasoning-based paradigm\nthat mirrors the structured, step-by-step analytical process of human\nengineers. This approach enhances generalizability by learning the underlying\nrules behind conclusions. We further employ Reinforcement Learning (RL) to\noptimize the model within a simulated O&M environment, thereby reducing\nhallucinations by directly rewarding correct outcomes. R-Log is first\ncold-started on a curated dataset of 2k+ reasoning trajectories, guided by 13\nstrategies from manual O&M practices, to establish an initial reasoning\ncapability. This ability is then refined via RL using a joint reward function.\nEmpirical evaluations on real-world logs show that R-Log outperforms existing\nmethods across five log analysis tasks, particularly in unseen scenarios (by\n228.05%). We also designed R-Log-fast with 5x speedup while keeping 93% of the\nefficacy.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faR-Log\uff0c\u4e00\u79cd\u57fa\u4e8e\u63a8\u7406\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\u65e5\u5fd7\u5206\u6790\u65b0\u8303\u5f0f\uff0c\u901a\u8fc7\u6a21\u4eff\u4eba\u7c7b\u5de5\u7a0b\u5e08\u7684\u7ed3\u6784\u5316\u5206\u6790\u6d41\u7a0b\u5e76\u7ed3\u5408\u5f3a\u5316\u5b66\u4e60\u4f18\u5316\uff0c\u5728\u771f\u5b9e\u65e5\u5fd7\u6570\u636e\u4e0a\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u5c24\u5176\u5728\u672a\u89c1\u8fc7\u7684\u573a\u666f\u4e2d\u8868\u73b0\u7a81\u51fa\uff0c\u5e76\u63a8\u51fa\u4e86\u63d0\u901f5\u500d\u7684R-Log-fast\u7248\u672c\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u76d1\u7763\u5fae\u8c03\uff08SFT\uff09\u7684\u65e5\u5fd7\u5206\u6790\u65b9\u6cd5\u5b58\u5728\u9886\u57df\u5dee\u5f02\u5927\u3001\u8fc7\u62df\u5408\u548c\u56e0\u4e0a\u4e0b\u6587\u8fc7\u957f\u800c\u5ffd\u7565\u5173\u952e\u7ec6\u8282\u5bfc\u81f4\u5e7b\u89c9\u7b49\u95ee\u9898\uff0c\u96be\u4ee5\u6cdb\u5316\u5230\u65b0\u573a\u666f\u3002", "method": "\u63d0\u51faR-Log\u65b9\u6cd5\uff1a\u9996\u5148\u5728\u5305\u542b2000\u591a\u6761\u63a8\u7406\u8f68\u8ff9\u7684\u6570\u636e\u96c6\u4e0a\u51b7\u542f\u52a8\u6a21\u578b\uff0c\u8be5\u6570\u636e\u96c6\u57fa\u4e8e13\u79cd\u4eba\u5de5\u8fd0\u7ef4\u7b56\u7565\uff1b\u7136\u540e\u5728\u6a21\u62df\u8fd0\u7ef4\u73af\u5883\u4e2d\u5229\u7528\u5f3a\u5316\u5b66\u4e60\u548c\u8054\u5408\u5956\u52b1\u51fd\u6570\u8fdb\u4e00\u6b65\u4f18\u5316\u6a21\u578b\u63a8\u7406\u80fd\u529b\u3002", "result": "\u5728\u771f\u5b9e\u65e5\u5fd7\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0cR-Log\u5728\u4e94\u9879\u65e5\u5fd7\u5206\u6790\u4efb\u52a1\u4e2d\u5747\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u5728\u672a\u89c1\u573a\u666f\u4e2d\u6027\u80fd\u63d0\u5347\u8fbe228.05%\uff1bR-Log-fast\u7248\u672c\u5728\u4fdd\u630193%\u6548\u80fd\u7684\u540c\u65f6\u5b9e\u73b05\u500d\u52a0\u901f\u3002", "conclusion": "R-Log\u901a\u8fc7\u5f15\u5165\u4eba\u7c7b\u5de5\u7a0b\u5e08\u5f0f\u7684\u63a8\u7406\u673a\u5236\u548c\u5f3a\u5316\u5b66\u4e60\u4f18\u5316\uff0c\u6709\u6548\u63d0\u5347\u4e86LLM\u5728\u65e5\u5fd7\u5206\u6790\u4efb\u52a1\u4e2d\u7684\u6cdb\u5316\u80fd\u529b\u548c\u51c6\u786e\u6027\uff0c\u663e\u8457\u51cf\u5c11\u5e7b\u89c9\u95ee\u9898\uff0c\u5177\u6709\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\u3002"}}
{"id": "2509.26014", "categories": ["cs.SE", "cs.IR"], "pdf": "https://arxiv.org/pdf/2509.26014", "abs": "https://arxiv.org/abs/2509.26014", "authors": ["Joel Garcia-Escribano", "Arkaitz Carbajo", "Mikel Ega\u00f1a Aranguren", "Unai Lopez-Novoa"], "title": "Using GPT to build a Project Management assistant for Jira environments", "comment": null, "summary": "In the domain of Project Management, the sheer volume of data is a challenge\nthat project managers continually have to deal with. Effectively steering\nprojects from inception to completion requires handling of diverse information\nstreams, including timelines, budgetary considerations, and task dependencies.\nTo navigate this data-driven landscape with precision and agility, project\nmanagers must rely on efficient and sophisticated tools. These tools have\nbecome essential, as they enable project managers to streamline communication,\noptimize resource allocation, and make informed decisions in real-time.\nHowever, many of these tools have steep learning curves and require using\ncomplex programming languages to retrieve the exact data that project managers\nneed. In this work we present JiraGPT Next, a software that uses the GPT Large\nLanguage Model to ease the process by which project managers deal with large\namounts of data. It is conceived as an add-on for Jira, one of the most popular\nProject Management tools, and provides a natural language interface to retrieve\ninformation. This work presents the design decisions behind JiraGPT Next and an\nevaluation of the accuracy of GPT in this context, including the effects of\nproviding different prompts to complete a particular task.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86JiraGPT Next\uff0c\u4e00\u4e2a\u57fa\u4e8eGPT\u5927\u8bed\u8a00\u6a21\u578b\u7684Jira\u63d2\u4ef6\uff0c\u901a\u8fc7\u81ea\u7136\u8bed\u8a00\u754c\u9762\u5e2e\u52a9\u9879\u76ee\u7ecf\u7406\u66f4\u8f7b\u677e\u5730\u5904\u7406\u5927\u91cf\u9879\u76ee\u6570\u636e\u3002", "motivation": "\u9879\u76ee\u7ba1\u7406\u4e2d\u6570\u636e\u91cf\u5e9e\u5927\u4e14\u590d\u6742\uff0c\u73b0\u6709\u5de5\u5177\u5b66\u4e60\u66f2\u7ebf\u9661\u5ced\u3001\u4f9d\u8d56\u590d\u6742\u7f16\u7a0b\u8bed\u8a00\uff0c\u96be\u4ee5\u9ad8\u6548\u83b7\u53d6\u6240\u9700\u4fe1\u606f\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u76f4\u89c2\u3001\u6613\u7528\u7684\u6570\u636e\u4ea4\u4e92\u65b9\u5f0f\u3002", "method": "\u5f00\u53d1JiraGPT Next\u63d2\u4ef6\uff0c\u5c06\u5176\u96c6\u6210\u5230Jira\u4e2d\uff0c\u5229\u7528GPT\u5927\u8bed\u8a00\u6a21\u578b\u63d0\u4f9b\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u63a5\u53e3\uff0c\u5e76\u8bc4\u4f30\u4e0d\u540c\u63d0\u793a\u8bcd\u5bf9\u4efb\u52a1\u5b8c\u6210\u51c6\u786e\u7387\u7684\u5f71\u54cd\u3002", "result": "\u8bba\u6587\u5c55\u793a\u4e86JiraGPT Next\u7684\u8bbe\u8ba1\u65b9\u6848\uff0c\u5e76\u8bc4\u4f30\u4e86GPT\u5728\u8be5\u573a\u666f\u4e0b\u7684\u51c6\u786e\u6027\uff0c\u5206\u6790\u4e86\u4e0d\u540c\u63d0\u793a\u7b56\u7565\u5bf9\u4efb\u52a1\u6267\u884c\u6548\u679c\u7684\u5f71\u54cd\u3002", "conclusion": "JiraGPT Next\u901a\u8fc7\u81ea\u7136\u8bed\u8a00\u4ea4\u4e92\u663e\u8457\u964d\u4f4e\u4e86\u9879\u76ee\u7ecf\u7406\u5904\u7406\u590d\u6742\u6570\u636e\u7684\u95e8\u69db\uff0c\u63d0\u5347\u4e86\u4fe1\u606f\u68c0\u7d22\u6548\u7387\uff0c\u9a8c\u8bc1\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5728\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u4e2d\u7684\u5b9e\u7528\u6f5c\u529b\u3002"}}
{"id": "2509.26031", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.26031", "abs": "https://arxiv.org/abs/2509.26031", "authors": ["Hina Anwar", "Dietmar Pfahl", "Satish N. Srirama"], "title": "Evaluating the impact of code smell refactoring on the energy consumption of Android applications", "comment": null, "summary": "Energy consumption of mobile apps is a domain that is receiving a lot of\nattention from researchers. Recent studies indicate that the energy consumption\nof mobile devices could be improved by improving the quality of mobile apps.\nFrequent refactoring is one way of achieving this goal. In this paper, we\nexplore the performance and energy impact of several common code refactorings\nin Android apps. Experimental results indicate that some code smell\nrefactorings positively impact the energy consumption of Android apps.\nRefactoring of the code smells \"Duplicated code\" and \"Type checking\" reduce\nenergy consumption by up to 10.8%. Significant reduction in energy consumption,\nhowever, does not seem to be directly related to the increase or decrease of\nexecution time. In addition, the energy impact over permutations of code smell\nrefactorings in the selected Android apps was small. When analyzing the order\nin which refactorings were made across code smell types, it turned out that\nsome permutations resulted in a reduction and some in an increase of energy\nconsumption for the analyzed apps. More research needs to be done to\ninvestigate how factors like size and age of software apps, experience, and\nnumber of contributors to app development correlate with (a) the number and\ntype of code smells found and (b) the impact of energy consumption and\nperformance after refactoring.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86Android\u5e94\u7528\u4e2d\u5e38\u89c1\u4ee3\u7801\u91cd\u6784\u5bf9\u6027\u80fd\u548c\u80fd\u8017\u7684\u5f71\u54cd\uff0c\u53d1\u73b0\u201c\u91cd\u590d\u4ee3\u7801\u201d\u548c\u201c\u7c7b\u578b\u68c0\u67e5\u201d\u91cd\u6784\u6700\u591a\u53ef\u964d\u4f4e10.8%\u7684\u80fd\u8017\uff0c\u4f46\u80fd\u8017\u53d8\u5316\u4e0e\u6267\u884c\u65f6\u95f4\u65e0\u76f4\u63a5\u5173\u8054\uff0c\u4e14\u4e0d\u540c\u91cd\u6784\u987a\u5e8f\u5bf9\u80fd\u8017\u5f71\u54cd\u5404\u5f02\uff0c\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u8f6f\u4ef6\u7279\u5f81\u4e0e\u4ee3\u7801\u574f\u5473\u9053\u53ca\u91cd\u6784\u6548\u679c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002", "motivation": "\u79fb\u52a8\u5e94\u7528\u7684\u80fd\u8017\u95ee\u9898\u65e5\u76ca\u53d7\u5230\u5173\u6ce8\uff0c\u7814\u7a76\u8868\u660e\u901a\u8fc7\u63d0\u5347\u5e94\u7528\u4ee3\u7801\u8d28\u91cf\uff08\u5982\u9891\u7e41\u91cd\u6784\uff09\u53ef\u6539\u5584\u8bbe\u5907\u80fd\u8017\uff0c\u4f46\u5c1a\u4e0d\u6e05\u695a\u5177\u4f53\u54ea\u4e9b\u91cd\u6784\u5bf9\u80fd\u8017\u6709\u79ef\u6781\u5f71\u54cd\u3002", "method": "\u5bf9Android\u5e94\u7528\u4e2d\u82e5\u5e72\u5e38\u89c1\u4ee3\u7801\u574f\u5473\u9053\u8fdb\u884c\u91cd\u6784\u5b9e\u9a8c\uff0c\u6d4b\u91cf\u5e76\u5206\u6790\u91cd\u6784\u524d\u540e\u5e94\u7528\u7684\u80fd\u8017\u4e0e\u6027\u80fd\u53d8\u5316\uff0c\u540c\u65f6\u8003\u5bdf\u4e0d\u540c\u91cd\u6784\u987a\u5e8f\u5bf9\u80fd\u8017\u7684\u5f71\u54cd\u3002", "result": "\u201c\u91cd\u590d\u4ee3\u7801\u201d\u548c\u201c\u7c7b\u578b\u68c0\u67e5\u201d\u91cd\u6784\u6700\u591a\u53ef\u964d\u4f4e10.8%\u7684\u80fd\u8017\uff1b\u80fd\u8017\u663e\u8457\u964d\u4f4e\u4e0e\u6267\u884c\u65f6\u95f4\u53d8\u5316\u65e0\u76f4\u63a5\u5173\u7cfb\uff1b\u4e0d\u540c\u91cd\u6784\u987a\u5e8f\u5bf9\u80fd\u8017\u5f71\u54cd\u8f83\u5c0f\u4e14\u65b9\u5411\u4e0d\u4e00\u3002", "conclusion": "\u67d0\u4e9b\u4ee3\u7801\u91cd\u6784\u786e\u5b9e\u80fd\u964d\u4f4eAndroid\u5e94\u7528\u80fd\u8017\uff0c\u4f46\u5176\u6548\u679c\u590d\u6742\u4e14\u53d7\u591a\u79cd\u56e0\u7d20\u5f71\u54cd\uff0c\u672a\u6765\u9700\u6df1\u5165\u7814\u7a76\u5e94\u7528\u89c4\u6a21\u3001\u5e74\u9f84\u3001\u5f00\u53d1\u8005\u7ecf\u9a8c\u7b49\u56e0\u7d20\u4e0e\u4ee3\u7801\u574f\u5473\u9053\u6570\u91cf\u53ca\u91cd\u6784\u80fd\u8017\u5f71\u54cd\u4e4b\u95f4\u7684\u5173\u8054\u3002"}}
{"id": "2509.26110", "categories": ["cs.SE", "astro-ph.IM"], "pdf": "https://arxiv.org/pdf/2509.26110", "abs": "https://arxiv.org/abs/2509.26110", "authors": ["Dmitriy Kostunin", "Vladimir Sotnikov", "Sergo Golovachev", "Abhay Mehta", "Tim Lukas Holch", "Elisa Jones"], "title": "Agent-based code generation for the Gammapy framework", "comment": "ICRC2025 proceedings PoS(ICRC2025)753", "summary": "Software code generation using Large Language Models (LLMs) is one of the\nmost successful applications of modern artificial intelligence. Foundational\nmodels are very effective for popular frameworks that benefit from\ndocumentation, examples, and strong community support. In contrast, specialized\nscientific libraries often lack these resources and may expose unstable APIs\nunder active development, making it difficult for models trained on limited or\noutdated data. We address these issues for the Gammapy library by developing an\nagent capable of writing, executing, and validating code in a controlled\nenvironment. We present a minimal web demo and an accompanying benchmarking\nsuite. This contribution summarizes the design, reports our current status, and\noutlines next steps.", "AI": {"tldr": "\u672c\u6587\u9488\u5bf9\u79d1\u5b66\u8ba1\u7b97\u5e93Gammapy\u7f3a\u4e4f\u6587\u6863\u548c\u793e\u533a\u652f\u6301\u7684\u95ee\u9898\uff0c\u5f00\u53d1\u4e86\u4e00\u4e2a\u80fd\u5728\u53d7\u63a7\u73af\u5883\u4e2d\u7f16\u5199\u3001\u6267\u884c\u548c\u9a8c\u8bc1\u4ee3\u7801\u7684\u667a\u80fd\u4f53\uff0c\u5e76\u63d0\u4f9b\u4e86\u7f51\u9875\u6f14\u793a\u548c\u57fa\u51c6\u6d4b\u8bd5\u5957\u4ef6\u3002", "motivation": "\u901a\u7528\u5927\u8bed\u8a00\u6a21\u578b\u5728\u6d41\u884c\u6846\u67b6\u4e0a\u8868\u73b0\u826f\u597d\uff0c\u4f46\u5728\u7f3a\u4e4f\u6587\u6863\u3001\u793a\u4f8b\u548c\u793e\u533a\u652f\u6301\u7684\u4e13\u7528\u79d1\u5b66\u5e93\uff08\u5982Gammapy\uff09\u4e0a\u6548\u679c\u4e0d\u4f73\uff0c\u4e14\u8fd9\u4e9b\u5e93\u7684API\u5e38\u4e0d\u7a33\u5b9a\uff0c\u8bad\u7ec3\u6570\u636e\u6709\u9650\u6216\u8fc7\u65f6\u3002", "method": "\u5f00\u53d1\u4e00\u4e2a\u80fd\u5728\u53d7\u63a7\u73af\u5883\u4e2d\u81ea\u52a8\u751f\u6210\u3001\u6267\u884c\u548c\u9a8c\u8bc1Gammapy\u4ee3\u7801\u7684\u667a\u80fd\u4f53\uff0c\u5e76\u6784\u5efa\u914d\u5957\u7684\u7f51\u9875\u6f14\u793a\u548c\u57fa\u51c6\u6d4b\u8bd5\u5957\u4ef6\u3002", "result": "\u5b9e\u73b0\u4e86\u9488\u5bf9Gammapy\u7684\u4ee3\u7801\u751f\u6210\u667a\u80fd\u4f53\uff0c\u63d0\u4f9b\u4e86\u6700\u5c0f\u53ef\u884c\u7684\u7f51\u9875\u6f14\u793a\u548c\u8bc4\u4f30\u57fa\u51c6\uff0c\u5c55\u793a\u4e86\u5f53\u524d\u8fdb\u5c55\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u4e3a\u89e3\u51b3\u4e13\u7528\u79d1\u5b66\u5e93\u4e2d\u4ee3\u7801\u751f\u6210\u96be\u9898\u63d0\u4f9b\u4e86\u53ef\u884c\u8def\u5f84\uff0c\u540e\u7eed\u5c06\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u4f18\u5316\u548c\u6269\u5c55\u3002"}}
{"id": "2509.26111", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.26111", "abs": "https://arxiv.org/abs/2509.26111", "authors": ["Shuai Wang", "Liang Ding", "Li Shen", "Yong Luo", "Han Hu", "Lefei Zhang", "Fu Lin"], "title": "A Multi-Language Object-Oriented Programming Benchmark for Large Language Models", "comment": "20 pages, 12 figures", "summary": "Establishing fair and robust benchmarks is essential for evaluating\nintelligent code generation by large language models (LLMs). Our survey of 35\nexisting benchmarks uncovers three major imbalances: 85.7% focus on a single\nprogramming language; 94.3% target only function-level or statement-level\ntasks; and over 80% include fewer than ten test cases on average. To address\nthese gaps, we propose MultiOOP, a multi-language object-oriented programming\nbenchmark covering six popular languages (Python, PHP, C++, C#, Java,\nJavaScript) with 267 tasks per language. We design a translator that extends an\nexisting single-language OOP benchmark and the pass@o metric to a multilingual\nsetting. Moreover, we propose an automated framework for augmenting test cases\nto ensure the reliability of the evaluation results. We evaluate 14 mainstream\nLLMs under zero-shot prompting and report three key findings: 1) Substantial\nperformance degradation: pass@1 scores on MultiOOP drop by up to 65.6\npercentage points compared to function-level tasks (e.g., HumanEval). 2)\nCross-language variability: GPT-4o mini achieves pass@1 of 48.06% in Python but\nonly 0.12%-15.26% in other languages, indicating limited multilingual\ngeneralization. 3) Conceptual gaps: pass@o scores are consistently 1.1-19.2\npoints lower than pass@k, demonstrating that LLMs often generate executable\ncode without fully capturing core OOP concepts. Our benchmark, metric\nextensions, and evaluation scripts will be publicly released to foster a more\nbalanced and comprehensive assessment of LLMs in object-oriented code\ngeneration. Our code and data will be released at\nhttps://github.com/alphadl/OOP-eval and\nhttps://huggingface.co/datasets/codeai-dteam/MultiOOP respectively.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86MultiOOP\uff0c\u4e00\u4e2a\u8986\u76d6\u516d\u79cd\u4e3b\u6d41\u8bed\u8a00\u7684\u591a\u8bed\u8a00\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u51c6\uff0c\u63ed\u793a\u4e86\u73b0\u6709\u4ee3\u7801\u751f\u6210\u57fa\u51c6\u5728\u8bed\u8a00\u591a\u6837\u6027\u3001\u4efb\u52a1\u7c92\u5ea6\u548c\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u4e0a\u7684\u4e25\u91cd\u4e0d\u8db3\uff0c\u5e76\u901a\u8fc7\u8bc4\u4f3014\u4e2a\u4e3b\u6d41\u5927\u8bed\u8a00\u6a21\u578b\uff0c\u53d1\u73b0\u5176\u5728\u591a\u8bed\u8a00OOP\u4efb\u52a1\u4e2d\u5b58\u5728\u6027\u80fd\u663e\u8457\u4e0b\u964d\u3001\u8de8\u8bed\u8a00\u6cdb\u5316\u80fd\u529b\u5f31\u53ca\u5bf9\u6838\u5fc3OOP\u6982\u5ff5\u7406\u89e3\u4e0d\u8db3\u7b49\u95ee\u9898\u3002", "motivation": "\u73b0\u670935\u4e2a\u4ee3\u7801\u751f\u6210\u57fa\u51c6\u5b58\u5728\u4e09\u5927\u4e0d\u5e73\u8861\uff1a85.7%\u4ec5\u5173\u6ce8\u5355\u4e00\u8bed\u8a00\uff0c94.3%\u4ec5\u8bc4\u4f30\u51fd\u6570\u6216\u8bed\u53e5\u7ea7\u522b\u4efb\u52a1\uff0c\u8d8580%\u5e73\u5747\u6d4b\u8bd5\u7528\u4f8b\u5c11\u4e8e10\u4e2a\uff0c\u96be\u4ee5\u5168\u9762\u8bc4\u4f30\u5927\u8bed\u8a00\u6a21\u578b\u5728\u591a\u8bed\u8a00\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u80fd\u529b\u3002", "method": "\u6784\u5efaMultiOOP\u57fa\u51c6\uff0c\u6db5\u76d6Python\u3001PHP\u3001C++\u3001C#\u3001Java\u3001JavaScript\u516d\u79cd\u8bed\u8a00\uff0c\u6bcf\u79cd\u8bed\u8a00267\u4e2a\u4efb\u52a1\uff1b\u8bbe\u8ba1\u7ffb\u8bd1\u5668\u5c06\u5355\u8bed\u8a00OOP\u57fa\u51c6\u6269\u5c55\u81f3\u591a\u8bed\u8a00\uff0c\u5e76\u5f15\u5165pass@o\u6307\u6807\uff1b\u5f00\u53d1\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u589e\u5f3a\u6846\u67b6\u4ee5\u63d0\u5347\u8bc4\u4f30\u53ef\u9760\u6027\u3002", "result": "\u8bc4\u4f3014\u4e2a\u4e3b\u6d41LLM\u53d1\u73b0\uff1a1\uff09\u76f8\u6bd4\u51fd\u6570\u7ea7\u4efb\u52a1\uff08\u5982HumanEval\uff09\uff0cMultiOOP\u4e0apass@1\u5206\u6570\u6700\u591a\u4e0b\u964d65.6\u4e2a\u767e\u5206\u70b9\uff1b2\uff09\u6a21\u578b\u5728\u4e0d\u540c\u8bed\u8a00\u95f4\u8868\u73b0\u5dee\u5f02\u5de8\u5927\uff08\u5982GPT-4o mini\u5728Python\u8fbe48.06%\uff0c\u5176\u4ed6\u8bed\u8a00\u4ec50.12%-15.26%\uff09\uff1b3\uff09pass@o\u663e\u8457\u4f4e\u4e8epass@k\uff08\u5dee1.1\u201319.2\u5206\uff09\uff0c\u8868\u660e\u6a21\u578b\u5e38\u751f\u6210\u53ef\u6267\u884c\u4f46\u672a\u6b63\u786e\u4f53\u73b0OOP\u6982\u5ff5\u7684\u4ee3\u7801\u3002", "conclusion": "MultiOOP\u586b\u8865\u4e86\u591a\u8bed\u8a00\u9762\u5411\u5bf9\u8c61\u4ee3\u7801\u751f\u6210\u8bc4\u4f30\u7684\u7a7a\u767d\uff0c\u63ed\u793a\u4e86\u5f53\u524dLLM\u5728\u8be5\u9886\u57df\u7684\u5173\u952e\u5c40\u9650\uff0c\u6240\u63d0\u51fa\u7684\u57fa\u51c6\u3001\u6307\u6807\u548c\u5de5\u5177\u5c06\u516c\u5f00\u53d1\u5e03\uff0c\u4ee5\u63a8\u52a8\u66f4\u516c\u5e73\u3001\u5168\u9762\u7684\u4ee3\u7801\u751f\u6210\u80fd\u529b\u8bc4\u4f30\u3002"}}
{"id": "2509.26173", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.26173", "abs": "https://arxiv.org/abs/2509.26173", "authors": ["Lisi Qarkaxhija", "Maximilian Carparo", "Stefan Menzel", "Bernhard Sendhoff", "Ingo Scholtes"], "title": "Understanding Collective Social Behavior in OSS Communities: A Co-editing Network Analysis of Activity Cascades", "comment": null, "summary": "Understanding the collective social behavior of software developers is\ncrucial to model and predict the long-term dynamics and sustainability of Open\nSource Software (OSS) communities. To this end, we analyze temporal activity\npatterns of developers, revealing an inherently ``bursty'' nature of commit\ncontributions. To investigate the social mechanisms behind this phenomenon, we\nadopt a network-based modelling framework that captures developer interactions\nthrough co-editing networks. Our framework models social interactions, where a\ndeveloper editing the code of other developers triggers accelerated activity\namong collaborators. Using a large data set on 50 major OSS communities, we\nfurther develop a method that identifies activity cascades, i.e. the\npropagation of developer activity in the underlying co-editing network. Our\nresults suggest that activity cascades are a statistically significant\nphenomenon in more than half of the studied projects. We further show that our\ninsights can be used to develop a simple yet practical churn prediction method\nthat forecasts which developers are likely to leave a project. Our work sheds\nlight on the emergent collective social dynamics in OSS communities and\nhighlights the importance of activity cascades to understand developer churn\nand retention in collaborative software projects.", "AI": {"tldr": "\u8be5\u8bba\u6587\u7814\u7a76\u5f00\u6e90\u8f6f\u4ef6\uff08OSS\uff09\u793e\u533a\u4e2d\u5f00\u53d1\u8005\u7684\u96c6\u4f53\u793e\u4f1a\u884c\u4e3a\uff0c\u53d1\u73b0\u5176\u63d0\u4ea4\u6d3b\u52a8\u5177\u6709\u201c\u7a81\u53d1\u6027\u201d\uff0c\u5e76\u901a\u8fc7\u6784\u5efa\u57fa\u4e8e\u534f\u4f5c\u7f16\u8f91\u7f51\u7edc\u7684\u6a21\u578b\u63ed\u793a\u4e86\u6d3b\u52a8\u7ea7\u8054\u73b0\u8c61\u3002\u7814\u7a76\u53d1\u73b0\u6d3b\u52a8\u7ea7\u8054\u5728\u8d85\u8fc7\u4e00\u534a\u7684\u9879\u76ee\u4e2d\u5177\u6709\u7edf\u8ba1\u663e\u8457\u6027\uff0c\u5e76\u636e\u6b64\u63d0\u51fa\u4e86\u4e00\u79cd\u9884\u6d4b\u5f00\u53d1\u8005\u6d41\u5931\u7684\u5b9e\u7528\u65b9\u6cd5\u3002", "motivation": "\u7406\u89e3\u5f00\u6e90\u8f6f\u4ef6\u793e\u533a\u4e2d\u5f00\u53d1\u8005\u7684\u96c6\u4f53\u793e\u4f1a\u884c\u4e3a\u5bf9\u4e8e\u5efa\u6a21\u548c\u9884\u6d4b\u793e\u533a\u7684\u957f\u671f\u52a8\u6001\u4e0e\u53ef\u6301\u7eed\u6027\u81f3\u5173\u91cd\u8981\u3002", "method": "\u91c7\u7528\u57fa\u4e8e\u7f51\u7edc\u7684\u5efa\u6a21\u6846\u67b6\uff0c\u901a\u8fc7\u534f\u4f5c\u7f16\u8f91\u7f51\u7edc\u6355\u6349\u5f00\u53d1\u8005\u4e92\u52a8\uff0c\u5e76\u5f00\u53d1\u8bc6\u522b\u6d3b\u52a8\u7ea7\u8054\uff08\u5373\u5f00\u53d1\u8005\u6d3b\u52a8\u5728\u7f51\u7edc\u4e2d\u4f20\u64ad\uff09\u7684\u65b9\u6cd5\u3002", "result": "\u572850\u4e2a\u4e3b\u8981OSS\u793e\u533a\u7684\u6570\u636e\u96c6\u4e2d\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u9879\u76ee\u4e2d\u6d3b\u52a8\u7ea7\u8054\u662f\u7edf\u8ba1\u663e\u8457\u7684\u73b0\u8c61\uff1b\u8be5\u53d1\u73b0\u53ef\u7528\u4e8e\u6784\u5efa\u6709\u6548\u7684\u5f00\u53d1\u8005\u6d41\u5931\u9884\u6d4b\u65b9\u6cd5\u3002", "conclusion": "\u6d3b\u52a8\u7ea7\u8054\u662f\u7406\u89e3\u5f00\u6e90\u793e\u533a\u4e2d\u5f00\u53d1\u8005\u6d41\u5931\u4e0e\u7559\u5b58\u7684\u5173\u952e\u673a\u5236\uff0c\u63ed\u793a\u4e86\u534f\u4f5c\u8f6f\u4ef6\u9879\u76ee\u4e2d\u6d8c\u73b0\u7684\u96c6\u4f53\u793e\u4f1a\u52a8\u6001\u3002"}}
{"id": "2509.26204", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.26204", "abs": "https://arxiv.org/abs/2509.26204", "authors": ["Rangeet Pan", "Tyler Stennett", "Raju Pavuluri", "Nate Levin", "Alessandro Orso", "Saurabh Sinha"], "title": "Hamster: A Large-Scale Study and Characterization of Developer-Written Tests", "comment": null, "summary": "Automated test generation (ATG), which aims to reduce the cost of manual test\nsuite development, has been investigated for decades and has produced countless\ntechniques based on a variety of approaches: symbolic analysis, search-based,\nrandom and adaptive-random, learning-based, and, most recently,\nlarge-language-model-based approaches. However, despite this large body of\nresearch, there is still a gap in our understanding of the characteristics of\ndeveloper-written tests and, consequently, in our assessment of how well ATG\ntechniques and tools can generate realistic and representative tests. To bridge\nthis gap, we conducted an extensive empirical study of developer-written tests\nfor Java applications, covering 1.7 million test cases from open-source\nrepositories. Our study is the first of its kind in studying aspects of\ndeveloper-written tests that are mostly neglected in the existing literature,\nsuch as test scope, test fixtures and assertions, types of inputs, and use of\nmocking. Based on the characterization, we then compare existing tests with\nthose generated by two state-of-the-art ATG tools. Our results highlight that a\nvast majority of developer-written tests exhibit characteristics that are\nbeyond the capabilities of current ATG tools. Finally, based on the insights\ngained from the study, we identify promising research directions that can help\nbridge the gap between current tool capabilities and more effective tool\nsupport for developer testing practices. We hope that this work can set the\nstage for new advances in the field and bring ATG tools closer to generating\nthe types of tests developers write.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u5bf9170\u4e07\u6761Java\u5f00\u53d1\u8005\u7f16\u5199\u7684\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u5b9e\u8bc1\u7814\u7a76\uff0c\u63ed\u793a\u4e86\u5f53\u524d\u81ea\u52a8\u5316\u6d4b\u8bd5\u751f\u6210\uff08ATG\uff09\u5de5\u5177\u5728\u751f\u6210\u771f\u5b9e\u3001\u5177\u6709\u4ee3\u8868\u6027\u7684\u6d4b\u8bd5\u65b9\u9762\u4e0e\u5f00\u53d1\u8005\u5b9e\u8df5\u4e4b\u95f4\u5b58\u5728\u663e\u8457\u5dee\u8ddd\uff0c\u5e76\u636e\u6b64\u63d0\u51fa\u4e86\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002", "motivation": "\u5c3d\u7ba1\u81ea\u52a8\u5316\u6d4b\u8bd5\u751f\u6210\uff08ATG\uff09\u5df2\u6709\u5927\u91cf\u7814\u7a76\uff0c\u4f46\u5b66\u754c\u5bf9\u5f00\u53d1\u8005\u7f16\u5199\u6d4b\u8bd5\u7684\u7279\u5f81\u7406\u89e3\u4e0d\u8db3\uff0c\u5bfc\u81f4\u96be\u4ee5\u8bc4\u4f30\u73b0\u6709ATG\u5de5\u5177\u751f\u6210\u6d4b\u8bd5\u7684\u771f\u5b9e\u6027\u548c\u4ee3\u8868\u6027\u3002", "method": "\u5bf9\u6765\u81ea\u5f00\u6e90\u4ed3\u5e93\u7684170\u4e07\u6761Java\u5f00\u53d1\u8005\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u5927\u89c4\u6a21\u5b9e\u8bc1\u5206\u6790\uff0c\u8003\u5bdf\u6d4b\u8bd5\u8303\u56f4\u3001\u6d4b\u8bd5\u5939\u5177\u3001\u65ad\u8a00\u3001\u8f93\u5165\u7c7b\u578b\u548c\u6a21\u62df\u4f7f\u7528\u7b49\u88ab\u5ffd\u89c6\u7684\u7ef4\u5ea6\uff0c\u5e76\u4e0e\u4e24\u79cd\u524d\u6cbfATG\u5de5\u5177\u751f\u6210\u7684\u6d4b\u8bd5\u8fdb\u884c\u5bf9\u6bd4\u3002", "result": "\u5927\u591a\u6570\u5f00\u53d1\u8005\u7f16\u5199\u7684\u6d4b\u8bd5\u5177\u5907\u5f53\u524dATG\u5de5\u5177\u65e0\u6cd5\u751f\u6210\u7684\u7279\u6027\uff0c\u8868\u660e\u73b0\u6709\u5de5\u5177\u5728\u6a21\u62df\u771f\u5b9e\u6d4b\u8bd5\u5b9e\u8df5\u65b9\u9762\u5b58\u5728\u660e\u663e\u4e0d\u8db3\u3002", "conclusion": "\u57fa\u4e8e\u7814\u7a76\u53d1\u73b0\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u82e5\u5e72\u6709\u524d\u666f\u7684\u7814\u7a76\u65b9\u5411\uff0c\u65e8\u5728\u7f29\u5c0fATG\u5de5\u5177\u80fd\u529b\u4e0e\u5f00\u53d1\u8005\u5b9e\u9645\u6d4b\u8bd5\u9700\u6c42\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u63a8\u52a8\u8be5\u9886\u57df\u53d1\u5c55\u3002"}}
{"id": "2509.26336", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.26336", "abs": "https://arxiv.org/abs/2509.26336", "authors": ["Zhouruixing Zhu", "Zhihan Jiang", "Tianyi Yang", "Pinjia He"], "title": "UniSage: A Unified and Post-Analysis-Aware Sampling for Microservices", "comment": null, "summary": "Traces and logs are essential for observability and fault diagnosis in modern\ndistributed systems. However, their ever-growing volume introduces substantial\nstorage overhead and complicates troubleshooting. Existing approaches typically\nadopt a sample-before-analysis paradigm: even when guided by data heuristics,\nthey inevitably discard failure-related information and hinder transparency in\ndiagnosing system behavior. To address this, we introduce UniSage, the first\nunified framework to sample both traces and logs using a post-analysis-aware\nparadigm. Instead of discarding data upfront, UniSagefirst performs lightweight\nand multi-modal anomaly detection and root cause analysis (RCA) on the complete\ndata stream. This process yields fine-grained, service-level diagnostic\ninsights that guide a dual-pillar sampling strategy for handling both normal\nand anomalous scenarios: an analysis-guided sampler prioritizes data implicated\nby RCA, while an edge-case-based sampler ensures rare but critical behaviors\nare captured. Together, these pillars ensure comprehensive coverage of critical\nsignals without excessive redundancy. Extensive experiments demonstrate that\nUniSage significantly outperforms state-of-the-art baselines. At a 2.5%\nsampling rate, it captures 56.5% of critical traces and 96.25% of relevant\nlogs, while improving the accuracy (AC@1) of downstream root cause analysis by\n42.45%. Furthermore, its efficient pipeline processes 10 minutes of telemetry\ndata in under 5 seconds, demonstrating its practicality for production\nenvironments.", "AI": {"tldr": "UniSage \u662f\u4e00\u4e2a\u7edf\u4e00\u7684 traces \u548c logs \u91c7\u6837\u6846\u67b6\uff0c\u91c7\u7528\u201c\u5206\u6790\u540e\u91c7\u6837\u201d\u8303\u5f0f\uff0c\u5728\u5b8c\u6574\u6570\u636e\u6d41\u4e0a\u5148\u8fdb\u884c\u8f7b\u91cf\u7ea7\u591a\u6a21\u6001\u5f02\u5e38\u68c0\u6d4b\u4e0e\u6839\u56e0\u5206\u6790\uff08RCA\uff09\uff0c\u518d\u57fa\u4e8e\u5206\u6790\u7ed3\u679c\u6307\u5bfc\u53cc\u652f\u67f1\u91c7\u6837\u7b56\u7565\uff0c\u663e\u8457\u63d0\u5347\u5173\u952e\u4fe1\u53f7\u6355\u83b7\u7387\u4e0e\u4e0b\u6e38 RCA \u51c6\u786e\u6027\uff0c\u540c\u65f6\u5177\u5907\u9ad8\u6548\u6027\u3002", "motivation": "\u73b0\u6709\u91c7\u6837\u65b9\u6cd5\u591a\u91c7\u7528\u201c\u5148\u91c7\u6837\u540e\u5206\u6790\u201d\u8303\u5f0f\uff0c\u5373\u4f7f\u57fa\u4e8e\u542f\u53d1\u5f0f\u7b56\u7565\uff0c\u4ecd\u4f1a\u4e22\u5f03\u4e0e\u6545\u969c\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5f71\u54cd\u7cfb\u7edf\u884c\u4e3a\u8bca\u65ad\u7684\u900f\u660e\u6027\u548c\u51c6\u786e\u6027\u3002", "method": "UniSage \u9996\u5148\u5bf9\u5b8c\u6574\u6570\u636e\u6d41\u6267\u884c\u8f7b\u91cf\u7ea7\u3001\u591a\u6a21\u6001\u7684\u5f02\u5e38\u68c0\u6d4b\u4e0e RCA\uff0c\u83b7\u5f97\u7ec6\u7c92\u5ea6\u670d\u52a1\u7ea7\u8bca\u65ad\u4fe1\u606f\uff1b\u968f\u540e\u91c7\u7528\u53cc\u652f\u67f1\u91c7\u6837\u7b56\u7565\uff1a\u4e00\u662f\u5206\u6790\u5f15\u5bfc\u91c7\u6837\u5668\uff0c\u4f18\u5148\u4fdd\u7559 RCA \u6307\u51fa\u7684\u5173\u952e\u6570\u636e\uff1b\u4e8c\u662f\u8fb9\u7f18\u6848\u4f8b\u91c7\u6837\u5668\uff0c\u786e\u4fdd\u6355\u83b7\u7f55\u89c1\u4f46\u5173\u952e\u7684\u884c\u4e3a\u3002", "result": "\u5728 2.5% \u91c7\u6837\u7387\u4e0b\uff0cUniSage \u6355\u83b7\u4e86 56.5% \u7684\u5173\u952e traces \u548c 96.25% \u7684\u76f8\u5173 logs\uff0c\u5e76\u5c06\u4e0b\u6e38 RCA \u7684\u51c6\u786e\u7387\uff08AC@1\uff09\u63d0\u5347\u4e86 42.45%\uff1b\u5176\u6d41\u6c34\u7ebf\u53ef\u5728 5 \u79d2\u5185\u5904\u7406 10 \u5206\u949f\u9065\u6d4b\u6570\u636e\uff0c\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u3002", "conclusion": "UniSage \u901a\u8fc7\u540e\u5206\u6790\u611f\u77e5\u7684\u7edf\u4e00\u91c7\u6837\u6846\u67b6\uff0c\u5728\u663e\u8457\u964d\u4f4e\u5b58\u50a8\u5f00\u9500\u7684\u540c\u65f6\uff0c\u6709\u6548\u4fdd\u7559\u4e86\u8bca\u65ad\u6240\u9700\u7684\u5173\u952e\u4fe1\u606f\uff0c\u63d0\u5347\u4e86\u6545\u969c\u8bca\u65ad\u7684\u51c6\u786e\u6027\u548c\u6548\u7387\u3002"}}
{"id": "2509.26422", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.26422", "abs": "https://arxiv.org/abs/2509.26422", "authors": ["Michelle Barker", "Jeremy Cohen", "Pedro Hern\u00e1ndez Serrano", "Daniel S. Katz", "Kim Martin", "Dan Rudmann", "Hugh Shanahan"], "title": "Institutional Policy Pathways for Supporting Research Software: Global Trends and Local Practices", "comment": null, "summary": "As research software becomes increasingly central to modern science,\nresearch-performing organisations (RPOs) need to ensure that their investment\nin people, skills and infrastructure around research software produces\nsustainable and maintainable software that improves the research they perform,\nwhich in turn improves the overall institution and its reputation and funding,\nfor example, by competing with peers who lack this approach. However, research\ninstitution management and recognition of research software and its personnel\nhas mostly often developed in an ad hoc manner. RPO training infrastructures,\nrecognition and reward structures, have not developed at a sufficient rate to\nsupport and encourage both the widespread use of research software best\npractices and the long-term support for technical roles that is required. To\nbegin to address this fundamental problem for modern research environments,\nRPOs must implement and adopt robust policies to support research software\ndevelopment, use, and sustainability. Despite growing momentum from funders and\npublishers around FAIR and open science principles, research\ninstitutional-level policies specifically addressing research software remain\nlimited or lacking in breadth.\n  This article outlines the work of the Policies in Research Organisations for\nResearch Software (PRO4RS) Working Group (WG), a joint initiative of the\nResearch Software Alliance (ReSA) and the Research Data Alliance (RDA), which\nexamined and advanced research software policy development across institutions\nworldwide. After consideration of the rationale for institutional policies on\nresearch software, the PRO4RS WG outputs and analysis are utilised to highlight\ncritical policy gaps, particularly related to consideration of research\nsoftware personnel in policy work focused on reform of research assessment.", "AI": {"tldr": "\u672c\u6587\u4ecb\u7ecd\u4e86PRO4RS\u5de5\u4f5c\u7ec4\u7684\u5de5\u4f5c\uff0c\u8be5\u5de5\u4f5c\u7ec4\u7531ReSA\u548cRDA\u8054\u5408\u53d1\u8d77\uff0c\u65e8\u5728\u63a8\u52a8\u5168\u7403\u7814\u7a76\u673a\u6784\u5236\u5b9a\u548c\u5b8c\u5584\u7814\u7a76\u8f6f\u4ef6\u76f8\u5173\u653f\u7b56\uff0c\u7279\u522b\u5f3a\u8c03\u5728\u79d1\u7814\u8bc4\u4f30\u6539\u9769\u4e2d\u5e94\u91cd\u89c6\u7814\u7a76\u8f6f\u4ef6\u4eba\u5458\u7684\u89d2\u8272\u3002", "motivation": "\u7814\u7a76\u8f6f\u4ef6\u5728\u73b0\u4ee3\u79d1\u7814\u4e2d\u65e5\u76ca\u91cd\u8981\uff0c\u4f46\u7814\u7a76\u673a\u6784\u5728\u8f6f\u4ef6\u4eba\u5458\u7ba1\u7406\u3001\u57f9\u8bad\u3001\u8ba4\u53ef\u4e0e\u6fc0\u52b1\u673a\u5236\u65b9\u9762\u53d1\u5c55\u6ede\u540e\uff0c\u7f3a\u4e4f\u7cfb\u7edf\u6027\u653f\u7b56\u652f\u6301\uff0c\u963b\u788d\u4e86\u8f6f\u4ef6\u53ef\u6301\u7eed\u6027\u548c\u79d1\u7814\u8d28\u91cf\u63d0\u5347\u3002", "method": "\u901a\u8fc7PRO4RS\u5de5\u4f5c\u7ec4\u5bf9\u5168\u7403\u7814\u7a76\u673a\u6784\u7684\u7814\u7a76\u8f6f\u4ef6\u653f\u7b56\u8fdb\u884c\u8c03\u7814\u4e0e\u5206\u6790\uff0c\u8bc6\u522b\u653f\u7b56\u7a7a\u767d\uff0c\u7279\u522b\u662f\u79d1\u7814\u8bc4\u4f30\u6539\u9769\u4e2d\u5bf9\u7814\u7a76\u8f6f\u4ef6\u4eba\u5458\u7684\u5ffd\u89c6\u95ee\u9898\u3002", "result": "\u63ed\u793a\u4e86\u5f53\u524d\u7814\u7a76\u673a\u6784\u5728\u7814\u7a76\u8f6f\u4ef6\u653f\u7b56\u65b9\u9762\u7684\u4e0d\u8db3\uff0c\u7279\u522b\u662f\u5728\u4eba\u5458\u8ba4\u53ef\u4e0e\u957f\u671f\u652f\u6301\u65b9\u9762\uff0c\u5e76\u63d0\u51fa\u4e86\u5236\u5b9a\u5065\u5168\u653f\u7b56\u7684\u5fc5\u8981\u6027\u3002", "conclusion": "\u7814\u7a76\u673a\u6784\u4e9f\u9700\u5236\u5b9a\u5168\u9762\u7684\u7814\u7a76\u8f6f\u4ef6\u653f\u7b56\uff0c\u5c06\u8f6f\u4ef6\u4eba\u5458\u7eb3\u5165\u79d1\u7814\u8bc4\u4f30\u4f53\u7cfb\uff0c\u4ee5\u652f\u6301\u8f6f\u4ef6\u53ef\u6301\u7eed\u53d1\u5c55\u5e76\u63d0\u5347\u6574\u4f53\u79d1\u7814\u80fd\u529b\u4e0e\u58f0\u8a89\u3002"}}
{"id": "2509.26458", "categories": ["cs.SE", "68Q60, 03B70", "D.2.5"], "pdf": "https://arxiv.org/pdf/2509.26458", "abs": "https://arxiv.org/abs/2509.26458", "authors": ["Robin Lee", "Youngho Nam"], "title": "EQ-Robin: Generating Multiple Minimal Unique-Cause MC/DC Test Suites", "comment": "5 pages", "summary": "Modified Condition/Decision Coverage (MC/DC), particularly its strict\nUnique-Cause form, is a cornerstone of safety-critical software verification. A\nrecent algorithm, \"Robin's Rule,\" introduced a deterministic method to\nconstruct the theoretical minimum of N+1 test cases for Singular Boolean\nExpressions (SBEs). However, this approach yields only a single test suite,\nintroducing a critical risk: if a test case forming a required 'independence\npair' is an illegal input forbidden by system constraints, the suite fails to\nachieve 100% coverage. This paper proposes EQ-Robin, a lightweight pipeline\nthat systematically generates a family of minimal Unique-Cause MC/DC suites to\nmitigate this risk. We introduce a method for systematically generating\nsemantically equivalent SBEs by applying algebraic rearrangements to an\nAbstract Syntax Tree (AST) representation of the expression. By applying\nRobin's Rule to each structural variant, a diverse set of test suites can be\nproduced. This provides a resilient path to discovering a valid test suite that\npreserves the N+1 minimality guarantee while navigating real-world constraints.\nWe outline an evaluation plan on TCAS-II-derived SBEs to demonstrate how\nEQ-Robin offers a practical solution for ensuring robust MC/DC coverage.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faEQ-Robin\u65b9\u6cd5\uff0c\u901a\u8fc7\u751f\u6210\u8bed\u4e49\u7b49\u4ef7\u4f46\u7ed3\u6784\u4e0d\u540c\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u53d8\u4f53\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u53d8\u4f53\u5e94\u7528Robin's Rule\u7b97\u6cd5\uff0c\u4ece\u800c\u7cfb\u7edf\u6027\u5730\u6784\u5efa\u591a\u4e2a\u6ee1\u8db3Unique-Cause MC/DC\u6700\u5c0f\u6d4b\u8bd5\u7528\u4f8b\u6570\uff08N+1\uff09\u7684\u6d4b\u8bd5\u5957\u4ef6\uff0c\u4ee5\u5e94\u5bf9\u56e0\u7cfb\u7edf\u7ea6\u675f\u5bfc\u81f4\u67d0\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u975e\u6cd5\u800c\u65e0\u6cd5\u8fbe\u6210100%\u8986\u76d6\u7684\u95ee\u9898\u3002", "motivation": "\u73b0\u6709Robin's Rule\u7b97\u6cd5\u867d\u80fd\u4e3a\u5355\u4e00\u5e03\u5c14\u8868\u8fbe\u5f0f\u751f\u6210\u6700\u5c0f\u6d4b\u8bd5\u5957\u4ef6\uff0c\u4f46\u4ec5\u4ea7\u751f\u4e00\u4e2a\u6d4b\u8bd5\u5957\u4ef6\uff0c\u82e5\u5176\u4e2d\u5173\u952e\u6d4b\u8bd5\u7528\u4f8b\u56e0\u7cfb\u7edf\u7ea6\u675f\u800c\u975e\u6cd5\uff0c\u5219\u65e0\u6cd5\u5b9e\u73b0100% MC/DC\u8986\u76d6\u3002\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u80fd\u751f\u6210\u591a\u4e2a\u6700\u5c0f\u6d4b\u8bd5\u5957\u4ef6\u7684\u65b9\u6cd5\u4ee5\u63d0\u5347\u9c81\u68d2\u6027\u3002", "method": "\u5c06\u5e03\u5c14\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\uff0c\u901a\u8fc7\u4ee3\u6570\u91cd\u6392\u751f\u6210\u591a\u4e2a\u8bed\u4e49\u7b49\u4ef7\u4f46\u7ed3\u6784\u4e0d\u540c\u7684\u8868\u8fbe\u5f0f\u53d8\u4f53\uff0c\u518d\u5bf9\u6bcf\u4e2a\u53d8\u4f53\u5e94\u7528Robin's Rule\u7b97\u6cd5\uff0c\u4ece\u800c\u7cfb\u7edf\u6027\u5730\u751f\u6210\u4e00\u65cf\u6700\u5c0fUnique-Cause MC/DC\u6d4b\u8bd5\u5957\u4ef6\u3002", "result": "\u8be5\u65b9\u6cd5\u80fd\u591f\u751f\u6210\u591a\u6837\u5316\u7684\u6700\u5c0f\u6d4b\u8bd5\u5957\u4ef6\u96c6\u5408\uff0c\u5728\u4fdd\u6301N+1\u6700\u5c0f\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u7684\u540c\u65f6\uff0c\u63d0\u9ad8\u5728\u5b58\u5728\u7cfb\u7edf\u7ea6\u675f\u6761\u4ef6\u4e0b\u627e\u5230\u5408\u6cd5\u4e14\u6ee1\u8db3100% MC/DC\u8986\u76d6\u7684\u6d4b\u8bd5\u5957\u4ef6\u7684\u53ef\u80fd\u6027\u3002", "conclusion": "EQ-Robin\u4e3a\u5b89\u5168\u5173\u952e\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u9c81\u68d2\u4e14\u6700\u5c0f\u7684MC/DC\u8986\u76d6\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9e\u7528\u4e14\u8f7b\u91cf\u7ea7\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u5b58\u5728\u8f93\u5165\u7ea6\u675f\u7684\u5b9e\u9645\u573a\u666f\u3002"}}
{"id": "2509.26463", "categories": ["cs.SE", "D.2.5"], "pdf": "https://arxiv.org/pdf/2509.26463", "abs": "https://arxiv.org/abs/2509.26463", "authors": ["Junsong Pu", "Yichen Li", "Zhuangbin Chen", "Jinyang Liu", "Zhihan Jiang", "Jianjun Chen", "Rui Shi", "Zibin Zheng", "Tieying Zhang"], "title": "ErrorPrism: Reconstructing Error Propagation Paths in Cloud Service Systems", "comment": "12 pages, 6 figures, 1 table, this paper has been accepted by the\n  40th IEEE/ACM International Conference on Automated Software Engineering, ASE\n  2025", "summary": "Reliability management in cloud service systems is challenging due to the\ncascading effect of failures. Error wrapping, a practice prevalent in modern\nmicroservice development, enriches errors with context at each layer of the\nfunction call stack, constructing an error chain that describes a failure from\nits technical origin to its business impact. However, this also presents a\nsignificant traceability problem when recovering the complete error propagation\npath from the final log message back to its source. Existing approaches are\nineffective at addressing this problem. To fill this gap, we present ErrorPrism\nin this work for automated reconstruction of error propagation paths in\nproduction microservice systems. ErrorPrism first performs static analysis on\nservice code repositories to build a function call graph and map log strings to\nrelevant candidate functions. This significantly reduces the path search space\nfor subsequent analysis. Then, ErrorPrism employs an LLM agent to perform an\niterative backward search to accurately reconstruct the complete, multi-hop\nerror path. Evaluated on 67 production microservices at ByteDance, ErrorPrism\nachieves 97.0% accuracy in reconstructing paths for 102 real-world errors,\noutperforming existing static analysis and LLM-based approaches. ErrorPrism\nprovides an effective and practical tool for root cause analysis in industrial\nmicroservice systems.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86ErrorPrism\uff0c\u4e00\u79cd\u7528\u4e8e\u5728\u5fae\u670d\u52a1\u7cfb\u7edf\u4e2d\u81ea\u52a8\u91cd\u6784\u9519\u8bef\u4f20\u64ad\u8def\u5f84\u7684\u5de5\u5177\uff0c\u7ed3\u5408\u9759\u6001\u5206\u6790\u4e0e\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u4ee3\u7406\uff0c\u5b9e\u73b0\u4e86\u9ad8\u7cbe\u5ea6\u7684\u6839\u56e0\u5206\u6790\u3002", "motivation": "\u73b0\u4ee3\u5fae\u670d\u52a1\u7cfb\u7edf\u4e2d\u9519\u8bef\u5305\u88c5\uff08error wrapping\uff09\u867d\u7136\u589e\u5f3a\u4e86\u9519\u8bef\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u4f46\u4e5f\u5bfc\u81f4\u4ece\u6700\u7ec8\u65e5\u5fd7\u56de\u6eaf\u5b8c\u6574\u9519\u8bef\u4f20\u64ad\u8def\u5f84\u53d8\u5f97\u56f0\u96be\uff0c\u73b0\u6709\u65b9\u6cd5\u96be\u4ee5\u6709\u6548\u89e3\u51b3\u8fd9\u4e00\u53ef\u8ffd\u6eaf\u6027\u95ee\u9898\u3002", "method": "ErrorPrism\u9996\u5148\u5bf9\u670d\u52a1\u4ee3\u7801\u5e93\u8fdb\u884c\u9759\u6001\u5206\u6790\uff0c\u6784\u5efa\u51fd\u6570\u8c03\u7528\u56fe\u5e76\u5c06\u65e5\u5fd7\u5b57\u7b26\u4e32\u6620\u5c04\u5230\u5019\u9009\u51fd\u6570\uff0c\u7f29\u5c0f\u641c\u7d22\u7a7a\u95f4\uff1b\u7136\u540e\u5229\u7528LLM\u4ee3\u7406\u8fdb\u884c\u8fed\u4ee3\u5f0f\u53cd\u5411\u641c\u7d22\uff0c\u91cd\u6784\u591a\u8df3\u9519\u8bef\u4f20\u64ad\u8def\u5f84\u3002", "result": "\u5728\u5b57\u8282\u8df3\u52a867\u4e2a\u751f\u4ea7\u5fae\u670d\u52a1\u4e0a\u8bc4\u4f30\uff0cErrorPrism\u5bf9102\u4e2a\u771f\u5b9e\u9519\u8bef\u7684\u8def\u5f84\u91cd\u6784\u51c6\u786e\u7387\u8fbe97.0%\uff0c\u4f18\u4e8e\u73b0\u6709\u9759\u6001\u5206\u6790\u548c\u57fa\u4e8eLLM\u7684\u65b9\u6cd5\u3002", "conclusion": "ErrorPrism\u4e3a\u5de5\u4e1a\u7ea7\u5fae\u670d\u52a1\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u3001\u5b9e\u7528\u7684\u9519\u8bef\u4f20\u64ad\u8def\u5f84\u91cd\u6784\u4e0e\u6839\u56e0\u5206\u6790\u5de5\u5177\u3002"}}
{"id": "2509.26546", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.26546", "abs": "https://arxiv.org/abs/2509.26546", "authors": ["Meghana Sistla", "Gogul Balakrishnan", "Pat Rondon", "Jos\u00e9 Cambronero", "Michele Tufano", "Satish Chandra"], "title": "Towards Verified Code Reasoning by LLMs", "comment": "43 pages", "summary": "While LLM-based agents are able to tackle a wide variety of code reasoning\nquestions, the answers are not always correct. This prevents the agent from\nbeing useful in situations where high precision is desired: (1) helping a\nsoftware engineer understand a new code base, (2) helping a software engineer\nduring code review sessions, and (3) ensuring that the code generated by an\nautomated code generation system meets certain requirements (e.g. fixes a bug,\nimproves readability, implements a feature).\n  As a result of this lack of trustworthiness, the agent's answers need to be\nmanually verified before they can be trusted. Manually confirming responses\nfrom a code reasoning agent requires human effort and can result in slower\ndeveloper productivity, which weakens the assistance benefits of the agent. In\nthis paper, we describe a method to automatically validate the answers provided\nby a code reasoning agent by verifying its reasoning steps. At a very high\nlevel, the method consists of extracting a formal representation of the agent's\nresponse and, subsequently, using formal verification and program analysis\ntools to verify the agent's reasoning steps.\n  We applied this approach to a benchmark set of 20 uninitialized variable\nerrors detected by sanitizers and 20 program equivalence queries. For the\nuninitialized variable errors, the formal verification step was able to\nvalidate the agent's reasoning on 13/20 examples, and for the program\nequivalence queries, the formal verification step successfully caught 6/8\nincorrect judgments made by the agent.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u901a\u8fc7\u5f62\u5f0f\u5316\u9a8c\u8bc1\u81ea\u52a8\u6821\u9a8c\u5927\u8bed\u8a00\u6a21\u578b\u4ee3\u7801\u63a8\u7406\u7b54\u6848\u6b63\u786e\u6027\u7684\u65b9\u6cd5\uff0c\u5728\u4e24\u7c7b\u4efb\u52a1\u4e0a\u9a8c\u8bc1\u4e86\u5176\u6709\u6548\u6027\u3002", "motivation": "\u5927\u8bed\u8a00\u6a21\u578b\u5728\u4ee3\u7801\u63a8\u7406\u4efb\u52a1\u4e2d\u867d\u80fd\u529b\u5f3a\uff0c\u4f46\u7b54\u6848\u4e0d\u4e00\u5b9a\u6b63\u786e\uff0c\u5bfc\u81f4\u5728\u9ad8\u7cbe\u5ea6\u9700\u6c42\u573a\u666f\uff08\u5982\u4ee3\u7801\u7406\u89e3\u3001\u4ee3\u7801\u5ba1\u67e5\u3001\u81ea\u52a8\u751f\u6210\u4ee3\u7801\u9a8c\u8bc1\uff09\u4e2d\u96be\u4ee5\u4fe1\u4efb\uff0c\u9700\u4eba\u5de5\u9a8c\u8bc1\uff0c\u5f71\u54cd\u5f00\u53d1\u6548\u7387\u3002", "method": "\u63d0\u53d6\u4ee3\u7801\u63a8\u7406\u4ee3\u7406\u56de\u7b54\u7684\u5f62\u5f0f\u5316\u8868\u793a\uff0c\u5e76\u5229\u7528\u5f62\u5f0f\u5316\u9a8c\u8bc1\u4e0e\u7a0b\u5e8f\u5206\u6790\u5de5\u5177\u81ea\u52a8\u9a8c\u8bc1\u5176\u63a8\u7406\u6b65\u9aa4\u3002", "result": "\u572820\u4e2a\u672a\u521d\u59cb\u5316\u53d8\u91cf\u9519\u8bef\u4e2d\u9a8c\u8bc1\u4e8613\u4e2a\u63a8\u7406\u6b63\u786e\u6027\uff0c\u572820\u4e2a\u7a0b\u5e8f\u7b49\u4ef7\u6027\u67e5\u8be2\u4e2d\u6210\u529f\u8bc6\u522b\u51fa8\u4e2a\u9519\u8bef\u5224\u65ad\u4e2d\u76846\u4e2a\u3002", "conclusion": "\u901a\u8fc7\u5f62\u5f0f\u5316\u9a8c\u8bc1\u53ef\u6709\u6548\u63d0\u5347\u4ee3\u7801\u63a8\u7406\u4ee3\u7406\u7b54\u6848\u7684\u53ef\u4fe1\u5ea6\uff0c\u51cf\u5c11\u4eba\u5de5\u9a8c\u8bc1\u8d1f\u62c5\uff0c\u589e\u5f3a\u5176\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u7684\u8f85\u52a9\u4ef7\u503c\u3002"}}
{"id": "2509.26616", "categories": ["cs.SE", "cs.FL", "cs.PL", "68Q42, 68Q45 (Primary), 68T50 (Secondary)", "D.2.5; F.4.2"], "pdf": "https://arxiv.org/pdf/2509.26616", "abs": "https://arxiv.org/abs/2509.26616", "authors": ["Mohammad Rifat Arefin", "Shanto Rahman", "Christoph Csallner"], "title": "Black-box Context-free Grammar Inference for Readable & Natural Grammars", "comment": "20 pages", "summary": "Black-box context-free grammar inference is crucial for program analysis,\nreverse engineering, and security, yet existing tools such as Arvada, TreeVada,\nand Kedavra struggle with scalability, readability, and accuracy on large,\ncomplex languages. We present NatGI, a novel LLM-guided grammar inference\nframework that extends TreeVada's parse tree recovery with three key\ninnovations: bracket-guided bubble exploration, LLM-driven bubble generation\nand non-terminal labeling, and hierarchical delta debugging (HDD) for\nsystematic tree simplification. Bracket-guided exploration leverages syntactic\ncues such as parentheses to propose well-structured grammar fragments, while\nLLM guidance produces meaningful non-terminal names and selects more promising\nmerges. Finally, HDD incrementally reduces unnecessary rules, which makes the\ngrammars both compact and interpretable. In our experiments, we evaluate NatGI\non a comprehensive benchmark suite ranging from small languages to larger ones\nsuch as lua, c, and mysql. Our results show that NatGI consistently outperforms\nstrong baselines in terms of F1 score. On average, NatGI achieves an F1 score\nof 0.57, which is 25pp (percentage points) higher than the best-performing\nbaseline, TreeVada. In the case of interpretability, our generated grammars\nperform significantly better than those produced by existing approaches.\nLeveraging LLM-based node renaming and bubble exploration, NatGI produces rules\nwith meaningful non-terminal names and compact structures that align more\nclosely with human intuition. As a result, developers and researchers can\nachieve higher accuracy while still being able to easily inspect, verify, and\nreason about the structure and semantics of the induced grammars.", "AI": {"tldr": "NatGI \u662f\u4e00\u79cd\u65b0\u9896\u7684 LLM \u5f15\u5bfc\u7684\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u63a8\u65ad\u6846\u67b6\uff0c\u901a\u8fc7\u62ec\u53f7\u5f15\u5bfc\u7684 bubble \u63a2\u7d22\u3001LLM \u9a71\u52a8\u7684 bubble \u751f\u6210\u4e0e\u975e\u7ec8\u7ed3\u7b26\u547d\u540d\uff0c\u4ee5\u53ca\u5c42\u6b21\u5316 delta \u8c03\u8bd5\uff08HDD\uff09\u663e\u8457\u63d0\u5347\u4e86\u6587\u6cd5\u63a8\u65ad\u7684\u51c6\u786e\u6027\u4e0e\u53ef\u89e3\u91ca\u6027\uff0c\u5728\u591a\u4e2a\u8bed\u8a00\u57fa\u51c6\u4e0a F1 \u5206\u6570\u5e73\u5747\u9886\u5148\u6700\u5f3a\u57fa\u7ebf 25 \u4e2a\u767e\u5206\u70b9\u3002", "motivation": "\u73b0\u6709\u6587\u6cd5\u63a8\u65ad\u5de5\u5177\uff08\u5982 Arvada\u3001TreeVada \u548c Kedavra\uff09\u5728\u5904\u7406\u5927\u578b\u590d\u6742\u8bed\u8a00\u65f6\u9762\u4e34\u53ef\u6269\u5c55\u6027\u3001\u53ef\u8bfb\u6027\u548c\u51c6\u786e\u6027\u4e0d\u8db3\u7684\u95ee\u9898\uff0c\u4e9f\u9700\u4e00\u79cd\u66f4\u9ad8\u6548\u3001\u53ef\u89e3\u91ca\u4e14\u51c6\u786e\u7684\u9ed1\u76d2\u6587\u6cd5\u63a8\u65ad\u65b9\u6cd5\u3002", "method": "NatGI \u5728 TreeVada \u7684\u89e3\u6790\u6811\u6062\u590d\u57fa\u7840\u4e0a\u5f15\u5165\u4e09\u9879\u521b\u65b0\uff1a1\uff09\u5229\u7528\u62ec\u53f7\u7b49\u8bed\u6cd5\u7ebf\u7d22\u8fdb\u884c\u7ed3\u6784\u826f\u597d\u7684\u6587\u6cd5\u7247\u6bb5\u63a2\u7d22\uff1b2\uff09\u501f\u52a9\u5927\u8bed\u8a00\u6a21\u578b\u751f\u6210 bubble \u5e76\u4e3a\u975e\u7ec8\u7ed3\u7b26\u8d4b\u4e88\u8bed\u4e49\u5316\u540d\u79f0\uff1b3\uff09\u91c7\u7528\u5c42\u6b21\u5316 delta \u8c03\u8bd5\uff08HDD\uff09\u9010\u6b65\u7b80\u5316\u6587\u6cd5\u89c4\u5219\u4ee5\u63d0\u5347\u7d27\u51d1\u6027\u4e0e\u53ef\u8bfb\u6027\u3002", "result": "\u5728\u5305\u62ec Lua\u3001C \u548c MySQL \u5728\u5185\u7684\u591a\u79cd\u8bed\u8a00\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cNatGI \u5e73\u5747 F1 \u5206\u6570\u8fbe 0.57\uff0c\u6bd4\u6700\u4f73\u57fa\u7ebf TreeVada \u9ad8\u51fa 25 \u4e2a\u767e\u5206\u70b9\uff0c\u540c\u65f6\u751f\u6210\u7684\u6587\u6cd5\u5728\u53ef\u89e3\u91ca\u6027\u65b9\u9762\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "conclusion": "NatGI \u901a\u8fc7\u7ed3\u5408 LLM \u4e0e\u7ed3\u6784\u5316\u63a2\u7d22\u7b56\u7565\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u73b0\u6709\u6587\u6cd5\u63a8\u65ad\u5de5\u5177\u5728\u51c6\u786e\u6027\u4e0e\u53ef\u89e3\u91ca\u6027\u4e4b\u95f4\u7684\u6743\u8861\u95ee\u9898\uff0c\u4e3a\u7a0b\u5e8f\u5206\u6790\u3001\u9006\u5411\u5de5\u7a0b\u548c\u5b89\u5168\u7814\u7a76\u63d0\u4f9b\u4e86\u66f4\u53ef\u9760\u3001\u6613\u7406\u89e3\u7684\u6587\u6cd5\u63a8\u65ad\u65b9\u6848\u3002"}}
