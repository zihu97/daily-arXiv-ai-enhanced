{"id": "2510.07464", "categories": ["cs.NI", "cs.ET"], "pdf": "https://arxiv.org/pdf/2510.07464", "abs": "https://arxiv.org/abs/2510.07464", "authors": ["Waleed Bin Qaim", "Oznur Ozkasap", "Rabia Qadar", "Moncef Gabbouj"], "title": "DRACO: Data Replication and Collection Framework for Enhanced Data Availability and Robustness in IoT Networks", "comment": "14 pages, 9 figures, Under review in the IEEE Internet of Things\n  Journal", "summary": "The Internet of Things (IoT) bridges the gap between the physical and digital\nworlds, enabling seamless interaction with real-world objects via the Internet.\nHowever, IoT systems face significant challenges in ensuring efficient data\ngeneration, collection, and management, particularly due to the\nresource-constrained and unreliable nature of connected devices, which can lead\nto data loss. This paper presents DRACO (Data Replication and Collection), a\nframework that integrates a distributed hop-by-hop data replication approach\nwith an overhead-free mobile sink-based data collection strategy. DRACO\nenhances data availability, optimizes replica placement, and ensures efficient\ndata retrieval even under node failures and varying network densities.\nExtensive ns-3 simulations demonstrate that DRACO outperforms state-of-the-art\ntechniques, improving data availability by up to 15% and 34%, and replica\ncreation by up to 18% and 40%, compared to greedy and random replication\ntechniques, respectively. DRACO also ensures efficient data dissemination\nthrough optimized replica distribution and achieves superior data collection\nefficiency under varying node densities and failure scenarios as compared to\ncommonly used uncontrolled sink mobility approaches namely random walk and\nself-avoiding random walk. By addressing key IoT data management challenges,\nDRACO offers a scalable and resilient solution well-suited for emerging use\ncases."}
{"id": "2510.08001", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.08001", "abs": "https://arxiv.org/abs/2510.08001", "authors": ["Mohsen Ahadi", "Omid Esrafilian", "Florian Kaltenberger", "Adeel Malik"], "title": "TDoA-Based Self-Supervised Channel Charting with NLoS Mitigation", "comment": null, "summary": "Channel Charting (CC) has emerged as a promising framework for data-driven\nradio localization, yet existing approaches often struggle to scale globally\nand to handle the distortions introduced by non-line-of-sight (NLoS)\nconditions. In this work, we propose a novel CC method that leverages Channel\nImpulse Response (CIR) data enriched with practical features such as Time\nDifference of Arrival (TDoA) and Transmission Reception Point (TRP) locations,\nenabling a self-supervised localization function on a global scale. The\nproposed framework is further enhanced with short-interval User Equipment (UE)\ndisplacement measurements, which improve the continuity and robustness of the\nlearned positioning function. Our algorithm incorporates a mechanism to\nidentify and mask NLoS-induced noisy measurements, leading to significant\nperformance gains. We present the evaluations of our proposed models in a real\n5G testbed and benchmarked against centimeter-accurate Real-Time Kinematic\n(RTK) positioning, in an O-RAN--based 5G network by OpenAirInterface (OAI)\nsoftware at EURECOM. It demonstrated outperforming results against the\nstate-of-the-art semi-supervised and self-supervised CC approaches in a\nreal-world scenario. The results show localization accuracies of 2-4 meters in\n90% of cases, across a range of NLoS ratios. Furthermore, we provide public\ndatasets of CIR recordings, along with the true position labels used in this\npaper's evaluation."}
{"id": "2510.08072", "categories": ["cs.NI", "cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08072", "abs": "https://arxiv.org/abs/2510.08072", "authors": ["Vamsi Addanki"], "title": "When Light Bends to the Collective Will: A Theory and Vision for Adaptive Photonic Scale-up Domains", "comment": null, "summary": "As chip-to-chip silicon photonics gain traction for their bandwidth and\nenergy efficiency, collective communication has emerged as a critical\nbottleneck in scale-up systems. Programmable photonic interconnects offer a\npromising path forward: by dynamically reconfiguring the fabric, they can\nestablish direct, high-bandwidth optical paths between communicating endpoints\n-- \\emph{synchronously and guided by the structure of collective operations}\n(e.g., AllReduce). However, realizing this vision -- \\emph{when light bends to\nthe collective will} -- requires navigating a fundamental trade-off between\nreconfiguration delay and the performance gains of adaptive topologies.\n  In this paper, we present a simple theoretical framework for adaptive\nphotonic scale-up domains that makes this trade-off explicit and clarifies when\nreconfiguration is worthwhile. Along the way, we highlight a connection -- not\nsurprising but still powerful -- between the Birkhoff--von Neumann (BvN)\ndecomposition, maximum concurrent flow (a classic measure of network\nthroughput), and the well-known $\\alpha$-$\\beta$ cost model for collectives.\nFinally, we outline a research agenda in algorithm design and systems\nintegration that can build on this foundation."}
{"id": "2510.08080", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.08080", "abs": "https://arxiv.org/abs/2510.08080", "authors": ["Abdikarim Mohamed Ibrahim", "Rosdiadee Nordin", "Yahya S. M. Khamayseh", "Angela Amphawan", "Muhammed Basheer Jasser"], "title": "URLLC for 6G Enabled Industry 5.0: A Taxonomy of Architectures, Cross Layer Techniques, and Time Critical Applications", "comment": null, "summary": "The evolution from Industry 4.0 to Industry 5.0 introduces stringent\nrequirements for ultra reliable low latency communication (URLLC) to support\nhuman centric, intelligent, and resilient industrial systems. Sixth-generation\n(6G) wireless networks aim to meet these requirements through sub-millisecond\nend-to-end delays, microsecond level jitter, and near perfect reliability,\nenabled by advances such as terahertz (THz) communication, reconfigurable\nintelligent surfaces (RIS), multi-access edge computing (MEC), and AI driven\ncross layer optimization. This paper presents a comprehensive review of URLLC\nsolutions for 6G enabled industry 5.0, organized into a structured taxonomy\nincluding application domains, key technical enablers, design challenges, and\nperformance enhancements. The survey examines emerging approaches, including\ndigital twin integration, AI/ML based resource orchestration, Network Function\nVirtualization (NFV) enabled service function chaining, and cross domain\nnetworking, while mapping them to critical industrial scenarios such as smart\nmanufacturing, connected healthcare, autonomous mobility, remote control, and\nnext-generation mobile networks. Performance trade-offs between latency,\nreliability, scalability, and energy efficiency are analyzed in the context of\nrepresentative state-of-the-art studies. Finally, the paper identifies open\nchallenges and outlines future research directions to realize deterministic,\nsecure, and sustainable URLLC architectures for Industry 5.0."}
{"id": "2510.07449", "categories": ["cs.AR", "C.1.0"], "pdf": "https://arxiv.org/pdf/2510.07449", "abs": "https://arxiv.org/abs/2510.07449", "authors": ["Georgia Antoniou", "Haris Volos", "Jawad Haj Yahya", "Yiannakis Sazeides"], "title": "How long can you sleep? Idle Time System Inefficiencies and Opportunities", "comment": "3 pages, 3 figures, accepted at the 1st International Workshop on\n  Data Center Energy Efficiency (DCEE2025) 2025", "summary": "This work introduces a model-based framework that reveals the idle\nopportunity of modern servers running latency-critical applications.\nSpecifically, three queuing models, M/M/1, cxM/M/1, and M/M/c, are used to\nestimate the theoretical idle time distribution at the CPU core and system\n(package) level. A comparison of the actual idleness of a real server and that\nfrom the theoretical models reveals significant missed opportunities to enter\ndeep idle states. This inefficiency is attributed to the idle-governor\ninaccuracy and the high latency to transition to/from legacy deep-idle states.\nThe proposed methodology offers the means for an early-stage design exploration\nand insights into idle time behavior and opportunities for varying server\nsystem configurations and load."}
{"id": "2510.07435", "categories": ["cs.SE", "cs.HC"], "pdf": "https://arxiv.org/pdf/2510.07435", "abs": "https://arxiv.org/abs/2510.07435", "authors": ["Zixuan Feng", "Sadia Afroz", "Anita Sarma"], "title": "Modeling Developer Burnout with GenAI Adoption", "comment": "10 pages, LLM", "summary": "Generative AI (GenAI) is rapidly reshaping software development workflows.\nWhile prior studies emphasize productivity gains, the adoption of GenAI also\nintroduces new pressures that may harm developers' well-being. In this paper,\nwe investigate the relationship between the adoption of GenAI and developers'\nburnout. We utilized the Job Demands--Resources (JD--R) model as the analytic\nlens in our empirical study. We employed a concurrent embedded mixed-methods\nresearch design, integrating quantitative and qualitative evidence. We first\nsurveyed 442 developers across diverse organizations, roles, and levels of\nexperience. We then employed Partial Least Squares--Structural Equation\nModeling (PLS-SEM) and regression to model the relationships among job demands,\njob resources, and burnout, complemented by a qualitative analysis of\nopen-ended responses to contextualize the quantitative findings. Our results\nshow that GenAI adoption heightens burnout by increasing job demands, while job\nresources and positive perceptions of GenAI mitigate these effects, reframing\nadoption as an opportunity."}
{"id": "2510.07811", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.07811", "abs": "https://arxiv.org/abs/2510.07811", "authors": ["Aryan Poduri"], "title": "Adaptive Execution Scheduler for DataDios SmartDiff", "comment": "4 pages, 1 figure", "summary": "We present an adaptive scheduler for a single differencing engine (SmartDiff)\nwith two execution modes: (i) in-memory threads and (ii) Dask based\nparallelism. The scheduler continuously tunes batch size and worker/thread\ncount within fixed CPU and memory budgets to minimize p95 latency. A\nlightweight preflight profiler estimates bytes/row and I/O rate; an online\ncost/memory model prunes unsafe actions; and a guarded hill-climb policy favors\nlower latency with backpressure and straggler mitigation. Backend selection is\ngated by a conservative working-set estimate so that in-memory execution is\nchosen when safe, otherwise Dask is used. Across synthetic and public tabular\nbenchmarks, the scheduler reduces p95 latency by 23 to 28 percent versus a\ntuned warm-up heuristic (and by 35 to 40 percent versus fixed grid baselines),\nwhile lowering peak memory by 16 to 22 percent (25 to 32 percent vs. fixed)\nwith zero OOMs and comparable throughput."}
{"id": "2510.07888", "categories": ["cs.MA"], "pdf": "https://arxiv.org/pdf/2510.07888", "abs": "https://arxiv.org/abs/2510.07888", "authors": ["Xinren Zhang", "Sixi Cheng", "Zixin Zhong", "Jiadong Yu"], "title": "Network Topology and Information Efficiency of Multi-Agent Systems: Study based on MARL", "comment": null, "summary": "Multi-agent systems (MAS) solve complex problems through coordinated\nautonomous entities with individual decision-making capabilities. While\nMulti-Agent Reinforcement Learning (MARL) enables these agents to learn\nintelligent strategies, it faces challenges of non-stationarity and partial\nobservability. Communications among agents offer a solution, but questions\nremain about its optimal structure and evaluation. This paper explores two\nunderexamined aspects: communication topology and information efficiency. We\ndemonstrate that directed and sequential topologies improve performance while\nreducing communication overhead across both homogeneous and heterogeneous\ntasks. Additionally, we introduce two metrics -- Information Entropy Efficiency\nIndex (IEI) and Specialization Efficiency Index (SEI) -- to evaluate message\ncompactness and role differentiation. Incorporating these metrics into training\nobjectives improves success rates and convergence speed. Our findings highlight\nthat designing adaptive communication topologies with information-efficient\nmessaging is essential for effective coordination in complex MAS."}
{"id": "2510.08139", "categories": ["cs.NI", "cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08139", "abs": "https://arxiv.org/abs/2510.08139", "authors": ["Wenyang Jia", "Jingjing Wang", "Ziwei Yan", "Xiangli Peng", "Guohui Yuan"], "title": "BlockSDN: Towards a High-Performance Blockchain via Software-Defined Cross Networking optimization", "comment": null, "summary": "The scalability of blockchain systems is constrained by inefficient P2P\nbroadcasting, as most existing optimizations focus only on the logical layer\nwithout considering physical network conditions. To address this, we propose\nBlockSDN, the first SDN-based integrated architecture for blockchain. BlockSDN\nemploys a distributed control plane for a global network view, a graph engine\nfor hierarchical clustering, and a hybrid macro-micro neighbor selection with\nhierarchical broadcasting. A dedicated simulation platform shows that BlockSDN\nreduces global block synchronization time by 65% and 55% compared to Gossip and\nMercury, respectively.These results highlight the potential of SDN-enabled\ncross-layer coordination to significantly enhance blockchain scalability and\nperformance."}
{"id": "2510.07719", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.07719", "abs": "https://arxiv.org/abs/2510.07719", "authors": ["Parker Hao Tian", "Zahra Yousefijamarani", "Alaa Alameldeen"], "title": "DL-PIM: Improving Data Locality in Processing-in-Memory Systems", "comment": null, "summary": "PIM architectures aim to reduce data transfer costs between processors and\nmemory by integrating processing units within memory layers. Prior PIM\narchitectures have shown potential to improve energy efficiency and\nperformance. However, such advantages rely on data proximity to the processing\nunits performing computations. Data movement overheads can degrade PIM's\nperformance and energy efficiency due to the need to move data between a\nprocessing unit and a distant memory location. %they face challenges due to the\noverhead of transferring data from remote memory locations to processing units\ninside memory for computation. In this paper, we demonstrate that a large\nfraction of PIM's latency per memory request is attributed to data transfers\nand queuing delays from remote memory accesses. To improve PIM's data locality,\nwe propose DL-PIM, a novel architecture that dynamically detects the overhead\nof data movement, and proactively moves data to a reserved area in the local\nmemory of the requesting processing unit. DL-PIM uses a distributed\naddress-indirection hardware lookup table to redirect traffic to the current\ndata location. We propose DL-PIM implementations on two 3D stacked memories:\nHMC and HBM. While some workloads benefit from DL-PIM, others are negatively\nimpacted by the additional latency due to indirection accesses. Therefore, we\npropose an adaptive mechanism that assesses the cost and benefit of indirection\nand dynamically enables or disables it to prevent degrading workloads that\nsuffer from indirection. Overall, DL-PIM reduces the average memory latency per\nrequest by 54% in HMC and 50% in HBM which resulted in performance improvement\nof 15% for workloads with substantial data reuse in HMC and 5% in HBM. For all\nrepresentative workloads, DL-PIM achieved a 6% speedup in HMC and a 3% speedup\nin HBM, showing that DL-PIM enhances data locality and overall system\nperformance."}
{"id": "2510.07529", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07529", "abs": "https://arxiv.org/abs/2510.07529", "authors": ["Carol Hanna", "Federica Sarro", "Mark Harman", "Justyna Petke"], "title": "HotBugs.jar: A Benchmark of Hot Fixes for Time-Critical Bugs", "comment": null, "summary": "Hot fixes are urgent, unplanned changes deployed to production systems to\naddress time-critical issues. Despite their importance, no existing evaluation\nbenchmark focuses specifically on hot fixes. We present HotBugs$.$jar, the\nfirst dataset dedicated to real-world hot fixes. From an initial mining of 10\nactive Apache projects totaling over 190K commits and 150K issue reports, we\nidentified 746 software patches that met our hot-fix criteria. After manual\nevaluation, 679 were confirmed as genuine hot fixes, of which 110 are\nreproducible using a test suite. Building upon the Bugs$.$jar framework,\nHotBugs$.$jar integrates these 110 reproducible cases and makes available all\n679 manually validated hot fixes, each enriched with comprehensive metadata to\nsupport future research. Each hot fix was systematically identified using Jira\nissue data, validated by independent reviewers, and packaged in a reproducible\nformat with buggy and fixed versions, test suites, and metadata. HotBugs$.$jar\nhas already been adopted as the official challenge dataset for the Search-Based\nSoftware Engineering (SBSE) Conference Challenge Track, demonstrating its\nimmediate impact. This benchmark enables the study and evaluation of tools for\nrapid debugging, automated repair, and production-grade resilience in modern\nsoftware systems to drive research in this essential area forward."}
{"id": "2510.08164", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08164", "abs": "https://arxiv.org/abs/2510.08164", "authors": ["Marco Picone", "Samuele Burattini", "Marco Melloni", "Prasad Talasila", "Davide Ziglioli", "Matteo Martinelli", "Nicola Bicocchi", "Alessandro Ricci", "Peter Gorm Larsen"], "title": "A Multi-Simulation Bridge for IoT Digital Twins", "comment": null, "summary": "The increasing capabilities of Digital Twins (DTs) in the context of the\nInternet of Things (IoT) and Industrial IoT (IIoT) call for seamless\nintegration with simulation platforms to support system design, validation, and\nreal-time operation. This paper introduces the concept, design, and\nexperimental evaluation of the DT Simulation Bridge - a software framework that\nenables diverse interaction patterns between active DTs and simulation\nenvironments. The framework supports both the DT development lifecycle and the\nincorporation of simulations during active operation. Through bidirectional\ndata exchange, simulations can update DT models dynamically, while DTs provide\nreal-time feedback to adapt simulation parameters. We describe the\narchitectural design and core software components that ensure flexible\ninteroperability and scalable deployment. Experimental results show that the DT\nSimulation Bridge enhances design agility, facilitates virtual commissioning,\nand supports live behavioral analysis under realistic conditions, demonstrating\nits effectiveness across a range of industrial scenarios."}
{"id": "2510.08137", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.08137", "abs": "https://arxiv.org/abs/2510.08137", "authors": ["Anastasios Petropoulos", "Theodore Antonakopoulos"], "title": "A Scalable FPGA Architecture With Adaptive Memory Utilization for GEMM-Based Operations", "comment": null, "summary": "Deep neural network (DNN) inference relies increasingly on specialized\nhardware for high computational efficiency. This work introduces a\nfield-programmable gate array (FPGA)-based dynamically configurable accelerator\nfeaturing systolic arrays, high-bandwidth memory, and UltraRAMs. We present two\nprocessing unit (PU) configurations with different computing capabilities using\nthe same interfaces and peripheral blocks. By instantiating multiple PUs and\nemploying a heuristic weight transfer schedule, the architecture achieves\nnotable throughput efficiency over prior works. Moreover, we outline how the\narchitecture can be extended to emulate analog in-memory computing (AIMC)\ndevices to aid next-generation heterogeneous AIMC chip designs and investigate\ndevice-level noise behavior. Overall, this brief presents a versatile DNN\ninference acceleration architecture adaptable to various models and future FPGA\ndesigns."}
{"id": "2510.07604", "categories": ["cs.SE", "D.2.4"], "pdf": "https://arxiv.org/pdf/2510.07604", "abs": "https://arxiv.org/abs/2510.07604", "authors": ["Yubo Bai", "Tapti Palit"], "title": "RustAssure: Differential Symbolic Testing for LLM-Transpiled C-to-Rust Code", "comment": "13 pages to appear in Proceedings of ASE 2025", "summary": "Rust is a memory-safe programming language that significantly improves\nsoftware security. Existing codebases written in unsafe memory languages, such\nas C, must first be transpiled to Rust to take advantage of Rust's improved\nsafety guarantees. RustAssure presents a system that uses Large Language Models\n(LLMs) to automatically transpile existing C codebases to Rust. RustAssure uses\nprompt engineering techniques to maximize the chances of the LLM generating\nidiomatic and safe Rust code. Moreover, because LLMs often generate code with\nsubtle bugs that can be missed under traditional unit or fuzz testing,\nRustAssure performs differential symbolic testing to establish the semantic\nsimilarity between the original C and LLM-transpiled Rust code. We evaluated\nRustAssure with five real-world applications and libraries, and showed that our\nsystem is able to generate compilable Rust functions for 89.8% of all C\nfunctions, of which 69.9% produced equivalent symbolic return values for both\nthe C and Rust functions."}
{"id": "2510.08180", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08180", "abs": "https://arxiv.org/abs/2510.08180", "authors": ["Natalie Carl", "Tobias Pfandzelter", "David Bermbach"], "title": "Towards Energy-Efficient Serverless Computing with Hardware Isolation", "comment": null, "summary": "Serverless computing provides just-in-time infrastructure provisioning with\nrapid elasticity and a finely-grained pricing model. As full control of\nresource allocation is in the hands of the cloud provider and applications only\nconsume resources when they actually perform work, we believe that serverless\ncomputing is uniquely positioned to maximize energy efficiency.\n  However, the focus of current serverless platforms is to run hundreds or\nthousands of serverless functions from different tenants on traditional server\nhardware, requiring expensive software isolation mechanisms and a high degree\nof overprovisioning, i.e., idle servers, to anticipate load spikes. With shared\ncaches, high clock frequencies, and many-core architectures, servers today are\noptimized for large, singular workloads but not to run thousands of isolated\nfunctions.\n  We propose rethinking the serverless hardware architecture to align it with\nthe requirements of serverless software. Specifically, we propose using\nhardware isolation with individual processors per function instead of software\nisolation resulting in a serverless hardware stack that consumes energy only\nwhen an application actually performs work. In preliminary evaluation with real\nhardware and a typical serverless workload we find that this could reduce\nenergy consumption overheads by 90.63% or an average 70.8MW."}
{"id": "2510.08351", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.08351", "abs": "https://arxiv.org/abs/2510.08351", "authors": ["Qingxiu Liu", "Jiazhen Cai", "Siyuan Sheng", "Yuhui Chen", "Lu Tang", "Zhirong Shen", "Patrick P. C. Lee"], "title": "FMCache: File-System Metadata Caching in Programmable Switches", "comment": "14 pages", "summary": "Fast and scalable metadata management across multiple metadata servers is\ncrucial for distributed file systems to handle numerous files and directories.\nClient-side caching of frequently accessed metadata can mitigate server loads,\nbut incurs significant overhead and complexity in maintaining cache consistency\nwhen the number of clients increases. We propose FMCache, an in-switch\nfile-system metadata caching framework that leverages programmable switches to\nserve file-system metadata requests from multiple clients directly in the\nswitch data plane. Unlike prior in-switch key-value caching approaches, FMCache\naddresses file-system-specific path dependencies under stringent switch\nresource constraints. We implement FMCache atop Hadoop HDFS and evaluate it on\na Tofino-switch testbed using real-world file-system metadata workloads.\nFMCache achieves up to 181.6% higher throughput than vanilla HDFS and\ncomplements client-side caching with additional throughput gains of up to\n139.6%. It also incurs low latencies and limited switch resource usage."}
{"id": "2510.07740", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.07740", "abs": "https://arxiv.org/abs/2510.07740", "authors": ["Dezhi Ran", "Yuan Cao", "Mengzhou Wu", "Simin Chen", "Yuzhe Guo", "Jun Ren", "Zihe Song", "Hao Yu", "Jialei Wei", "Linyi Li", "Wei Yang", "Baishakhi Ray", "Tao Xie"], "title": "AppForge: From Assistant to Independent Developer -- Are GPTs Ready for Software Development?", "comment": "Under Review. Benchmark and leadboards at\n  https://appforge-bench.github.io/", "summary": "Large language models (LLMs) have demonstrated remarkable capability in\nfunction-level code generation tasks. Unlike isolated functions, real-world\napplications demand reasoning over the entire software system: developers must\norchestrate how different components interact, maintain consistency across\nstates over time, and ensure the application behaves correctly within the\nlifecycle and framework constraints. Yet, no existing benchmark adequately\nevaluates whether LLMs can bridge this gap and construct entire software\nsystems from scratch. To address this gap, we propose APPFORGE, a benchmark\nconsisting of 101 software development problems drawn from real-world Android\napps. Given a natural language specification detailing the app functionality, a\nlanguage model is tasked with implementing the functionality into an Android\napp from scratch. Developing an Android app from scratch requires understanding\nand coordinating app states, lifecycle management, and asynchronous operations,\ncalling for LLMs to generate context-aware, robust, and maintainable code. To\nconstruct APPFORGE, we design a multi-agent system to automatically summarize\nthe main functionalities from app documents and navigate the app to synthesize\ntest cases validating the functional correctness of app implementation.\nFollowing rigorous manual verification by Android development experts, APPFORGE\nincorporates the test cases within an automated evaluation framework that\nenables reproducible assessment without human intervention, making it easily\nadoptable for future research. Our evaluation on 12 flagship LLMs show that all\nevaluated models achieve low effectiveness, with the best-performing model\n(GPT-5) developing only 18.8% functionally correct applications, highlighting\nfundamental limitations in current models' ability to handle complex,\nmulti-component software engineering challenges."}
{"id": "2510.08228", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08228", "abs": "https://arxiv.org/abs/2510.08228", "authors": ["Quentin Renau", "Amjad Ullah", "Emma Hart"], "title": "Distributed Resource Selection for Self-Organising Cloud-Edge Systems", "comment": "This paper is accepted for publication in the 23rd IEEE International\n  Symposium on Network Computing and Applications", "summary": "This paper presents a distributed resource selection mechanism for diverse\ncloud-edge environments, enabling dynamic and context-aware allocation of\nresources to meet the demands of complex distributed applications. By\ndistributing the decision-making process, our approach ensures efficiency,\nscalability, and resilience in highly dynamic cloud-edge environments where\ncentralised coordination becomes a bottleneck. The proposed mechanism aims to\nfunction as a core component of a broader, distributed, and self-organising\norchestration system that facilitates the intelligent placement and adaptation\nof applications in real-time. This work leverages a consensus-based mechanism\nutilising local knowledge and inter-agent collaboration to achieve efficient\nresults without relying on a central controller, thus paving the way for\ndistributed orchestration. Our results indicate that computation time is the\nkey factor influencing allocation decisions. Our approach consistently delivers\nrapid allocations without compromising optimality or incurring additional cost,\nachieving timely results at scale where exhaustive search is infeasible and\ncentralised heuristics run up to 30 times slower."}
{"id": "2510.08544", "categories": ["cs.AR", "cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.08544", "abs": "https://arxiv.org/abs/2510.08544", "authors": ["Hengrui Zhang", "Pratyush Patel", "August Ning", "David Wentzlaff"], "title": "SPAD: Specialized Prefill and Decode Hardware for Disaggregated LLM Inference", "comment": null, "summary": "Large Language Models (LLMs) have gained popularity in recent years, driving\nup the demand for inference. LLM inference is composed of two phases with\ndistinct characteristics: a compute-bound prefill phase followed by a\nmemory-bound decode phase. To efficiently serve LLMs, prior work proposes\nprefill-decode disaggregation to run each phase on separate hardware. However,\nexisting hardware poorly matches the different requirements of each phase.\nCurrent datacenter GPUs and TPUs follow a more-is-better design philosophy that\nmaximizes compute and memory resources, causing memory bandwidth\nunderutilization in the prefill phase and compute underutilization in the\ndecode phase. Such underutilization directly translates into increased serving\ncosts.\n  This paper proposes SPAD (Specialized Prefill and Decode hardware), adopting\na less-is-more methodology to design specialized chips tailored to the distinct\ncharacteristics of prefill and decode phases. The proposed Prefill Chips have\nlarger systolic arrays and use cost-effective GDDR memory, whereas the proposed\nDecode Chips retain high memory bandwidth but reduce compute capacity. Compared\nto modeled H100s, simulations show that the proposed Prefill Chips deliver 8%\nhigher prefill performance on average at 52% lower hardware cost, while the\nproposed Decode Chips achieve 97% of the decode performance with 28% lower TDP.\n  End-to-end simulations on production traces show that SPAD reduces hardware\ncost by 19%-41% and TDP by 2%-17% compared to modeled baseline clusters while\noffering the same performance. Even when models and workloads change, SPAD can\nreallocate either type of chip to run either phase and still achieve 11%-43%\nlower hardware costs, demonstrating the longevity of the SPAD design."}
{"id": "2510.07815", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07815", "abs": "https://arxiv.org/abs/2510.07815", "authors": ["Zeyu Sun", "Jingjing Liang", "Weiyi Wang", "Chenyao Suo", "Junjie Chen", "Fanjiang Xu"], "title": "Interleaved Learning and Exploration: A Self-Adaptive Fuzz Testing Framework for MLIR", "comment": null, "summary": "MLIR (Multi-Level Intermediate Representation) has rapidly become a\nfoundational technology for modern compiler frameworks, enabling extensibility\nacross diverse domains. However, ensuring the correctness and robustness of\nMLIR itself remains challenging. Existing fuzzing approaches-based on manually\ncrafted templates or rule-based mutations-struggle to generate sufficiently\ndiverse and semantically valid test cases, making it difficult to expose subtle\nor deep-seated bugs within MLIR's complex and evolving code space. In this\npaper, we present FLEX, a novel self-adaptive fuzzing framework for MLIR. FLEX\nleverages neural networks for program generation, a perturbed sampling strategy\nto encourage diversity, and a feedback-driven augmentation loop that\niteratively improves its model using both crashing and non-crashing test cases.\nStarting from a limited seed corpus, FLEX progressively learns valid syntax and\nsemantics and autonomously produces high-quality test inputs. We evaluate FLEX\non the upstream MLIR compiler against four state-of-the-art fuzzers. In a\n30-day campaign, FLEX discovers 80 previously unknown bugs-including multiple\nnew root causes and parser bugs-while in 24-hour fixed-revision comparisons, it\ndetects 53 bugs (over 3.5x as many as the best baseline) and achieves 28.2%\ncode coverage, outperforming the next-best tool by 42%. Ablation studies\nfurther confirm the critical role of both perturbed generation and diversity\naugmentation in FLEX's effectiveness."}
{"id": "2510.08244", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.08244", "abs": "https://arxiv.org/abs/2510.08244", "authors": ["Dominick Banasik", "Varsha Dani", "Fabien Dufoulon", "Aayush Gupta", "Thomas P. Hayes", "Gopal Pandurangan"], "title": "Energy-Efficient Maximal Independent Sets in Radio Networks", "comment": null, "summary": "The maximal independent set (MIS) is one of the most fundamental problems in\ndistributed computing, and it has been studied intensively for over four\ndecades. This paper focuses on the MIS problem in the Radio Network model, a\nstandard model widely used to model wireless networks, particularly ad hoc\nwireless and sensor networks. Energy is a premium resource in these networks,\nwhich are typically battery-powered. Hence, designing distributed algorithms\nthat use as little energy as possible is crucial. We use the well-established\nenergy model where a node can be sleeping or awake in a round, and only the\nawake rounds (when it can send or listen) determine the energy complexity of\nthe algorithm, which we want to minimize.\n  We present new, more energy-efficient MIS algorithms in radio networks with\narbitrary and unknown graph topology. We present algorithms for two popular\nvariants of the radio model -- with collision detection (CD) and without\ncollision detection (no-CD). Specifically, we obtain the following results:\n  1. CD model: We present a randomized distributed MIS algorithm with energy\ncomplexity $O(\\log n)$, round complexity $O(\\log^2 n)$, and failure probability\n$1 / poly(n)$, where $n$ is the network size. We show that our energy\ncomplexity is optimal by showing a matching $\\Omega(\\log n)$ lower bound.\n  2. no-CD model: In the more challenging no-CD model, we present a randomized\ndistributed MIS algorithm with energy complexity $O(\\log^2n \\log \\log n)$,\nround complexity $O(\\log^3 n \\log \\Delta)$, and failure probability $1 /\npoly(n)$. The energy complexity of our algorithm is significantly lower than\nthe round (and energy) complexity of $O(\\log^3 n)$ of the best known\ndistributed MIS algorithm of Davies [PODC 2023] for arbitrary graph topology."}
{"id": "2510.07834", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07834", "abs": "https://arxiv.org/abs/2510.07834", "authors": ["Lingjun Liu", "Feiran Qin", "Owolabi Legunsen", "Marcelo d'Amorim"], "title": "Bug Histories as Sources of Compiler Fuzzing Mutators", "comment": null, "summary": "Bugs in compilers, which are critical infrastructure today, can have outsized\nnegative impacts. Mutational fuzzers aid compiler bug detection by\nsystematically mutating compiler inputs, i.e., programs. Their effectiveness\ndepends on the quality of the mutators used. Yet, no prior work used compiler\nbug histories as a source of mutators. We propose IssueMut, the first approach\nfor extracting compiler fuzzing mutators from bug histories. Our insight is\nthat bug reports contain hints about program elements that induced compiler\nbugs; they can guide fuzzers towards similar bugs. IssueMut uses an automated\nmethod to mine mutators from bug reports and retrofit such mutators into\nexisting mutational compiler fuzzers. Using IssueMut, we mine 587 mutators from\n1760 GCC and LLVM bug reports. Then, we run IssueMut on these compilers, with\nall their test inputs as seed corpora. We find that \"bug history\" mutators are\neffective: they find new bugs that a state-of-the-art mutational compiler\nfuzzer misses-28 in GCC and 37 in LLVM. Of these, 60 were confirmed or fixed,\nvalidating our idea that bug histories have rich information that compiler\nfuzzers should leverage."}
{"id": "2510.08536", "categories": ["cs.DC", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.08536", "abs": "https://arxiv.org/abs/2510.08536", "authors": ["Gregor Olenik", "Marcel Koch", "Hartwig Anzt"], "title": "Investigating Matrix Repartitioning to Address the Over- and Undersubscription Challenge for a GPU-based CFD Solver", "comment": "2025 Workshop: HPC on Heterogeneous Hardware (H3)", "summary": "Modern high-performance computing (HPC) increasingly relies on GPUs, but\nintegrating GPU acceleration into complex scientific frameworks like OpenFOAM\nremains a challenge. Existing approaches either fully refactor the codebase or\nuse plugin-based GPU solvers, each facing trade-offs between performance and\ndevelopment effort. In this work, we address the limitations of plugin-based\nGPU acceleration in OpenFOAM by proposing a repartitioning strategy that better\nbalances CPU matrix assembly and GPU-based linear solves. We present a detailed\ncomputational model, describe a novel matrix repartitioning and update\nprocedure, and evaluate its performance on large-scale CFD simulations. Our\nresults show that the proposed method significantly mitigates oversubscription\nissues, improving solver performance and resource utilization in heterogeneous\nCPU-GPU environments."}
{"id": "2510.07941", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.07941", "abs": "https://arxiv.org/abs/2510.07941", "authors": ["Srijita Basu", "Haraldsson Bengt", "Miroslaw Staron", "Christian Berger", "Jennifer Horkoff", "Magnus Almgren"], "title": "An AUTOSAR-Aligned Architectural Study of Vulnerabilities in Automotive SoC Software", "comment": "16 pages, 7 figures, 18th International Conference on the Quality of\n  Information and Communications Technology", "summary": "Cooperative, Connected and Automated Mobility (CCAM) are complex\ncyber-physical systems (CPS) that integrate computation, communication, and\ncontrol in safety-critical environments. At their core, System-on-Chip (SoC)\nplatforms consolidate processing units, communication interfaces, AI\naccelerators, and security modules into a single chip. AUTOSAR (AUTomotive Open\nSystem ARchitecture) standard was developed in the automotive domain to better\nmanage this complexity, defining layered software structures and interfaces to\nfacilitate reuse of HW/SW components. However, in practice, this integrated SoC\nsoftware architecture still poses security challenges, particularly in\nreal-time, safety-critical environments. Recent reports highlight a surge in\nSoC-related vulnerabilities, yet systematic analysis of their root causes and\nimpact within AUTOSAR-aligned architectures is lacking. This study fills that\ngap by analyzing 180 publicly reported automotive SoC vulnerabilities, mapped\nto a representative SoC software architecture model that is aligned with\nAUTOSAR principles for layered abstraction and service orientation. We identify\n16 root causes and 56 affected software modules, and examine mitigation delays\nacross Common Weakness Enumeration (CWE) categories and architectural layers.\nWe uncover dominant vulnerability patterns and critical modules with prolonged\npatch delays, and provide actionable insights for securing automotive CPS\nplatforms, including guides for improved detection, prioritization, and\nlocalization strategies for SoC software architectures in SoC-based vehicle\nplatforms."}
{"id": "2510.08072", "categories": ["cs.NI", "cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08072", "abs": "https://arxiv.org/abs/2510.08072", "authors": ["Vamsi Addanki"], "title": "When Light Bends to the Collective Will: A Theory and Vision for Adaptive Photonic Scale-up Domains", "comment": null, "summary": "As chip-to-chip silicon photonics gain traction for their bandwidth and\nenergy efficiency, collective communication has emerged as a critical\nbottleneck in scale-up systems. Programmable photonic interconnects offer a\npromising path forward: by dynamically reconfiguring the fabric, they can\nestablish direct, high-bandwidth optical paths between communicating endpoints\n-- \\emph{synchronously and guided by the structure of collective operations}\n(e.g., AllReduce). However, realizing this vision -- \\emph{when light bends to\nthe collective will} -- requires navigating a fundamental trade-off between\nreconfiguration delay and the performance gains of adaptive topologies.\n  In this paper, we present a simple theoretical framework for adaptive\nphotonic scale-up domains that makes this trade-off explicit and clarifies when\nreconfiguration is worthwhile. Along the way, we highlight a connection -- not\nsurprising but still powerful -- between the Birkhoff--von Neumann (BvN)\ndecomposition, maximum concurrent flow (a classic measure of network\nthroughput), and the well-known $\\alpha$-$\\beta$ cost model for collectives.\nFinally, we outline a research agenda in algorithm design and systems\nintegration that can build on this foundation."}
{"id": "2510.08005", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.08005", "abs": "https://arxiv.org/abs/2510.08005", "authors": ["Utku Boran Torun", "Mehmet Taha Demircan", "Mahmut Furkan Gön", "Eray Tüzün"], "title": "Past, Present, and Future of Bug Tracking in the Generative AI Era", "comment": "Submitted to ACM TOSEM Special Issue: 2030 Software Engineering\n  Roadmap", "summary": "Traditional bug tracking systems rely heavily on manual reporting,\nreproduction, triaging, and resolution, each carried out by different\nstakeholders such as end users, customer support, developers, and testers. This\ndivision of responsibilities requires significant coordination and widens the\ncommunication gap between non-technical users and technical teams, slowing the\nprocess from bug discovery to resolution. Moreover, current systems are highly\nasynchronous; users often wait hours or days for a first response, delaying\nfixes and contributing to frustration. This paper examines the evolution of bug\ntracking, from early paper-based reporting to today's web-based and SaaS\nplatforms. Building on this trajectory, we propose an AI-powered bug tracking\nframework that augments existing tools with intelligent, large language model\n(LLM)-driven automation. Our framework addresses two main challenges: reducing\ntime-to-fix and minimizing human overhead. Users report issues in natural\nlanguage, while AI agents refine reports, attempt reproduction, and request\nmissing details. Reports are then classified, invalid ones resolved through\nno-code fixes, and valid ones localized and assigned to developers. LLMs also\ngenerate candidate patches, with human oversight ensuring correctness. By\nintegrating automation into each phase, our framework accelerates response\ntimes, improves collaboration, and strengthens software maintenance practices\nfor a more efficient, user-centric future."}
{"id": "2510.08139", "categories": ["cs.NI", "cs.DC"], "pdf": "https://arxiv.org/pdf/2510.08139", "abs": "https://arxiv.org/abs/2510.08139", "authors": ["Wenyang Jia", "Jingjing Wang", "Ziwei Yan", "Xiangli Peng", "Guohui Yuan"], "title": "BlockSDN: Towards a High-Performance Blockchain via Software-Defined Cross Networking optimization", "comment": null, "summary": "The scalability of blockchain systems is constrained by inefficient P2P\nbroadcasting, as most existing optimizations focus only on the logical layer\nwithout considering physical network conditions. To address this, we propose\nBlockSDN, the first SDN-based integrated architecture for blockchain. BlockSDN\nemploys a distributed control plane for a global network view, a graph engine\nfor hierarchical clustering, and a hybrid macro-micro neighbor selection with\nhierarchical broadcasting. A dedicated simulation platform shows that BlockSDN\nreduces global block synchronization time by 65% and 55% compared to Gossip and\nMercury, respectively.These results highlight the potential of SDN-enabled\ncross-layer coordination to significantly enhance blockchain scalability and\nperformance."}
{"id": "2510.08200", "categories": ["cs.SE", "68N15", "D.2.13"], "pdf": "https://arxiv.org/pdf/2510.08200", "abs": "https://arxiv.org/abs/2510.08200", "authors": ["Alexander Hellwig", "Nico Jansen", "Bernhard Rumpe"], "title": "Building Whitespace-Sensitive Languages Using Whitespace-Insensitive Components", "comment": "11 pages, 4 figures, 6 listings", "summary": "In Software Language Engineering, there is a trend towards reusability by\ncomposing modular language components. However, this reusability is severely\ninhibited by a gap in integrating whitespace-sensitive and\nwhitespace-insensitive languages. There is currently no consistent procedure\nfor seamlessly reusing such language components in both cases, such that\nlibraries often cannot be reused, and whitespacesensitive languages are\ndeveloped from scratch. This paper presents a technique for using modular,\nwhitespaceinsensitive language modules to construct whitespace sensitive\nlanguages by pre-processing language artifacts before parsing. The approach is\nevaluated by reconstructing a simplified version of the programming language\nPython. Our solution aims to increase the reusability of existing language\ncomponents to reduce development time and increase the overall quality of\nsoftware languages."}
{"id": "2510.08544", "categories": ["cs.AR", "cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.08544", "abs": "https://arxiv.org/abs/2510.08544", "authors": ["Hengrui Zhang", "Pratyush Patel", "August Ning", "David Wentzlaff"], "title": "SPAD: Specialized Prefill and Decode Hardware for Disaggregated LLM Inference", "comment": null, "summary": "Large Language Models (LLMs) have gained popularity in recent years, driving\nup the demand for inference. LLM inference is composed of two phases with\ndistinct characteristics: a compute-bound prefill phase followed by a\nmemory-bound decode phase. To efficiently serve LLMs, prior work proposes\nprefill-decode disaggregation to run each phase on separate hardware. However,\nexisting hardware poorly matches the different requirements of each phase.\nCurrent datacenter GPUs and TPUs follow a more-is-better design philosophy that\nmaximizes compute and memory resources, causing memory bandwidth\nunderutilization in the prefill phase and compute underutilization in the\ndecode phase. Such underutilization directly translates into increased serving\ncosts.\n  This paper proposes SPAD (Specialized Prefill and Decode hardware), adopting\na less-is-more methodology to design specialized chips tailored to the distinct\ncharacteristics of prefill and decode phases. The proposed Prefill Chips have\nlarger systolic arrays and use cost-effective GDDR memory, whereas the proposed\nDecode Chips retain high memory bandwidth but reduce compute capacity. Compared\nto modeled H100s, simulations show that the proposed Prefill Chips deliver 8%\nhigher prefill performance on average at 52% lower hardware cost, while the\nproposed Decode Chips achieve 97% of the decode performance with 28% lower TDP.\n  End-to-end simulations on production traces show that SPAD reduces hardware\ncost by 19%-41% and TDP by 2%-17% compared to modeled baseline clusters while\noffering the same performance. Even when models and workloads change, SPAD can\nreallocate either type of chip to run either phase and still achieve 11%-43%\nlower hardware costs, demonstrating the longevity of the SPAD design."}
{"id": "2510.08536", "categories": ["cs.DC", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.08536", "abs": "https://arxiv.org/abs/2510.08536", "authors": ["Gregor Olenik", "Marcel Koch", "Hartwig Anzt"], "title": "Investigating Matrix Repartitioning to Address the Over- and Undersubscription Challenge for a GPU-based CFD Solver", "comment": "2025 Workshop: HPC on Heterogeneous Hardware (H3)", "summary": "Modern high-performance computing (HPC) increasingly relies on GPUs, but\nintegrating GPU acceleration into complex scientific frameworks like OpenFOAM\nremains a challenge. Existing approaches either fully refactor the codebase or\nuse plugin-based GPU solvers, each facing trade-offs between performance and\ndevelopment effort. In this work, we address the limitations of plugin-based\nGPU acceleration in OpenFOAM by proposing a repartitioning strategy that better\nbalances CPU matrix assembly and GPU-based linear solves. We present a detailed\ncomputational model, describe a novel matrix repartitioning and update\nprocedure, and evaluate its performance on large-scale CFD simulations. Our\nresults show that the proposed method significantly mitigates oversubscription\nissues, improving solver performance and resource utilization in heterogeneous\nCPU-GPU environments."}
